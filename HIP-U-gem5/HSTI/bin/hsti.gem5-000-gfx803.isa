
hsti.gem5-000-gfx803.hsaco:	file format elf64-amdgpu


Disassembly of section .text:

0000000000001000 <_Z16Histogram_kerneliiifPjS_Pi$local>:
	s_load_dwordx4 s[12:15], s[6:7], 0x4                       // 000000001000: C00A0303 00000004
	s_load_dwordx4 s[16:19], s[6:7], 0x10                      // 000000001008: C00A0403 00000010
	s_load_dwordx4 s[20:23], s[6:7], 0x20                      // 000000001010: C00A0503 00000020
	s_load_dword s0, s[4:5], 0x4                               // 000000001018: C0020002 00000004
	s_mov_b32 m0, -1                                           // 000000001020: BEFC00C1
	s_waitcnt lgkmcnt(0)                                       // 000000001024: BF8C007F
	s_and_b32 s6, s0, 0xffff                                   // 000000001028: 8606FF00 0000FFFF
	v_cmp_gt_i32_e64 s[0:1], s12, v0                           // 000000001030: D0C40000 0002000C
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000001038: BE822000
	s_cbranch_execz BB0_3                                      // 00000000103C: BF88000E
	v_lshlrev_b32_e32 v2, 2, v0                                // 000000001040: 24040082
	v_add_u32_e32 v2, vcc, 0, v2                               // 000000001044: 32040480
	s_lshl_b32 s7, s6, 2                                       // 000000001048: 8E078206
	s_mov_b64 s[10:11], 0                                      // 00000000104C: BE8A0180
	v_mov_b32_e32 v3, v0                                       // 000000001050: 7E060300

0000000000001054 <BB0_2>:
	v_add_u32_e32 v3, vcc, s6, v3                              // 000000001054: 32060606
	v_mov_b32_e32 v4, 0                                        // 000000001058: 7E080280
	v_cmp_le_i32_e32 vcc, s12, v3                              // 00000000105C: 7D86060C
	ds_write_b32 v2, v4                                        // 000000001060: D81A0000 00000402
	s_or_b64 s[10:11], vcc, s[10:11]                           // 000000001068: 878A0A6A
	v_add_u32_e32 v2, vcc, s7, v2                              // 00000000106C: 32040407
	s_andn2_b64 exec, exec, s[10:11]                           // 000000001070: 89FE0A7E
	s_cbranch_execnz BB0_2                                     // 000000001074: BF89FFF7

0000000000001078 <BB0_3>:
	s_or_b64 exec, exec, s[2:3]                                // 000000001078: 87FE027E
	v_cvt_f32_i32_e32 v2, s13                                  // 00000000107C: 7E040A0D
	s_load_dword s7, s[4:5], 0xc                               // 000000001080: C00201C2 0000000C
	s_lshl_b32 s2, s12, 2                                      // 000000001088: 8E02820C
	s_add_i32 s9, s2, 0                                        // 00000000108C: 81098002
	v_mul_f32_e32 v2, s14, v2                                  // 000000001090: 0A04040E
	v_cvt_i32_f32_e32 v2, v2                                   // 000000001094: 7E041102
	v_cmp_ge_f32_e64 s[2:3], s14, 0                            // 000000001098: D0460002 0001000E
	v_cmp_le_f32_e64 s[4:5], s14, 1.0                          // 0000000010A0: D0430004 0001E40E
	s_and_b64 s[10:11], s[2:3], s[4:5]                         // 0000000010A8: 868A0402
	s_and_b64 vcc, exec, s[10:11]                              // 0000000010AC: 86EA0A7E
	s_waitcnt lgkmcnt(0)                                       // 0000000010B0: BF8C007F
	s_barrier                                                  // 0000000010B4: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000010B8: BF8C007F
	s_cbranch_vccz BB0_5                                       // 0000000010BC: BF860004
	v_add_u32_e32 v2, vcc, s8, v2                              // 0000000010C0: 32040408
	s_mov_b32 m0, -1                                           // 0000000010C4: BEFC00C1
	s_cbranch_execz BB0_6                                      // 0000000010C8: BF880002
	s_branch BB0_9                                             // 0000000010CC: BF820015

00000000000010d0 <BB0_5>:
	s_mov_b32 m0, -1                                           // 0000000010D0: BEFC00C1

00000000000010d4 <BB0_6>:
	v_or_b32_e32 v2, v1, v0                                    // 0000000010D4: 28040101
	v_cmp_eq_u32_e32 vcc, 0, v2                                // 0000000010D8: 7D940480
	s_and_saveexec_b64 s[2:3], vcc                             // 0000000010DC: BE82206A
	s_cbranch_execz BB0_8                                      // 0000000010E0: BF880009
	v_mov_b32_e32 v2, s20                                      // 0000000010E4: 7E040214
	v_mov_b32_e32 v4, 1                                        // 0000000010E8: 7E080281
	v_mov_b32_e32 v3, s21                                      // 0000000010EC: 7E060215
	flat_atomic_add v2, v[2:3], v4 glc                         // 0000000010F0: DD090000 02000402
	v_mov_b32_e32 v3, s9                                       // 0000000010F8: 7E060209
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000010FC: BF8C0070
	ds_write_b32 v3, v2                                        // 000000001100: D81A0000 00000203

0000000000001108 <BB0_8>:
	s_or_b64 exec, exec, s[2:3]                                // 000000001108: 87FE027E
	v_mov_b32_e32 v2, s9                                       // 00000000110C: 7E040209
	s_waitcnt lgkmcnt(0)                                       // 000000001110: BF8C007F
	s_barrier                                                  // 000000001114: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000001118: BF8C007F
	ds_read_b32 v2, v2                                         // 00000000111C: D86C0000 02000002

0000000000001124 <BB0_9>:
	s_waitcnt lgkmcnt(0)                                       // 000000001124: BF8C007F
	v_cmp_le_i32_e32 vcc, s13, v2                              // 000000001128: 7D86040D
	s_and_b64 vcc, exec, vcc                                   // 00000000112C: 86EA6A7E
	s_cbranch_vccnz BB0_18                                     // 000000001130: BF870054
	v_or_b32_e32 v1, v1, v0                                    // 000000001134: 28020101
	v_cmp_eq_u32_e64 s[2:3], 0, v1                             // 000000001138: D0CA0002 00020280
	s_sub_i32 s8, 0, s6                                        // 000000001140: 81880680
	s_mov_b32 m0, -1                                           // 000000001144: BEFC00C1
	s_branch BB0_13                                            // 000000001148: BF82000B

000000000000114c <BB0_11>:
	s_or_b64 exec, exec, s[4:5]                                // 00000000114C: 87FE047E
	v_mov_b32_e32 v1, s9                                       // 000000001150: 7E020209
	s_waitcnt lgkmcnt(0)                                       // 000000001154: BF8C007F
	s_barrier                                                  // 000000001158: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 00000000115C: BF8C007F
	ds_read_b32 v2, v1                                         // 000000001160: D86C0000 02000001

0000000000001168 <BB0_12>:
	s_waitcnt lgkmcnt(0)                                       // 000000001168: BF8C007F
	v_cmp_le_i32_e32 vcc, s13, v2                              // 00000000116C: 7D86040D
	s_and_b64 vcc, exec, vcc                                   // 000000001170: 86EA6A7E
	s_cbranch_vccnz BB0_18                                     // 000000001174: BF870043

0000000000001178 <BB0_13>:
	v_mul_lo_u32 v1, v2, s6                                    // 000000001178: D2850001 00000D02
	v_mov_b32_e32 v5, s17                                      // 000000001180: 7E0A0211
	v_add_u32_e32 v3, vcc, v1, v0                              // 000000001184: 32060101
	v_ashrrev_i32_e32 v4, 31, v3                               // 000000001188: 2208069F
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 00000000118C: D28F0003 00020682
	v_add_u32_e32 v3, vcc, s16, v3                             // 000000001194: 32060610
	v_addc_u32_e32 v4, vcc, v5, v4, vcc                        // 000000001198: 38080905
	flat_load_dword v1, v[3:4]                                 // 00000000119C: DC500000 01000003
	v_mov_b32_e32 v3, 1                                        // 0000000011A4: 7E060281
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000011A8: BF8C0070
	v_mul_lo_u32 v1, v1, s12                                   // 0000000011AC: D2850001 00001901
	v_lshrrev_b32_e32 v1, 10, v1                               // 0000000011B4: 2002028A
	v_and_b32_e32 v1, 0x3ffffc, v1                             // 0000000011B8: 260202FF 003FFFFC
	v_add_u32_e32 v1, vcc, 0, v1                               // 0000000011C0: 32020280
	ds_add_u32 v1, v3                                          // 0000000011C4: D8000000 00000301
	s_and_b64 vcc, exec, s[10:11]                              // 0000000011CC: 86EA0A7E
	s_cbranch_vccz BB0_15                                      // 0000000011D0: BF860020
	v_cvt_f32_u32_e32 v1, s6                                   // 0000000011D4: 7E020C06
	v_rcp_iflag_f32_e32 v1, v1                                 // 0000000011D8: 7E024701
	v_mul_f32_e32 v1, 0x4f7ffffe, v1                           // 0000000011DC: 0A0202FF 4F7FFFFE
	v_cvt_u32_f32_e32 v1, v1                                   // 0000000011E4: 7E020F01
	v_mul_lo_u32 v3, s8, v1                                    // 0000000011E8: D2850003 00020208
	v_mul_hi_u32 v3, v1, v3                                    // 0000000011F0: D2860003 00020701
	v_add_u32_e32 v1, vcc, v3, v1                              // 0000000011F8: 32020303
	v_mul_hi_u32 v1, s7, v1                                    // 0000000011FC: D2860001 00020207
	v_mul_lo_u32 v3, v1, s6                                    // 000000001204: D2850003 00000D01
	v_add_u32_e32 v4, vcc, 1, v1                               // 00000000120C: 32080281
	v_sub_u32_e32 v3, vcc, s7, v3                              // 000000001210: 34060607
	v_cmp_le_u32_e64 s[4:5], s6, v3                            // 000000001214: D0CB0004 00020606
	v_cndmask_b32_e64 v1, v1, v4, s[4:5]                       // 00000000121C: D1000001 00120901
	v_subrev_u32_e32 v4, vcc, s6, v3                           // 000000001224: 36080606
	v_cndmask_b32_e64 v3, v3, v4, s[4:5]                       // 000000001228: D1000003 00120903
	v_add_u32_e32 v4, vcc, 1, v1                               // 000000001230: 32080281
	v_cmp_le_u32_e32 vcc, s6, v3                               // 000000001234: 7D960606
	v_cndmask_b32_e32 v1, v1, v4, vcc                          // 000000001238: 00020901
	v_mul_lo_u32 v3, v1, s6                                    // 00000000123C: D2850003 00000D01
	v_cmp_gt_u32_e32 vcc, s7, v3                               // 000000001244: 7D980607
	v_addc_u32_e32 v2, vcc, v1, v2, vcc                        // 000000001248: 38040501
	s_cbranch_execnz BB0_12                                    // 00000000124C: BF89FFC6
	s_branch BB0_15                                            // 000000001250: BF820000

0000000000001254 <BB0_16>:
	s_and_saveexec_b64 s[4:5], s[2:3]                          // 000000001254: BE842002
	s_cbranch_execz BB0_11                                     // 000000001258: BF88FFBC
	v_mov_b32_e32 v1, s20                                      // 00000000125C: 7E020214
	v_mov_b32_e32 v3, 1                                        // 000000001260: 7E060281
	v_mov_b32_e32 v2, s21                                      // 000000001264: 7E040215
	flat_atomic_add v1, v[1:2], v3 glc                         // 000000001268: DD090000 01000301
	v_mov_b32_e32 v2, s9                                       // 000000001270: 7E040209
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000001274: BF8C0070
	ds_write_b32 v2, v1                                        // 000000001278: D81A0000 00000102
	s_branch BB0_11                                            // 000000001280: BF82FFB2

0000000000001284 <BB0_18>:
	s_waitcnt lgkmcnt(0)                                       // 000000001284: BF8C007F
	s_barrier                                                  // 000000001288: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 00000000128C: BF8C007F
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000001290: BE822000
	s_cbranch_execz BB0_21                                     // 000000001294: BF880018
	v_lshlrev_b32_e32 v1, 2, v0                                // 000000001298: 24020082
	s_mov_b32 s3, 0                                            // 00000000129C: BE830080
	v_mov_b32_e32 v2, 0                                        // 0000000012A0: 7E040280
	s_lshl_b32 s2, s6, 2                                       // 0000000012A4: 8E028206
	s_mov_b64 s[4:5], 0                                        // 0000000012A8: BE840180
	s_mov_b32 m0, -1                                           // 0000000012AC: BEFC00C1

00000000000012b0 <BB0_20>:
	v_add_u32_e32 v3, vcc, 0, v1                               // 0000000012B0: 32060280
	ds_read_b32 v5, v3                                         // 0000000012B4: D86C0000 05000003
	v_mov_b32_e32 v4, s19                                      // 0000000012BC: 7E080213
	v_add_u32_e32 v3, vcc, s18, v1                             // 0000000012C0: 32060212
	v_addc_u32_e32 v4, vcc, v4, v2, vcc                        // 0000000012C4: 38080504
	v_add_u32_e32 v0, vcc, s6, v0                              // 0000000012C8: 32000006
	s_waitcnt lgkmcnt(0)                                       // 0000000012CC: BF8C007F
	flat_atomic_add v[3:4], v5                                 // 0000000012D0: DD080000 00000503
	v_cmp_le_i32_e64 s[0:1], s12, v0                           // 0000000012D8: D0C30000 0002000C
	v_mov_b32_e32 v3, s3                                       // 0000000012E0: 7E060203
	v_add_u32_e32 v1, vcc, s2, v1                              // 0000000012E4: 32020202
	s_or_b64 s[4:5], s[0:1], s[4:5]                            // 0000000012E8: 87840400
	v_addc_u32_e32 v2, vcc, v2, v3, vcc                        // 0000000012EC: 38040702
	s_andn2_b64 exec, exec, s[4:5]                             // 0000000012F0: 89FE047E
	s_cbranch_execnz BB0_20                                    // 0000000012F4: BF89FFEE

00000000000012f8 <BB0_21>:
	s_endpgm                                                   // 0000000012F8: BF810000
