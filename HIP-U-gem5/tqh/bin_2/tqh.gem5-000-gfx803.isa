
tqh.gem5-000-gfx803.hsaco:	file format elf64-amdgpu


Disassembly of section .text:

0000000000001000 <_Z15TQHistogram_gpuP6task_tPiS1_S1_S1_S1_iii$local>:
	s_load_dword s25, s[4:5], 0x4                              // 000000001000: C0020642 00000004
	s_load_dwordx8 s[8:15], s[6:7], 0x0                        // 000000001008: C00E0203 00000000
	s_load_dwordx4 s[16:19], s[6:7], 0x20                      // 000000001010: C00A0403 00000020
	s_load_dwordx4 s[20:23], s[6:7], 0x30                      // 000000001018: C00A0503 00000030
	v_lshlrev_b32_e32 v1, 2, v0                                // 000000001020: 24020082
	s_mov_b32 s6, 0                                            // 000000001024: BE860080
	s_add_i32 s7, 0, 12                                        // 000000001028: 81078C80
	s_waitcnt lgkmcnt(0)                                       // 00000000102C: BF8C007F
	s_and_b32 s23, s25, 0xffff                                 // 000000001030: 8617FF19 0000FFFF
	v_lshlrev_b16_e64 v4, 2, s25                               // 000000001038: D12A0004 00003282
	v_cmp_eq_u32_e64 s[0:1], 0, v0                             // 000000001040: D0CA0000 00020080
	v_cmp_gt_i32_e64 s[2:3], s22, v0                           // 000000001048: D0C40002 00020016
	v_cmp_gt_i32_e64 s[4:5], s21, v0                           // 000000001050: D0C40004 00020015
	v_add_u32_e32 v3, vcc, 0, v1                               // 000000001058: 32060280
	s_lshl_b32 s24, s23, 2                                     // 00000000105C: 8E188217
	v_mov_b32_e32 v2, 0                                        // 000000001060: 7E040280
	s_mov_b32 s25, 0xfedcfedc                                  // 000000001064: BE9900FF FEDCFEDC
	s_branch BB0_2                                             // 00000000106C: BF820002

0000000000001070 <BB0_1>:
	s_andn2_b64 vcc, exec, s[26:27]                            // 000000001070: 89EA1A7E
	s_cbranch_vccz BB0_29                                      // 000000001074: BF8600D9

0000000000001078 <BB0_2>:
	s_mov_b32 m0, -1                                           // 000000001078: BEFC00C1
	s_and_saveexec_b64 s[26:27], s[0:1]                        // 00000000107C: BE9A2000
	s_cbranch_execz BB0_12                                     // 000000001080: BF88005F
	v_mov_b32_e32 v6, s6                                       // 000000001084: 7E0C0206
	ds_read_b32 v11, v6                                        // 000000001088: D86C0000 0B000006
	s_mov_b64 s[28:29], 0                                      // 000000001090: BE9C0180
	s_branch BB0_5                                             // 000000001094: BF820005

0000000000001098 <BB0_4>:
	s_or_b64 exec, exec, s[34:35]                              // 000000001098: 87FE227E
	s_and_b64 s[30:31], exec, s[36:37]                         // 00000000109C: 869E247E
	s_or_b64 s[28:29], s[30:31], s[28:29]                      // 0000000010A0: 879C1C1E
	s_andn2_b64 exec, exec, s[28:29]                           // 0000000010A4: 89FE1C7E
	s_cbranch_execz BB0_11                                     // 0000000010A8: BF88002F

00000000000010ac <BB0_5>:
	s_waitcnt lgkmcnt(0)                                       // 0000000010AC: BF8C007F
	v_mov_b32_e32 v6, v11                                      // 0000000010B0: 7E0C030B
	v_ashrrev_i32_e32 v7, 31, v6                               // 0000000010B4: 220E0C9F
	v_lshlrev_b64 v[11:12], 2, v[6:7]                          // 0000000010B8: D28F000B 00020C82
	v_mov_b32_e32 v8, s15                                      // 0000000010C0: 7E10020F
	v_add_u32_e32 v7, vcc, s14, v11                            // 0000000010C4: 320E160E
	v_addc_u32_e32 v8, vcc, v8, v12, vcc                       // 0000000010C8: 38101908
	v_mov_b32_e32 v10, s13                                     // 0000000010CC: 7E14020D
	v_add_u32_e32 v9, vcc, s12, v11                            // 0000000010D0: 3212160C
	v_addc_u32_e32 v10, vcc, v10, v12, vcc                     // 0000000010D4: 3814190A
	flat_load_dword v13, v[7:8] glc                            // 0000000010D8: DC510000 0D000007
	flat_load_dword v14, v[9:10] glc                           // 0000000010E0: DC510000 0E000009
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000010E8: BF8C0070
	v_cmp_eq_u32_e64 s[30:31], v13, v14                        // 0000000010EC: D0CA001E 00021D0D
	s_and_b64 vcc, exec, s[30:31]                              // 0000000010F4: 86EA1E7E
	s_cbranch_vccnz BB0_9                                      // 0000000010F8: BF870011
	v_mov_b32_e32 v13, s11                                     // 0000000010FC: 7E1A020B
	v_add_u32_e32 v11, vcc, s10, v11                           // 000000001100: 3216160A
	v_addc_u32_e32 v12, vcc, v13, v12, vcc                     // 000000001104: 3818190D
	flat_load_dword v13, v[11:12] glc                          // 000000001108: DC510000 0D00000B
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000001110: BF8C0070
	v_cmp_lt_i32_e32 vcc, 0, v13                               // 000000001114: 7D821A80
	s_and_b64 vcc, exec, vcc                                   // 000000001118: 86EA6A7E
	s_cbranch_vccz BB0_8                                       // 00000000111C: BF860007
	v_mov_b32_e32 v5, -1                                       // 000000001120: 7E0A02C1
	flat_atomic_add v5, v[11:12], v5 glc                       // 000000001124: DD090000 0500050B
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000112C: BF8C0070
	v_cmp_gt_i32_e32 vcc, 1, v5                                // 000000001130: 7D880A81
	s_orn2_b64 s[30:31], vcc, exec                             // 000000001134: 8A9E7E6A
	s_branch BB0_9                                             // 000000001138: BF820001

000000000000113c <BB0_8>:
	s_mov_b64 s[30:31], -1                                     // 00000000113C: BE9E01C1

0000000000001140 <BB0_9>:
	s_mov_b64 s[36:37], -1                                     // 000000001140: BEA401C1
	s_and_saveexec_b64 s[34:35], s[30:31]                      // 000000001144: BEA2201E
	s_cbranch_execz BB0_4                                      // 000000001148: BF88FFD3
	v_add_u32_e32 v11, vcc, 1, v6                              // 00000000114C: 32160C81
	v_lshrrev_b32_e32 v12, 31, v11                             // 000000001150: 2018169F
	v_add_u32_e32 v12, vcc, v12, v11                           // 000000001154: 3218170C
	v_and_b32_e32 v12, -2, v12                                 // 000000001158: 261818C2
	v_subrev_u32_e32 v11, vcc, v12, v11                        // 00000000115C: 3616170C
	s_xor_b64 s[36:37], exec, -1                               // 000000001160: 88A4C17E
	s_branch BB0_4                                             // 000000001164: BF82FFCC

0000000000001168 <BB0_11>:
	s_or_b64 exec, exec, s[28:29]                              // 000000001168: 87FE1C7E
	v_mul_lo_u32 v11, v6, s20                                  // 00000000116C: D285000B 00002906
	v_add_u32_e32 v13, vcc, -1, v5                             // 000000001174: 321A0AC1
	v_mov_b32_e32 v14, s9                                      // 000000001178: 7E1C0209
	v_ashrrev_i32_e32 v12, 31, v11                             // 00000000117C: 2218169F
	v_lshlrev_b64 v[11:12], 3, v[11:12]                        // 000000001180: D28F000B 00021683
	v_add_u32_e32 v15, vcc, s8, v11                            // 000000001188: 321E1608
	v_addc_u32_e32 v16, vcc, v14, v12, vcc                     // 00000000118C: 3820190E
	v_ashrrev_i32_e32 v14, 31, v13                             // 000000001190: 221C1A9F
	v_lshlrev_b64 v[11:12], 3, v[13:14]                        // 000000001194: D28F000B 00021A83
	v_mov_b32_e32 v13, s6                                      // 00000000119C: 7E1A0206
	v_add_u32_e32 v11, vcc, v15, v11                           // 0000000011A0: 3216170F
	v_addc_u32_e32 v12, vcc, v16, v12, vcc                     // 0000000011A4: 38181910
	flat_load_dwordx2 v[11:12], v[11:12]                       // 0000000011A8: DC540000 0B00000B
	v_mov_b32_e32 v14, 1                                       // 0000000011B0: 7E1C0281
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000011B4: BF8C0070
	ds_write2_b32 v13, v11, v12 offset0:1 offset1:2            // 0000000011B8: D81C0201 000C0B0D
	flat_atomic_add v7, v[7:8], v14 glc                        // 0000000011C0: DD090000 07000E07
	flat_load_dword v8, v[9:10] glc                            // 0000000011C8: DC510000 08000009
	v_add_u32_e32 v9, vcc, 1, v6                               // 0000000011D0: 32120C81
	v_lshrrev_b32_e32 v10, 31, v9                              // 0000000011D4: 2014129F
	v_add_u32_e32 v10, vcc, v9, v10                            // 0000000011D8: 32141509
	v_and_b32_e32 v10, -2, v10                                 // 0000000011DC: 261414C2
	v_sub_u32_e32 v9, vcc, v9, v10                             // 0000000011E0: 34121509
	s_waitcnt vmcnt(1) lgkmcnt(1)                              // 0000000011E4: BF8C0171
	v_add_u32_e32 v7, vcc, 1, v7                               // 0000000011E8: 320E0E81
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000011EC: BF8C0070
	v_cmp_eq_u32_e32 vcc, v7, v8                               // 0000000011F0: 7D941107
	v_cndmask_b32_e32 v6, v6, v9, vcc                          // 0000000011F4: 000C1306
	ds_write_b32 v13, v6                                       // 0000000011F8: D81A0000 0000060D

0000000000001200 <BB0_12>:
	s_or_b64 exec, exec, s[26:27]                              // 000000001200: 87FE1A7E
	v_mov_b32_e32 v6, s6                                       // 000000001204: 7E0C0206
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000001208: BF8C0070
	s_barrier                                                  // 00000000120C: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000001210: BF8C007F
	ds_read_b32 v6, v6 offset:8                                // 000000001214: D86C0008 06000006
	s_waitcnt lgkmcnt(0)                                       // 00000000121C: BF8C007F
	v_cmp_gt_i32_e32 vcc, 1, v6                                // 000000001220: 7D880C81
	s_and_b64 vcc, exec, vcc                                   // 000000001224: 86EA6A7E
	s_cbranch_vccnz BB0_25                                     // 000000001228: BF870063
	v_cmp_eq_u32_e32 vcc, 1, v6                                // 00000000122C: 7D940C81
	s_and_b64 vcc, exec, vcc                                   // 000000001230: 86EA6A7E
	s_mov_b64 s[26:27], -1                                     // 000000001234: BE9A01C1
	s_cbranch_vccz BB0_24                                      // 000000001238: BF86005D
	s_mov_b32 m0, -1                                           // 00000000123C: BEFC00C1
	s_and_saveexec_b64 s[26:27], s[2:3]                        // 000000001240: BE9A2002
	s_cbranch_execz BB0_17                                     // 000000001244: BF88000C
	s_mov_b64 s[28:29], 0                                      // 000000001248: BE9C0180
	v_mov_b32_e32 v7, v3                                       // 00000000124C: 7E0E0303
	v_mov_b32_e32 v8, v0                                       // 000000001250: 7E100300

0000000000001254 <BB0_16>:
	v_add_u32_e32 v8, vcc, s23, v8                             // 000000001254: 32101017
	v_mov_b32_e32 v9, 0                                        // 000000001258: 7E120280
	v_cmp_le_i32_e32 vcc, s22, v8                              // 00000000125C: 7D861016
	ds_write_b32 v7, v9 offset:12                              // 000000001260: D81A000C 00000907
	s_or_b64 s[28:29], vcc, s[28:29]                           // 000000001268: 879C1C6A
	v_add_u32_e32 v7, vcc, s24, v7                             // 00000000126C: 320E0E18
	s_andn2_b64 exec, exec, s[28:29]                           // 000000001270: 89FE1C7E
	s_cbranch_execnz BB0_16                                    // 000000001274: BF89FFF7

0000000000001278 <BB0_17>:
	s_or_b64 exec, exec, s[26:27]                              // 000000001278: 87FE1A7E
	s_waitcnt lgkmcnt(0)                                       // 00000000127C: BF8C007F
	s_barrier                                                  // 000000001280: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000001284: BF8C007F
	s_mov_b32 m0, -1                                           // 000000001288: BEFC00C1
	s_and_saveexec_b64 s[26:27], s[4:5]                        // 00000000128C: BE9A2004
	s_cbranch_execz BB0_20                                     // 000000001290: BF88001F
	s_mov_b64 s[28:29], 0                                      // 000000001294: BE9C0180
	v_mov_b32_e32 v7, v0                                       // 000000001298: 7E0E0300

000000000000129c <BB0_19>:
	v_mov_b32_e32 v8, s6                                       // 00000000129C: 7E100206
	ds_read_b32 v8, v8 offset:4                                // 0000000012A0: D86C0004 08000008
	v_mov_b32_e32 v10, s19                                     // 0000000012A8: 7E140213
	s_waitcnt lgkmcnt(0)                                       // 0000000012AC: BF8C007F
	v_mul_lo_u32 v8, s21, v8                                   // 0000000012B0: D2850008 00021015
	v_add_u32_e32 v8, vcc, v7, v8                              // 0000000012B8: 32101107
	v_ashrrev_i32_e32 v9, 31, v8                               // 0000000012BC: 2212109F
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 0000000012C0: D28F0008 00021082
	v_add_u32_e32 v8, vcc, s18, v8                             // 0000000012C8: 32101012
	v_addc_u32_e32 v9, vcc, v10, v9, vcc                       // 0000000012CC: 3812130A
	flat_load_dword v8, v[8:9]                                 // 0000000012D0: DC500000 08000008
	v_mov_b32_e32 v9, 1                                        // 0000000012D8: 7E120281
	v_add_u32_e32 v7, vcc, s23, v7                             // 0000000012DC: 320E0E17
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000012E0: BF8C0070
	v_mul_lo_u32 v8, v8, s22                                   // 0000000012E4: D2850008 00002D08
	v_ashrrev_i32_e32 v8, 8, v8                                // 0000000012EC: 22101088
	v_lshlrev_b32_e32 v8, 2, v8                                // 0000000012F0: 24101082
	v_add_u32_e32 v8, vcc, s7, v8                              // 0000000012F4: 32101007
	ds_add_u32 v8, v9                                          // 0000000012F8: D8000000 00000908
	v_cmp_le_i32_e32 vcc, s21, v7                              // 000000001300: 7D860E15
	s_or_b64 s[28:29], vcc, s[28:29]                           // 000000001304: 879C1C6A
	s_andn2_b64 exec, exec, s[28:29]                           // 000000001308: 89FE1C7E
	s_cbranch_execnz BB0_19                                    // 00000000130C: BF89FFE3

0000000000001310 <BB0_20>:
	s_or_b64 exec, exec, s[26:27]                              // 000000001310: 87FE1A7E
	s_waitcnt lgkmcnt(0)                                       // 000000001314: BF8C007F
	s_barrier                                                  // 000000001318: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 00000000131C: BF8C007F
	s_and_saveexec_b64 s[26:27], s[2:3]                        // 000000001320: BE9A2002
	s_cbranch_execz BB0_23                                     // 000000001324: BF880020
	v_mov_b32_e32 v7, s6                                       // 000000001328: 7E0E0206
	ds_read_b32 v7, v7 offset:4                                // 00000000132C: D86C0004 07000007
	v_mov_b32_e32 v11, s17                                     // 000000001334: 7E160211
	s_mov_b64 s[28:29], 0                                      // 000000001338: BE9C0180
	s_waitcnt lgkmcnt(0)                                       // 00000000133C: BF8C007F
	v_mul_lo_u32 v9, s22, v7                                   // 000000001340: D2850009 00020E16
	v_mov_b32_e32 v8, v2                                       // 000000001348: 7E100302
	v_mov_b32_e32 v7, v1                                       // 00000000134C: 7E0E0301
	v_ashrrev_i32_e32 v10, 31, v9                              // 000000001350: 2214129F
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 000000001354: D28F0009 00021282
	v_add_u32_e32 v9, vcc, s16, v9                             // 00000000135C: 32121210
	v_addc_u32_e32 v10, vcc, v11, v10, vcc                     // 000000001360: 3814150B
	v_mov_b32_e32 v11, v0                                      // 000000001364: 7E160300

0000000000001368 <BB0_22>:
	v_add_u32_e32 v14, vcc, s6, v7                             // 000000001368: 321C0E06
	v_add_u32_e32 v12, vcc, v9, v7                             // 00000000136C: 32180F09
	s_mov_b32 m0, -1                                           // 000000001370: BEFC00C1
	v_addc_u32_e32 v13, vcc, v10, v8, vcc                      // 000000001374: 381A110A
	ds_read_b32 v14, v14 offset:12                             // 000000001378: D86C000C 0E00000E
	v_add_u32_e32 v11, vcc, s23, v11                           // 000000001380: 32161617
	v_add_u32_e32 v7, vcc, v7, v4                              // 000000001384: 320E0907
	v_addc_u32_e32 v8, vcc, 0, v8, vcc                         // 000000001388: 38101080
	v_cmp_le_i32_e32 vcc, s22, v11                             // 00000000138C: 7D861616
	s_or_b64 s[28:29], vcc, s[28:29]                           // 000000001390: 879C1C6A
	s_waitcnt lgkmcnt(0)                                       // 000000001394: BF8C007F
	flat_store_dword v[12:13], v14                             // 000000001398: DC700000 00000E0C
	s_andn2_b64 exec, exec, s[28:29]                           // 0000000013A0: 89FE1C7E
	s_cbranch_execnz BB0_22                                    // 0000000013A4: BF89FFF0

00000000000013a8 <BB0_23>:
	s_or_b64 exec, exec, s[26:27]                              // 0000000013A8: 87FE1A7E
	s_mov_b64 s[26:27], 0                                      // 0000000013AC: BE9A0180

00000000000013b0 <BB0_24>:
	s_mov_b64 s[28:29], s[26:27]                               // 0000000013B0: BE9C011A
	s_branch BB0_27                                            // 0000000013B4: BF820005

00000000000013b8 <BB0_25>:
	s_mov_b64 s[28:29], 0                                      // 0000000013B8: BE9C0180
	s_mov_b64 s[26:27], -1                                     // 0000000013BC: BE9A01C1
	s_cbranch_execz BB0_27                                     // 0000000013C0: BF880002
	v_cmp_ne_u32_e64 s[28:29], s25, v6                         // 0000000013C4: D0CD001C 00020C19

00000000000013cc <BB0_27>:
	s_andn2_b64 vcc, exec, s[28:29]                            // 0000000013CC: 89EA1C7E
	s_cbranch_vccnz BB0_1                                      // 0000000013D0: BF87FF27
	s_mov_b64 s[26:27], 0                                      // 0000000013D4: BE9A0180
	s_branch BB0_1                                             // 0000000013D8: BF82FF25

00000000000013dc <BB0_29>:
	s_endpgm                                                   // 0000000013DC: BF810000
