
CEDT/bin/cedt.gem5-000-gfx803.hsaco:	file format elf64-amdgpu


Disassembly of section .text:

0000000000002000 <_Z15gaussian_kernelPhS_ii$local>:
	s_load_dwordx4 s[0:3], s[6:7], 0x0                         // 000000002000: C00A0003 00000000
	s_load_dword s6, s[6:7], 0x14                              // 000000002008: C0020183 00000014
	s_load_dword s4, s[4:5], 0x4                               // 000000002010: C0020102 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000002018: BF8C007F
	s_lshr_b32 s5, s4, 16                                      // 00000000201C: 8F059004
	s_and_b32 s4, s4, 0xffff                                   // 000000002020: 8604FF04 0000FFFF
	s_mul_i32 s8, s8, s4                                       // 000000002028: 92080408
	s_mul_i32 s9, s9, s5                                       // 00000000202C: 92090509
	v_add_u32_e32 v7, vcc, 1, v1                               // 000000002030: 320E0281
	v_add_u32_e32 v2, vcc, s9, v7                              // 000000002034: 32040E09
	v_mul_lo_u32 v2, v2, s6                                    // 000000002038: D2850002 00000D02
	v_add_u32_e32 v3, vcc, s8, v0                              // 000000002040: 32060008
	v_add_u32_e32 v4, vcc, v2, v3                              // 000000002044: 32080702
	v_add_u32_e32 v2, vcc, 1, v4                               // 000000002048: 32040881
	v_ashrrev_i32_e32 v3, 31, v2                               // 00000000204C: 2206049F
	v_mov_b32_e32 v5, s1                                       // 000000002050: 7E0A0201
	v_add_u32_e32 v8, vcc, s0, v2                              // 000000002054: 32100400
	v_addc_u32_e32 v9, vcc, v5, v3, vcc                        // 000000002058: 38120705
	flat_load_ubyte v10, v[8:9]                                // 00000000205C: DC400000 0A000008
	v_add_u32_e32 v6, vcc, 1, v0                               // 000000002064: 320C0081
	s_add_i32 s5, s4, 2                                        // 000000002068: 81058204
	v_mul_u32_u24_e32 v5, s5, v7                               // 00000000206C: 100A0E05
	v_mad_u32_u24 v11, s5, v7, v0                              // 000000002070: D1C3000B 04020E05
	v_lshlrev_b32_e32 v11, 2, v11                              // 000000002078: 24161682
	v_add_u32_e32 v11, vcc, 0, v11                             // 00000000207C: 32161680
	s_mov_b32 m0, -1                                           // 000000002080: BEFC00C1
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002084: BF8C0070
	ds_write_b32 v11, v10 offset:4                             // 000000002088: D81A0004 00000A0B
	v_cmp_ne_u32_e32 vcc, 0, v1                                // 000000002090: 7D9A0280
	s_and_saveexec_b64 s[8:9], vcc                             // 000000002094: BE88206A
	s_xor_b64 s[8:9], exec, s[8:9]                             // 000000002098: 8888087E
	s_cbranch_execz BB0_9                                      // 00000000209C: BF880035
	v_cmp_eq_u32_e32 vcc, s4, v7                               // 0000000020A0: 7D940E04
	s_and_saveexec_b64 s[10:11], vcc                           // 0000000020A4: BE8A206A
	s_cbranch_execz BB0_8                                      // 0000000020A8: BF880031
	s_ashr_i32 s7, s6, 31                                      // 0000000020AC: 90079F06
	v_mov_b32_e32 v7, s7                                       // 0000000020B0: 7E0E0207
	v_add_u32_e32 v8, vcc, s6, v8                              // 0000000020B4: 32101006
	v_addc_u32_e32 v9, vcc, v9, v7, vcc                        // 0000000020B8: 38120F09
	flat_load_ubyte v10, v[8:9]                                // 0000000020BC: DC400000 0A000008
	s_add_i32 s7, s4, 1                                        // 0000000020C4: 81078104
	v_mov_b32_e32 v11, s5                                      // 0000000020C8: 7E160205
	v_mul_u32_u24_e32 v7, s7, v11                              // 0000000020CC: 100E1607
	v_mad_u32_u24 v11, s7, v11, v0                             // 0000000020D0: D1C3000B 04021607
	v_lshlrev_b32_e32 v11, 2, v11                              // 0000000020D8: 24161682
	v_add_u32_e32 v11, vcc, 0, v11                             // 0000000020DC: 32161680
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000020E0: BF8C0070
	ds_write_b32 v11, v10 offset:4                             // 0000000020E4: D81A0004 00000A0B
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 0000000020EC: 7D9A0080
	s_and_saveexec_b64 s[12:13], vcc                           // 0000000020F0: BE8C206A
	s_xor_b64 s[12:13], exec, s[12:13]                         // 0000000020F4: 888C0C7E
	s_cbranch_execz BB0_6                                      // 0000000020F8: BF88000E
	v_cmp_eq_u32_e32 vcc, s4, v6                               // 0000000020FC: 7D940C04
	s_and_saveexec_b64 s[14:15], vcc                           // 000000002100: BE8E206A
	s_cbranch_execz BB0_5                                      // 000000002104: BF88000A
	v_add_u32_e32 v8, vcc, 1, v8                               // 000000002108: 32101081
	v_addc_u32_e32 v9, vcc, 0, v9, vcc                         // 00000000210C: 38121280
	v_add_u32_e32 v10, vcc, s4, v7                             // 000000002110: 32140E04
	v_lshlrev_b32_e32 v10, 2, v10                              // 000000002114: 24141482
	v_add_u32_e32 v10, vcc, 0, v10                             // 000000002118: 32141480
	flat_load_ubyte v8, v[8:9]                                 // 00000000211C: DC400000 08000008
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002124: BF8C0070
	ds_write_b32 v10, v8 offset:4                              // 000000002128: D81A0004 0000080A

0000000000002130 <BB0_5>:
	s_or_b64 exec, exec, s[14:15]                              // 000000002130: 87FE0E7E

0000000000002134 <BB0_6>:
	s_or_saveexec_b64 s[12:13], s[12:13]                       // 000000002134: BE8C210C
	s_xor_b64 exec, exec, s[12:13]                             // 000000002138: 88FE0C7E
	s_cbranch_execz BB0_8                                      // 00000000213C: BF88000C
	v_add_u32_e32 v8, vcc, s6, v4                              // 000000002140: 32100806
	v_ashrrev_i32_e32 v9, 31, v8                               // 000000002144: 2212109F
	v_mov_b32_e32 v10, s1                                      // 000000002148: 7E140201
	v_add_u32_e32 v8, vcc, s0, v8                              // 00000000214C: 32101000
	v_addc_u32_e32 v9, vcc, v10, v9, vcc                       // 000000002150: 3812130A
	flat_load_ubyte v8, v[8:9]                                 // 000000002154: DC400000 08000008
	v_lshlrev_b32_e32 v7, 2, v7                                // 00000000215C: 240E0E82
	v_add_u32_e32 v7, vcc, 0, v7                               // 000000002160: 320E0E80
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002164: BF8C0070
	ds_write_b32 v7, v8                                        // 000000002168: D81A0000 00000807

0000000000002170 <BB0_8>:
	s_or_b64 exec, exec, s[10:11]                              // 000000002170: 87FE0A7E

0000000000002174 <BB0_9>:
	s_or_saveexec_b64 s[8:9], s[8:9]                           // 000000002174: BE882108
	s_xor_b64 exec, exec, s[8:9]                               // 000000002178: 88FE087E
	s_cbranch_execz BB0_17                                     // 00000000217C: BF880030
	v_subrev_u32_e32 v7, vcc, s6, v2                           // 000000002180: 360E0406
	v_ashrrev_i32_e32 v9, 31, v7                               // 000000002184: 22120E9F
	v_mov_b32_e32 v10, s1                                      // 000000002188: 7E140201
	v_add_u32_e32 v8, vcc, s0, v7                              // 00000000218C: 32100E00
	v_addc_u32_e32 v9, vcc, v10, v9, vcc                       // 000000002190: 3812130A
	flat_load_ubyte v8, v[8:9]                                 // 000000002194: DC400000 08000008
	v_lshlrev_b32_e32 v9, 2, v0                                // 00000000219C: 24120082
	v_add_u32_e32 v9, vcc, 0, v9                               // 0000000021A0: 32121280
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000021A4: BF8C0070
	ds_write_b32 v9, v8 offset:4                               // 0000000021A8: D81A0004 00000809
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 0000000021B0: 7D9A0080
	s_and_saveexec_b64 s[6:7], vcc                             // 0000000021B4: BE86206A
	s_xor_b64 s[6:7], exec, s[6:7]                             // 0000000021B8: 8886067E
	s_cbranch_execz BB0_14                                     // 0000000021BC: BF880011
	v_cmp_eq_u32_e32 vcc, s4, v6                               // 0000000021C0: 7D940C04
	s_and_saveexec_b64 s[10:11], vcc                           // 0000000021C4: BE8A206A
	s_cbranch_execz BB0_13                                     // 0000000021C8: BF88000D
	v_add_u32_e32 v8, vcc, 1, v7                               // 0000000021CC: 32100E81
	v_ashrrev_i32_e32 v9, 31, v8                               // 0000000021D0: 2212109F
	v_mov_b32_e32 v10, s1                                      // 0000000021D4: 7E140201
	v_add_u32_e32 v8, vcc, s0, v8                              // 0000000021D8: 32101000
	v_addc_u32_e32 v9, vcc, v10, v9, vcc                       // 0000000021DC: 3812130A
	s_lshl_b32 s12, s4, 2                                      // 0000000021E0: 8E0C8204
	s_add_i32 s12, s12, 0                                      // 0000000021E4: 810C800C
	flat_load_ubyte v8, v[8:9]                                 // 0000000021E8: DC400000 08000008
	v_mov_b32_e32 v9, s12                                      // 0000000021F0: 7E12020C
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000021F4: BF8C0070
	ds_write_b32 v9, v8 offset:4                               // 0000000021F8: D81A0004 00000809

0000000000002200 <BB0_13>:
	s_or_b64 exec, exec, s[10:11]                              // 000000002200: 87FE0A7E

0000000000002204 <BB0_14>:
	s_or_saveexec_b64 s[6:7], s[6:7]                           // 000000002204: BE862106
	s_xor_b64 exec, exec, s[6:7]                               // 000000002208: 88FE067E
	s_cbranch_execz BB0_16                                     // 00000000220C: BF88000B
	v_add_u32_e32 v7, vcc, -1, v7                              // 000000002210: 320E0EC1
	v_ashrrev_i32_e32 v8, 31, v7                               // 000000002214: 22100E9F
	v_mov_b32_e32 v9, s1                                       // 000000002218: 7E120201
	v_add_u32_e32 v7, vcc, s0, v7                              // 00000000221C: 320E0E00
	v_addc_u32_e32 v8, vcc, v9, v8, vcc                        // 000000002220: 38101109
	flat_load_ubyte v7, v[7:8]                                 // 000000002224: DC400000 07000007
	v_mov_b32_e32 v8, 0                                        // 00000000222C: 7E100280
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002230: BF8C0070
	ds_write_b32 v8, v7                                        // 000000002234: D81A0000 00000708

000000000000223c <BB0_16>:
	s_or_b64 exec, exec, s[6:7]                                // 00000000223C: 87FE067E

0000000000002240 <BB0_17>:
	s_or_b64 exec, exec, s[8:9]                                // 000000002240: 87FE087E
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 000000002244: 7D9A0080
	s_mov_b64 s[8:9], -1                                       // 000000002248: BE8801C1
	s_and_saveexec_b64 s[6:7], vcc                             // 00000000224C: BE86206A
	s_cbranch_execz BB0_21                                     // 000000002250: BF880009
	v_cmp_eq_u32_e32 vcc, s4, v6                               // 000000002254: 7D940C04
	s_mov_b64 s[8:9], 0                                        // 000000002258: BE880180
	s_and_saveexec_b64 s[10:11], vcc                           // 00000000225C: BE8A206A
	s_mov_b64 s[8:9], exec                                     // 000000002260: BE88017E
	v_add_u32_e32 v4, vcc, 2, v4                               // 000000002264: 32080882
	v_add_u32_e32 v5, vcc, s4, v5                              // 000000002268: 320A0A04
	v_add_u32_e32 v5, vcc, 1, v5                               // 00000000226C: 320A0A81
	s_or_b64 exec, exec, s[10:11]                              // 000000002270: 87FE0A7E
	s_orn2_b64 s[8:9], s[8:9], exec                            // 000000002274: 8A887E08

0000000000002278 <BB0_21>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002278: 87FE067E
	s_and_saveexec_b64 s[6:7], s[8:9]                          // 00000000227C: BE862008
	s_cbranch_execz BB0_23                                     // 000000002280: BF88000B
	v_ashrrev_i32_e32 v7, 31, v4                               // 000000002284: 220E089F
	v_mov_b32_e32 v8, s1                                       // 000000002288: 7E100201
	v_add_u32_e32 v6, vcc, s0, v4                              // 00000000228C: 320C0800
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 000000002290: 380E0F08
	flat_load_ubyte v4, v[6:7]                                 // 000000002294: DC400000 04000006
	v_lshlrev_b32_e32 v5, 2, v5                                // 00000000229C: 240A0A82
	v_add_u32_e32 v5, vcc, 0, v5                               // 0000000022A0: 320A0A80
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000022A4: BF8C0070
	ds_write_b32 v5, v4                                        // 0000000022A8: D81A0000 00000405

00000000000022b0 <BB0_23>:
	s_or_b64 exec, exec, s[6:7]                                // 0000000022B0: 87FE067E
	s_waitcnt lgkmcnt(0)                                       // 0000000022B4: BF8C007F
	s_barrier                                                  // 0000000022B8: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000022BC: BF8C007F
	v_mad_u32_u24 v0, v1, s5, v0                               // 0000000022C0: D1C30000 04000B01
	v_lshlrev_b32_e32 v0, 2, v0                                // 0000000022C8: 24000082
	v_add_u32_e32 v0, vcc, 0, v0                               // 0000000022CC: 32000080
	s_mov_b32 s0, 0                                            // 0000000022D0: BE800080
	v_mov_b32_e32 v1, 0                                        // 0000000022D4: 7E020280
	s_lshl_b32 s1, s4, 2                                       // 0000000022D8: 8E018204
	s_add_u32 s1, s1, 8                                        // 0000000022DC: 80018801
	s_addc_u32 s4, 0, 0                                        // 0000000022E0: 82048080
	s_getpc_b64 s[6:7]                                         // 0000000022E4: BE861C00
	s_add_u32 s6, s6, 0x2d18                                   // 0000000022E8: 8006FF06 00002D18
	s_addc_u32 s7, s7, 0                                       // 0000000022F0: 8207FF07 00000000
	v_mov_b32_e32 v4, v1                                       // 0000000022F8: 7E080301

00000000000022fc <BB0_24>:
	s_mov_b64 s[8:9], 0                                        // 0000000022FC: BE880180

0000000000002300 <BB0_25>:
	v_add_u32_e32 v5, vcc, s8, v0                              // 000000002300: 320A0008
	ds_read_b32 v5, v5                                         // 000000002304: D86C0000 05000005
	s_add_u32 s10, s6, s8                                      // 00000000230C: 800A0806
	v_cvt_f32_i32_e32 v4, v4                                   // 000000002310: 7E080B04
	s_addc_u32 s11, s7, s9                                     // 000000002314: 820B0907
	s_load_dword s5, s[10:11], 0x0                             // 000000002318: C0020145 00000000
	s_waitcnt lgkmcnt(0)                                       // 000000002320: BF8C007F
	v_cvt_f32_i32_e32 v5, v5                                   // 000000002324: 7E0A0B05
	s_add_u32 s8, s8, 4                                        // 000000002328: 80088408
	v_mac_f32_e32 v4, s5, v5                                   // 00000000232C: 2C080A05
	v_cvt_i32_f32_e32 v4, v4                                   // 000000002330: 7E081104
	s_addc_u32 s9, s9, 0                                       // 000000002334: 82098009
	s_cmp_eq_u32 s8, 12                                        // 000000002338: BF068C08
	s_cbranch_scc0 BB0_25                                      // 00000000233C: BF84FFF0
	s_add_i32 s0, s0, 1                                        // 000000002340: 81008100
	s_add_u32 s6, s6, 12                                       // 000000002344: 80068C06
	s_addc_u32 s7, s7, 0                                       // 000000002348: 82078007
	v_mov_b32_e32 v5, s4                                       // 00000000234C: 7E0A0204
	s_cmp_eq_u32 s0, 3                                         // 000000002350: BF068300
	v_add_u32_e32 v0, vcc, s1, v0                              // 000000002354: 32000001
	v_addc_u32_e32 v1, vcc, v1, v5, vcc                        // 000000002358: 38020B01
	s_cbranch_scc0 BB0_24                                      // 00000000235C: BF84FFE7
	v_mov_b32_e32 v0, 0xff                                     // 000000002360: 7E0002FF 000000FF
	v_med3_i32 v4, v4, 0, v0                                   // 000000002368: D1D70004 04010104
	v_mov_b32_e32 v1, s3                                       // 000000002370: 7E020203
	v_add_u32_e32 v0, vcc, s2, v2                              // 000000002374: 32000402
	v_addc_u32_e32 v1, vcc, v1, v3, vcc                        // 000000002378: 38020701
	flat_store_byte v[0:1], v4                                 // 00000000237C: DC600000 00000400
	s_endpgm                                                   // 000000002384: BF810000
	s_nop 0                                                    // 000000002388: BF800000
	s_nop 0                                                    // 00000000238C: BF800000
	s_nop 0                                                    // 000000002390: BF800000
	s_nop 0                                                    // 000000002394: BF800000
	s_nop 0                                                    // 000000002398: BF800000
	s_nop 0                                                    // 00000000239C: BF800000
	s_nop 0                                                    // 0000000023A0: BF800000
	s_nop 0                                                    // 0000000023A4: BF800000
	s_nop 0                                                    // 0000000023A8: BF800000
	s_nop 0                                                    // 0000000023AC: BF800000
	s_nop 0                                                    // 0000000023B0: BF800000
	s_nop 0                                                    // 0000000023B4: BF800000
	s_nop 0                                                    // 0000000023B8: BF800000
	s_nop 0                                                    // 0000000023BC: BF800000
	s_nop 0                                                    // 0000000023C0: BF800000
	s_nop 0                                                    // 0000000023C4: BF800000
	s_nop 0                                                    // 0000000023C8: BF800000
	s_nop 0                                                    // 0000000023CC: BF800000
	s_nop 0                                                    // 0000000023D0: BF800000
	s_nop 0                                                    // 0000000023D4: BF800000
	s_nop 0                                                    // 0000000023D8: BF800000
	s_nop 0                                                    // 0000000023DC: BF800000
	s_nop 0                                                    // 0000000023E0: BF800000
	s_nop 0                                                    // 0000000023E4: BF800000
	s_nop 0                                                    // 0000000023E8: BF800000
	s_nop 0                                                    // 0000000023EC: BF800000
	s_nop 0                                                    // 0000000023F0: BF800000
	s_nop 0                                                    // 0000000023F4: BF800000
	s_nop 0                                                    // 0000000023F8: BF800000
	s_nop 0                                                    // 0000000023FC: BF800000

0000000000002400 <_Z12sobel_kernelPhS_S_ii$local>:
	s_load_dwordx4 s[0:3], s[6:7], 0x0                         // 000000002400: C00A0003 00000000
	s_load_dword s11, s[6:7], 0x1c                             // 000000002408: C00202C3 0000001C
	s_load_dword s4, s[4:5], 0x4                               // 000000002410: C0020102 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000002418: BF8C007F
	s_lshr_b32 s5, s4, 16                                      // 00000000241C: 8F059004
	s_and_b32 s10, s4, 0xffff                                  // 000000002420: 860AFF04 0000FFFF
	s_mul_i32 s8, s8, s10                                      // 000000002428: 92080A08
	s_mul_i32 s9, s9, s5                                       // 00000000242C: 92090509
	v_add_u32_e32 v7, vcc, 1, v1                               // 000000002430: 320E0281
	v_add_u32_e32 v2, vcc, s9, v7                              // 000000002434: 32040E09
	v_mul_lo_u32 v2, v2, s11                                   // 000000002438: D2850002 00001702
	v_add_u32_e32 v3, vcc, s8, v0                              // 000000002440: 32060008
	v_add_u32_e32 v4, vcc, v2, v3                              // 000000002444: 32080702
	v_add_u32_e32 v2, vcc, 1, v4                               // 000000002448: 32040881
	v_ashrrev_i32_e32 v3, 31, v2                               // 00000000244C: 2206049F
	v_mov_b32_e32 v5, s1                                       // 000000002450: 7E0A0201
	v_add_u32_e32 v8, vcc, s0, v2                              // 000000002454: 32100400
	v_addc_u32_e32 v9, vcc, v5, v3, vcc                        // 000000002458: 38120705
	flat_load_ubyte v10, v[8:9]                                // 00000000245C: DC400000 0A000008
	v_add_u32_e32 v6, vcc, 1, v0                               // 000000002464: 320C0081
	s_add_i32 s8, s10, 2                                       // 000000002468: 8108820A
	v_mul_u32_u24_e32 v5, s8, v7                               // 00000000246C: 100A0E08
	v_mad_u32_u24 v11, s8, v7, v0                              // 000000002470: D1C3000B 04020E08
	v_lshlrev_b32_e32 v11, 2, v11                              // 000000002478: 24161682
	v_add_u32_e32 v11, vcc, 0, v11                             // 00000000247C: 32161680
	s_mov_b32 m0, -1                                           // 000000002480: BEFC00C1
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002484: BF8C0070
	ds_write_b32 v11, v10 offset:4                             // 000000002488: D81A0004 00000A0B
	v_cmp_ne_u32_e32 vcc, 0, v1                                // 000000002490: 7D9A0280
	s_and_saveexec_b64 s[4:5], vcc                             // 000000002494: BE84206A
	s_xor_b64 s[4:5], exec, s[4:5]                             // 000000002498: 8884047E
	s_cbranch_execz BB1_9                                      // 00000000249C: BF880035
	v_cmp_eq_u32_e32 vcc, s10, v7                              // 0000000024A0: 7D940E0A
	s_and_saveexec_b64 s[12:13], vcc                           // 0000000024A4: BE8C206A
	s_cbranch_execz BB1_8                                      // 0000000024A8: BF880031
	s_ashr_i32 s9, s11, 31                                     // 0000000024AC: 90099F0B
	v_mov_b32_e32 v7, s9                                       // 0000000024B0: 7E0E0209
	v_add_u32_e32 v8, vcc, s11, v8                             // 0000000024B4: 3210100B
	v_addc_u32_e32 v9, vcc, v9, v7, vcc                        // 0000000024B8: 38120F09
	flat_load_ubyte v10, v[8:9]                                // 0000000024BC: DC400000 0A000008
	s_add_i32 s9, s10, 1                                       // 0000000024C4: 8109810A
	v_mov_b32_e32 v11, s8                                      // 0000000024C8: 7E160208
	v_mul_u32_u24_e32 v7, s9, v11                              // 0000000024CC: 100E1609
	v_mad_u32_u24 v11, s9, v11, v0                             // 0000000024D0: D1C3000B 04021609
	v_lshlrev_b32_e32 v11, 2, v11                              // 0000000024D8: 24161682
	v_add_u32_e32 v11, vcc, 0, v11                             // 0000000024DC: 32161680
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000024E0: BF8C0070
	ds_write_b32 v11, v10 offset:4                             // 0000000024E4: D81A0004 00000A0B
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 0000000024EC: 7D9A0080
	s_and_saveexec_b64 s[14:15], vcc                           // 0000000024F0: BE8E206A
	s_xor_b64 s[14:15], exec, s[14:15]                         // 0000000024F4: 888E0E7E
	s_cbranch_execz BB1_6                                      // 0000000024F8: BF88000E
	v_cmp_eq_u32_e32 vcc, s10, v6                              // 0000000024FC: 7D940C0A
	s_and_saveexec_b64 s[16:17], vcc                           // 000000002500: BE90206A
	s_cbranch_execz BB1_5                                      // 000000002504: BF88000A
	v_add_u32_e32 v8, vcc, 1, v8                               // 000000002508: 32101081
	v_addc_u32_e32 v9, vcc, 0, v9, vcc                         // 00000000250C: 38121280
	v_add_u32_e32 v10, vcc, s10, v7                            // 000000002510: 32140E0A
	v_lshlrev_b32_e32 v10, 2, v10                              // 000000002514: 24141482
	v_add_u32_e32 v10, vcc, 0, v10                             // 000000002518: 32141480
	flat_load_ubyte v8, v[8:9]                                 // 00000000251C: DC400000 08000008
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002524: BF8C0070
	ds_write_b32 v10, v8 offset:4                              // 000000002528: D81A0004 0000080A

0000000000002530 <BB1_5>:
	s_or_b64 exec, exec, s[16:17]                              // 000000002530: 87FE107E

0000000000002534 <BB1_6>:
	s_or_saveexec_b64 s[14:15], s[14:15]                       // 000000002534: BE8E210E
	s_xor_b64 exec, exec, s[14:15]                             // 000000002538: 88FE0E7E
	s_cbranch_execz BB1_8                                      // 00000000253C: BF88000C
	v_add_u32_e32 v8, vcc, s11, v4                             // 000000002540: 3210080B
	v_ashrrev_i32_e32 v9, 31, v8                               // 000000002544: 2212109F
	v_mov_b32_e32 v10, s1                                      // 000000002548: 7E140201
	v_add_u32_e32 v8, vcc, s0, v8                              // 00000000254C: 32101000
	v_addc_u32_e32 v9, vcc, v10, v9, vcc                       // 000000002550: 3812130A
	flat_load_ubyte v8, v[8:9]                                 // 000000002554: DC400000 08000008
	v_lshlrev_b32_e32 v7, 2, v7                                // 00000000255C: 240E0E82
	v_add_u32_e32 v7, vcc, 0, v7                               // 000000002560: 320E0E80
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002564: BF8C0070
	ds_write_b32 v7, v8                                        // 000000002568: D81A0000 00000807

0000000000002570 <BB1_8>:
	s_or_b64 exec, exec, s[12:13]                              // 000000002570: 87FE0C7E

0000000000002574 <BB1_9>:
	s_or_saveexec_b64 s[12:13], s[4:5]                         // 000000002574: BE8C2104
	s_load_dwordx4 s[4:7], s[6:7], 0x10                        // 000000002578: C00A0103 00000010
	s_xor_b64 exec, exec, s[12:13]                             // 000000002580: 88FE0C7E
	s_cbranch_execz BB1_17                                     // 000000002584: BF880030
	v_subrev_u32_e32 v7, vcc, s11, v2                          // 000000002588: 360E040B
	v_ashrrev_i32_e32 v9, 31, v7                               // 00000000258C: 22120E9F
	v_mov_b32_e32 v10, s1                                      // 000000002590: 7E140201
	v_add_u32_e32 v8, vcc, s0, v7                              // 000000002594: 32100E00
	v_addc_u32_e32 v9, vcc, v10, v9, vcc                       // 000000002598: 3812130A
	flat_load_ubyte v8, v[8:9]                                 // 00000000259C: DC400000 08000008
	v_lshlrev_b32_e32 v9, 2, v0                                // 0000000025A4: 24120082
	v_add_u32_e32 v9, vcc, 0, v9                               // 0000000025A8: 32121280
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000025AC: BF8C0070
	ds_write_b32 v9, v8 offset:4                               // 0000000025B0: D81A0004 00000809
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 0000000025B8: 7D9A0080
	s_and_saveexec_b64 s[6:7], vcc                             // 0000000025BC: BE86206A
	s_xor_b64 s[6:7], exec, s[6:7]                             // 0000000025C0: 8886067E
	s_cbranch_execz BB1_14                                     // 0000000025C4: BF880011
	v_cmp_eq_u32_e32 vcc, s10, v6                              // 0000000025C8: 7D940C0A
	s_and_saveexec_b64 s[14:15], vcc                           // 0000000025CC: BE8E206A
	s_cbranch_execz BB1_13                                     // 0000000025D0: BF88000D
	v_add_u32_e32 v8, vcc, 1, v7                               // 0000000025D4: 32100E81
	v_ashrrev_i32_e32 v9, 31, v8                               // 0000000025D8: 2212109F
	v_mov_b32_e32 v10, s1                                      // 0000000025DC: 7E140201
	v_add_u32_e32 v8, vcc, s0, v8                              // 0000000025E0: 32101000
	v_addc_u32_e32 v9, vcc, v10, v9, vcc                       // 0000000025E4: 3812130A
	s_lshl_b32 s9, s10, 2                                      // 0000000025E8: 8E09820A
	s_add_i32 s9, s9, 0                                        // 0000000025EC: 81098009
	flat_load_ubyte v8, v[8:9]                                 // 0000000025F0: DC400000 08000008
	v_mov_b32_e32 v9, s9                                       // 0000000025F8: 7E120209
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000025FC: BF8C0070
	ds_write_b32 v9, v8 offset:4                               // 000000002600: D81A0004 00000809

0000000000002608 <BB1_13>:
	s_or_b64 exec, exec, s[14:15]                              // 000000002608: 87FE0E7E

000000000000260c <BB1_14>:
	s_or_saveexec_b64 s[6:7], s[6:7]                           // 00000000260C: BE862106
	s_xor_b64 exec, exec, s[6:7]                               // 000000002610: 88FE067E
	s_cbranch_execz BB1_16                                     // 000000002614: BF88000B
	v_add_u32_e32 v7, vcc, -1, v7                              // 000000002618: 320E0EC1
	v_ashrrev_i32_e32 v8, 31, v7                               // 00000000261C: 22100E9F
	v_mov_b32_e32 v9, s1                                       // 000000002620: 7E120201
	v_add_u32_e32 v7, vcc, s0, v7                              // 000000002624: 320E0E00
	v_addc_u32_e32 v8, vcc, v9, v8, vcc                        // 000000002628: 38101109
	flat_load_ubyte v7, v[7:8]                                 // 00000000262C: DC400000 07000007
	v_mov_b32_e32 v8, 0                                        // 000000002634: 7E100280
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002638: BF8C0070
	ds_write_b32 v8, v7                                        // 00000000263C: D81A0000 00000708

0000000000002644 <BB1_16>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002644: 87FE067E

0000000000002648 <BB1_17>:
	s_or_b64 exec, exec, s[12:13]                              // 000000002648: 87FE0C7E
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 00000000264C: 7D9A0080
	s_mov_b64 s[12:13], -1                                     // 000000002650: BE8C01C1
	s_waitcnt lgkmcnt(0)                                       // 000000002654: BF8C007F
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002658: BE86206A
	s_cbranch_execz BB1_21                                     // 00000000265C: BF880009
	v_cmp_eq_u32_e32 vcc, s10, v6                              // 000000002660: 7D940C0A
	s_mov_b64 s[12:13], 0                                      // 000000002664: BE8C0180
	s_and_saveexec_b64 s[14:15], vcc                           // 000000002668: BE8E206A
	s_mov_b64 s[12:13], exec                                   // 00000000266C: BE8C017E
	v_add_u32_e32 v4, vcc, 2, v4                               // 000000002670: 32080882
	v_add_u32_e32 v5, vcc, s10, v5                             // 000000002674: 320A0A0A
	v_add_u32_e32 v5, vcc, 1, v5                               // 000000002678: 320A0A81
	s_or_b64 exec, exec, s[14:15]                              // 00000000267C: 87FE0E7E
	s_orn2_b64 s[12:13], s[12:13], exec                        // 000000002680: 8A8C7E0C

0000000000002684 <BB1_21>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002684: 87FE067E
	s_and_saveexec_b64 s[6:7], s[12:13]                        // 000000002688: BE86200C
	s_cbranch_execz BB1_23                                     // 00000000268C: BF88000B
	v_ashrrev_i32_e32 v7, 31, v4                               // 000000002690: 220E089F
	v_mov_b32_e32 v8, s1                                       // 000000002694: 7E100201
	v_add_u32_e32 v6, vcc, s0, v4                              // 000000002698: 320C0800
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 00000000269C: 380E0F08
	flat_load_ubyte v4, v[6:7]                                 // 0000000026A0: DC400000 04000006
	v_lshlrev_b32_e32 v5, 2, v5                                // 0000000026A8: 240A0A82
	v_add_u32_e32 v5, vcc, 0, v5                               // 0000000026AC: 320A0A80
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000026B0: BF8C0070
	ds_write_b32 v5, v4                                        // 0000000026B4: D81A0000 00000405

00000000000026bc <BB1_23>:
	s_or_b64 exec, exec, s[6:7]                                // 0000000026BC: 87FE067E
	s_waitcnt lgkmcnt(0)                                       // 0000000026C0: BF8C007F
	s_barrier                                                  // 0000000026C4: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000026C8: BF8C007F
	v_mad_u32_u24 v0, v1, s8, v0                               // 0000000026CC: D1C30000 04001101
	v_lshlrev_b32_e32 v0, 2, v0                                // 0000000026D4: 24000082
	v_add_u32_e32 v4, vcc, 0, v0                               // 0000000026D8: 32080080
	v_mov_b32_e32 v5, 0                                        // 0000000026DC: 7E0A0280
	s_lshl_b32 s0, s10, 2                                      // 0000000026E0: 8E00820A
	s_add_u32 s0, s0, 8                                        // 0000000026E4: 80008800
	s_addc_u32 s1, 0, 0                                        // 0000000026E8: 82018080
	s_mov_b32 s6, 0                                            // 0000000026EC: BE860080
	s_getpc_b64 s[8:9]                                         // 0000000026F0: BE881C00
	s_add_u32 s8, s8, 0x296c                                   // 0000000026F4: 8008FF08 0000296C
	s_addc_u32 s9, s9, 0                                       // 0000000026FC: 8209FF09 00000000
	s_getpc_b64 s[10:11]                                       // 000000002704: BE8A1C00
	s_add_u32 s10, s10, 0x2928                                 // 000000002708: 800AFF0A 00002928
	s_addc_u32 s11, s11, 0                                     // 000000002710: 820BFF0B 00000000
	v_mov_b32_e32 v0, v5                                       // 000000002718: 7E000305
	v_mov_b32_e32 v1, v5                                       // 00000000271C: 7E020305

0000000000002720 <BB1_24>:
	s_mov_b64 s[12:13], 0                                      // 000000002720: BE8C0180

0000000000002724 <BB1_25>:
	s_add_u32 s14, s10, s12                                    // 000000002724: 800E0C0A
	v_add_u32_e32 v6, vcc, s12, v4                             // 000000002728: 320C080C
	s_addc_u32 s15, s11, s13                                   // 00000000272C: 820F0D0B
	ds_read_b32 v6, v6                                         // 000000002730: D86C0000 06000006
	s_load_dword s7, s[14:15], 0x0                             // 000000002738: C00201C7 00000000
	s_add_u32 s14, s8, s12                                     // 000000002740: 800E0C08
	s_addc_u32 s15, s9, s13                                    // 000000002744: 820F0D09
	s_load_dword s14, s[14:15], 0x0                            // 000000002748: C0020387 00000000
	s_waitcnt lgkmcnt(0)                                       // 000000002750: BF8C007F
	v_mul_lo_u32 v7, v6, s7                                    // 000000002754: D2850007 00000F06
	v_mul_lo_u32 v6, s14, v6                                   // 00000000275C: D2850006 00020C0E
	s_add_u32 s12, s12, 4                                      // 000000002764: 800C840C
	v_cvt_f32_i32_e32 v7, v7                                   // 000000002768: 7E0E0B07
	v_cvt_f32_i32_e32 v6, v6                                   // 00000000276C: 7E0C0B06
	s_addc_u32 s13, s13, 0                                     // 000000002770: 820D800D
	s_cmp_eq_u32 s12, 12                                       // 000000002774: BF068C0C
	v_add_f32_e32 v1, v1, v7                                   // 000000002778: 02020F01
	v_add_f32_e32 v0, v0, v6                                   // 00000000277C: 02000D00
	s_cbranch_scc0 BB1_25                                      // 000000002780: BF84FFE8
	s_add_i32 s6, s6, 1                                        // 000000002784: 81068106
	s_add_u32 s8, s8, 12                                       // 000000002788: 80088C08
	s_addc_u32 s9, s9, 0                                       // 00000000278C: 82098009
	s_add_u32 s10, s10, 12                                     // 000000002790: 800A8C0A
	s_addc_u32 s11, s11, 0                                     // 000000002794: 820B800B
	v_mov_b32_e32 v6, s1                                       // 000000002798: 7E0C0201
	s_cmp_eq_u32 s6, 3                                         // 00000000279C: BF068306
	v_add_u32_e32 v4, vcc, s0, v4                              // 0000000027A0: 32080800
	v_addc_u32_e32 v5, vcc, v5, v6, vcc                        // 0000000027A4: 380A0D05
	s_cbranch_scc0 BB1_24                                      // 0000000027A8: BF84FFDD
	v_mul_f32_e64 v6, 1.0, |v0|                                // 0000000027AC: D1050206 000200F2
	v_mul_f32_e64 v7, 1.0, |v1|                                // 0000000027B4: D1050207 000202F2
	v_max_f32_e32 v4, v7, v6                                   // 0000000027BC: 16080D07
	v_frexp_exp_i32_f32_e32 v5, v4                             // 0000000027C0: 7E0A6704
	v_sub_u32_e32 v8, vcc, 0, v5                               // 0000000027C4: 34100A80
	v_ldexp_f32 v9, |v1|, v8                                   // 0000000027C8: D2880109 00021101
	v_ldexp_f32 v8, |v0|, v8                                   // 0000000027D0: D2880108 00021100
	v_mul_f32_e32 v8, v8, v8                                   // 0000000027D8: 0A101108
	v_mac_f32_e32 v8, v9, v9                                   // 0000000027DC: 2C101309
	v_sqrt_f32_e32 v8, v8                                      // 0000000027E0: 7E104F08
	v_ldexp_f32 v5, v8, v5                                     // 0000000027E4: D2880005 00020B08
	s_mov_b32 s0, 0x7f800000                                   // 0000000027EC: BE8000FF 7F800000
	v_mov_b32_e32 v8, s0                                       // 0000000027F4: 7E100200
	v_cmp_neq_f32_e64 vcc, |v4|, s0                            // 0000000027F8: D04D016A 00000104
	v_cndmask_b32_e32 v5, v8, v5, vcc                          // 000000002800: 000A0B08
	v_cvt_i32_f32_e32 v5, v5                                   // 000000002804: 7E0A1105
	v_mov_b32_e32 v8, 0xff                                     // 000000002808: 7E1002FF 000000FF
	v_med3_i32 v8, v5, 0, v8                                   // 000000002810: D1D70008 04210105
	v_mov_b32_e32 v5, s3                                       // 000000002818: 7E0A0203
	s_mov_b32 s0, 0x6f800000                                   // 00000000281C: BE8000FF 6F800000
	v_mov_b32_e32 v9, 0x2f800000                               // 000000002824: 7E1202FF 2F800000
	v_cmp_lt_f32_e32 vcc, s0, v4                               // 00000000282C: 7C820800
	v_cndmask_b32_e32 v9, 1.0, v9, vcc                         // 000000002830: 001212F2
	v_mul_f32_e32 v4, v4, v9                                   // 000000002834: 0A081304
	v_rcp_f32_e32 v10, v4                                      // 000000002838: 7E144504
	v_add_u32_e32 v4, vcc, s2, v2                              // 00000000283C: 32080402
	v_addc_u32_e32 v5, vcc, v5, v3, vcc                        // 000000002840: 380A0705
	flat_store_byte v[4:5], v8                                 // 000000002844: DC600000 00000804
	v_min_f32_e32 v4, v7, v6                                   // 00000000284C: 14080D07
	v_mul_f32_e32 v4, v4, v10                                  // 000000002850: 0A081504
	v_mul_f32_e32 v4, v9, v4                                   // 000000002854: 0A080909
	v_mul_f32_e32 v5, v4, v4                                   // 000000002858: 0A0A0904
	v_mov_b32_e32 v6, 0xbc7a590c                               // 00000000285C: 7E0C02FF BC7A590C
	v_mac_f32_e32 v6, 0x3b2d2a58, v5                           // 000000002864: 2C0C0AFF 3B2D2A58
	v_madak_f32 v6, v5, v6, 0x3d29fb3f                         // 00000000286C: 300C0D05 3D29FB3F
	v_madak_f32 v6, v5, v6, 0xbd97d4d7                         // 000000002874: 300C0D05 BD97D4D7
	v_madak_f32 v6, v5, v6, 0x3dd931b2                         // 00000000287C: 300C0D05 3DD931B2
	v_madak_f32 v6, v5, v6, 0xbe1160e6                         // 000000002884: 300C0D05 BE1160E6
	v_madak_f32 v6, v5, v6, 0x3e4cb8bf                         // 00000000288C: 300C0D05 3E4CB8BF
	v_madak_f32 v6, v5, v6, 0xbeaaaa62                         // 000000002894: 300C0D05 BEAAAA62
	v_mul_f32_e32 v5, v5, v6                                   // 00000000289C: 0A0A0D05
	v_mac_f32_e32 v4, v4, v5                                   // 0000000028A0: 2C080B04
	v_sub_f32_e32 v5, 0x3fc90fdb, v4                           // 0000000028A4: 040A08FF 3FC90FDB
	v_cmp_gt_f32_e64 vcc, |v0|, |v1|                           // 0000000028AC: D044036A 00020300
	v_cndmask_b32_e32 v4, v4, v5, vcc                          // 0000000028B4: 00080B04
	s_mov_b32 s0, 0x40490fdb                                   // 0000000028B8: BE8000FF 40490FDB
	v_sub_f32_e32 v5, s0, v4                                   // 0000000028C0: 040A0800
	v_cmp_gt_f32_e32 vcc, 0, v1                                // 0000000028C4: 7C880280
	v_cndmask_b32_e32 v4, v4, v5, vcc                          // 0000000028C8: 00080B04
	v_mov_b32_e32 v5, s0                                       // 0000000028CC: 7E0A0200
	v_cmp_gt_i32_e64 s[0:1], 0, v1                             // 0000000028D0: D0C40000 00020280
	v_cndmask_b32_e64 v5, 0, v5, s[0:1]                        // 0000000028D8: D1000005 00020A80
	v_cmp_eq_f32_e64 s[0:1], 0, v0                             // 0000000028E0: D0420000 00020080
	v_cndmask_b32_e64 v4, v4, v5, s[0:1]                       // 0000000028E8: D1000004 00020B04
	v_mov_b32_e32 v5, 0x3f490fdb                               // 0000000028F0: 7E0A02FF 3F490FDB
	v_mov_b32_e32 v6, 0x4016cbe4                               // 0000000028F8: 7E0C02FF 4016CBE4
	v_cndmask_b32_e32 v5, v5, v6, vcc                          // 000000002900: 000A0D05
	s_movk_i32 s2, 0x204                                       // 000000002904: B0020204
	v_cmp_class_f32_e64 s[0:1], v1, s2                         // 000000002908: D0100000 00000501
	v_cmp_class_f32_e64 s[2:3], v0, s2                         // 000000002910: D0100002 00000500
	s_and_b64 vcc, s[0:1], s[2:3]                              // 000000002918: 86EA0200
	v_cndmask_b32_e32 v4, v4, v5, vcc                          // 00000000291C: 00080B04
	v_mov_b32_e32 v5, 0x7fc00000                               // 000000002920: 7E0A02FF 7FC00000
	v_cmp_o_f32_e32 vcc, v1, v0                                // 000000002928: 7C8E0101
	v_cndmask_b32_e32 v1, v5, v4, vcc                          // 00000000292C: 00020905
	s_brev_b32 s3, -2                                          // 000000002930: BE8308C2
	v_bfi_b32 v0, s3, v1, v0                                   // 000000002934: D1CA0000 04020203
	v_cmp_gt_f32_e32 vcc, 0, v0                                // 00000000293C: 7C880080
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002940: BE80206A
	s_cbranch_execz BB1_37                                     // 000000002944: BF880068
	s_mov_b32 s2, 0x40c90fdb                                   // 000000002948: BE8200FF 40C90FDB
	v_add_f32_e32 v0, s2, v0                                   // 000000002950: 02000002
	v_and_b32_e32 v4, s3, v0                                   // 000000002954: 26080003
	v_cmp_ngt_f32_e64 s[6:7], |v0|, s2                         // 000000002958: D04B0106 00000500
	s_and_saveexec_b64 s[8:9], s[6:7]                          // 000000002960: BE882006
	s_xor_b64 s[6:7], exec, s[8:9]                             // 000000002964: 8886087E
	s_brev_b32 s3, -2                                          // 000000002968: BE8308C2
	v_bfi_b32 v1, s3, 0, v0                                    // 00000000296C: D1CA0001 04010003
	v_cmp_eq_f32_e32 vcc, s2, v4                               // 000000002974: 7C840802
	v_cndmask_b32_e32 v1, v0, v1, vcc                          // 000000002978: 00020300
	s_or_saveexec_b64 s[6:7], s[6:7]                           // 00000000297C: BE862106
	s_xor_b64 exec, exec, s[6:7]                               // 000000002980: 88FE067E
	s_cbranch_execz BB1_36                                     // 000000002984: BF88004E
	v_frexp_exp_i32_f32_e32 v7, v4                             // 000000002988: 7E0E6704
	v_frexp_mant_f32_e32 v1, v4                                // 00000000298C: 7E026904
	v_ldexp_f32 v6, v1, 12                                     // 000000002990: D2880006 00011901
	v_frexp_exp_i32_f32_e32 v5, s2                             // 000000002998: 7E0A6602
	v_frexp_mant_f32_e32 v1, s2                                // 00000000299C: 7E026802
	v_ldexp_f32 v1, v1, 1                                      // 0000000029A0: D2880001 00010301
	v_rcp_f32_e32 v4, v1                                       // 0000000029A8: 7E084501
	v_sub_u32_e32 v7, vcc, v7, v5                              // 0000000029AC: 340E0B07
	v_cmp_lt_i32_e32 vcc, 12, v7                               // 0000000029B0: 7D820E8C
	s_and_saveexec_b64 s[8:9], vcc                             // 0000000029B4: BE88206A
	s_cbranch_execz BB1_35                                     // 0000000029B8: BF880020
	s_movk_i32 s3, 0xf000                                      // 0000000029BC: B003F000
	v_and_b32_e32 v8, s3, v1                                   // 0000000029C0: 26100203
	v_sub_f32_e32 v9, v1, v8                                   // 0000000029C4: 04121101
	s_mov_b64 s[10:11], 0                                      // 0000000029C8: BE8A0180

00000000000029cc <BB1_33>:
	v_mul_f32_e32 v10, v4, v6                                  // 0000000029CC: 0A140D04
	v_rndne_f32_e32 v10, v10                                   // 0000000029D0: 7E143D0A
	v_and_b32_e32 v11, s3, v10                                 // 0000000029D4: 26161403
	v_sub_f32_e32 v12, v10, v11                                // 0000000029D8: 0418170A
	v_mul_f32_e32 v13, v1, v10                                 // 0000000029DC: 0A1A1501
	v_mad_f32 v13, v11, v8, -v13                               // 0000000029E0: D1C1000D 8436110B
	v_mac_f32_e32 v13, v11, v9                                 // 0000000029E8: 2C1A130B
	v_mac_f32_e32 v13, v12, v8                                 // 0000000029EC: 2C1A110C
	v_mac_f32_e32 v13, v12, v9                                 // 0000000029F0: 2C1A130C
	v_mad_f32 v11, -v1, v10, v6                                // 0000000029F4: D1C1000B 241A1501
	v_sub_f32_e32 v6, v6, v11                                  // 0000000029FC: 040C1706
	v_mad_f32 v6, -v1, v10, v6                                 // 000000002A00: D1C10006 241A1501
	v_sub_f32_e32 v6, v6, v13                                  // 000000002A08: 040C1B06
	v_add_f32_e32 v6, v11, v6                                  // 000000002A0C: 020C0D0B
	v_add_f32_e32 v10, v1, v6                                  // 000000002A10: 02140D01
	v_cmp_gt_f32_e32 vcc, 0, v6                                // 000000002A14: 7C880C80
	v_cndmask_b32_e32 v6, v6, v10, vcc                         // 000000002A18: 000C1506
	v_ldexp_f32 v6, v6, 12                                     // 000000002A1C: D2880006 00011906
	v_cmp_gt_i32_e32 vcc, 25, v7                               // 000000002A24: 7D880E99
	s_or_b64 s[10:11], vcc, s[10:11]                           // 000000002A28: 878A0A6A
	v_add_u32_e32 v7, vcc, -12, v7                             // 000000002A2C: 320E0ECC
	s_andn2_b64 exec, exec, s[10:11]                           // 000000002A30: 89FE0A7E
	s_cbranch_execnz BB1_33                                    // 000000002A34: BF89FFE5
	s_or_b64 exec, exec, s[10:11]                              // 000000002A38: 87FE0A7E

0000000000002a3c <BB1_35>:
	s_or_b64 exec, exec, s[8:9]                                // 000000002A3C: 87FE087E
	v_add_u32_e32 v5, vcc, -1, v5                              // 000000002A40: 320A0AC1
	v_add_u32_e32 v7, vcc, -11, v7                             // 000000002A44: 320E0ECB
	v_ldexp_f32 v6, v6, v7                                     // 000000002A48: D2880006 00020F06
	v_mul_f32_e32 v4, v4, v6                                   // 000000002A50: 0A080D04
	v_rndne_f32_e32 v4, v4                                     // 000000002A54: 7E083D04
	s_movk_i32 s3, 0xf000                                      // 000000002A58: B003F000
	v_and_b32_e32 v7, s3, v4                                   // 000000002A5C: 260E0803
	v_sub_f32_e32 v8, v4, v7                                   // 000000002A60: 04100F04
	v_and_b32_e32 v9, s3, v1                                   // 000000002A64: 26120203
	v_sub_f32_e32 v10, v1, v9                                  // 000000002A68: 04141301
	v_mul_f32_e32 v11, v1, v4                                  // 000000002A6C: 0A160901
	v_mad_f32 v11, v7, v9, -v11                                // 000000002A70: D1C1000B 842E1307
	v_mac_f32_e32 v11, v7, v10                                 // 000000002A78: 2C161507
	v_mac_f32_e32 v11, v8, v9                                  // 000000002A7C: 2C161308
	v_mac_f32_e32 v11, v8, v10                                 // 000000002A80: 2C161508
	v_mad_f32 v7, -v1, v4, v6                                  // 000000002A84: D1C10007 241A0901
	v_sub_f32_e32 v6, v6, v7                                   // 000000002A8C: 040C0F06
	v_mad_f32 v4, -v1, v4, v6                                  // 000000002A90: D1C10004 241A0901
	v_sub_f32_e32 v4, v4, v11                                  // 000000002A98: 04081704
	v_add_f32_e32 v4, v7, v4                                   // 000000002A9C: 02080907
	v_add_f32_e32 v1, v1, v4                                   // 000000002AA0: 02020901
	v_cmp_gt_f32_e32 vcc, 0, v4                                // 000000002AA4: 7C880880
	v_cndmask_b32_e32 v1, v4, v1, vcc                          // 000000002AA8: 00020304
	v_ldexp_f32 v1, v1, v5                                     // 000000002AAC: D2880001 00020B01
	v_and_b32_e32 v4, 0x80000000, v0                           // 000000002AB4: 260800FF 80000000
	v_xor_b32_e32 v1, v4, v1                                   // 000000002ABC: 2A020304

0000000000002ac0 <BB1_36>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002AC0: 87FE067E
	v_cmp_neq_f32_e64 s[2:3], s2, 0                            // 000000002AC4: D04D0002 00010002
	s_movk_i32 s6, 0x1f8                                       // 000000002ACC: B00601F8
	v_cmp_class_f32_e64 s[6:7], v0, s6                         // 000000002AD0: D0100006 00000D00
	v_mov_b32_e32 v0, 0x7fc00000                               // 000000002AD8: 7E0002FF 7FC00000
	s_and_b64 vcc, s[6:7], s[2:3]                              // 000000002AE0: 86EA0206
	v_cndmask_b32_e32 v0, v0, v1, vcc                          // 000000002AE4: 00000300

0000000000002ae8 <BB1_37>:
	s_or_b64 exec, exec, s[0:1]                                // 000000002AE8: 87FE007E
	s_mov_b32 s0, 0x3ec90fdb                                   // 000000002AEC: BE8000FF 3EC90FDB
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002AF4: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002AF8: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002AFC: 8880007E
	s_cbranch_execz BB1_39                                     // 000000002B00: BF880006
	v_mov_b32_e32 v1, s5                                       // 000000002B04: 7E020205
	v_add_u32_e32 v4, vcc, s4, v2                              // 000000002B08: 32080404
	v_addc_u32_e32 v5, vcc, v1, v3, vcc                        // 000000002B0C: 380A0701
	v_mov_b32_e32 v1, 0                                        // 000000002B10: 7E020280
	flat_store_byte v[4:5], v1                                 // 000000002B14: DC600000 00000104

0000000000002b1c <BB1_39>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002B1C: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002B20: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002B24: BF880072
	s_mov_b32 s0, 0x3f96cbe4                                   // 000000002B28: BE8000FF 3F96CBE4
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002B30: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002B34: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002B38: 8880007E
	s_cbranch_execz BB1_42                                     // 000000002B3C: BF880006
	v_mov_b32_e32 v1, s5                                       // 000000002B40: 7E020205
	v_add_u32_e32 v4, vcc, s4, v2                              // 000000002B44: 32080404
	v_addc_u32_e32 v5, vcc, v1, v3, vcc                        // 000000002B48: 380A0701
	v_mov_b32_e32 v1, 45                                       // 000000002B4C: 7E0202AD
	flat_store_byte v[4:5], v1                                 // 000000002B50: DC600000 00000104

0000000000002b58 <BB1_42>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002B58: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002B5C: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002B60: BF880063
	s_mov_b32 s0, 0x3ffb53d2                                   // 000000002B64: BE8000FF 3FFB53D2
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002B6C: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002B70: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002B74: 8880007E
	s_cbranch_execz BB1_45                                     // 000000002B78: BF880007
	v_mov_b32_e32 v1, s5                                       // 000000002B7C: 7E020205
	v_add_u32_e32 v4, vcc, s4, v2                              // 000000002B80: 32080404
	v_addc_u32_e32 v5, vcc, v1, v3, vcc                        // 000000002B84: 380A0701
	v_mov_b32_e32 v1, 0x5a                                     // 000000002B88: 7E0202FF 0000005A
	flat_store_byte v[4:5], v1                                 // 000000002B90: DC600000 00000104

0000000000002b98 <BB1_45>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002B98: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002B9C: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002BA0: BF880053
	s_mov_b32 s0, 0x402fede0                                   // 000000002BA4: BE8000FF 402FEDE0
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002BAC: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002BB0: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002BB4: 8880007E
	s_cbranch_execz BB1_48                                     // 000000002BB8: BF880007
	v_mov_b32_e32 v1, s5                                       // 000000002BBC: 7E020205
	v_add_u32_e32 v4, vcc, s4, v2                              // 000000002BC0: 32080404
	v_addc_u32_e32 v5, vcc, v1, v3, vcc                        // 000000002BC4: 380A0701
	v_mov_b32_e32 v1, 0x87                                     // 000000002BC8: 7E0202FF 00000087
	flat_store_byte v[4:5], v1                                 // 000000002BD0: DC600000 00000104

0000000000002bd8 <BB1_48>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002BD8: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002BDC: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002BE0: BF880043
	s_mov_b32 s0, 0x406231d6                                   // 000000002BE4: BE8000FF 406231D6
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002BEC: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002BF0: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002BF4: 8880007E
	s_cbranch_execz BB1_51                                     // 000000002BF8: BF880006
	v_mov_b32_e32 v1, s5                                       // 000000002BFC: 7E020205
	v_add_u32_e32 v4, vcc, s4, v2                              // 000000002C00: 32080404
	v_addc_u32_e32 v5, vcc, v1, v3, vcc                        // 000000002C04: 380A0701
	v_mov_b32_e32 v1, 0                                        // 000000002C08: 7E020280
	flat_store_byte v[4:5], v1                                 // 000000002C0C: DC600000 00000104

0000000000002c14 <BB1_51>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002C14: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002C18: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002C1C: BF880034
	s_mov_b32 s0, 0x408a3ae7                                   // 000000002C20: BE8000FF 408A3AE7
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002C28: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002C2C: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002C30: 8880007E
	s_cbranch_execz BB1_54                                     // 000000002C34: BF880006
	v_mov_b32_e32 v1, s5                                       // 000000002C38: 7E020205
	v_add_u32_e32 v4, vcc, s4, v2                              // 000000002C3C: 32080404
	v_addc_u32_e32 v5, vcc, v1, v3, vcc                        // 000000002C40: 380A0701
	v_mov_b32_e32 v1, 45                                       // 000000002C44: 7E0202AD
	flat_store_byte v[4:5], v1                                 // 000000002C48: DC600000 00000104

0000000000002c50 <BB1_54>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002C50: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002C54: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002C58: BF880025
	s_mov_b32 s0, 0x40a35ce2                                   // 000000002C5C: BE8000FF 40A35CE2
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002C64: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002C68: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002C6C: 8880007E
	s_cbranch_execz BB1_57                                     // 000000002C70: BF880007
	v_mov_b32_e32 v1, s5                                       // 000000002C74: 7E020205
	v_add_u32_e32 v4, vcc, s4, v2                              // 000000002C78: 32080404
	v_addc_u32_e32 v5, vcc, v1, v3, vcc                        // 000000002C7C: 380A0701
	v_mov_b32_e32 v1, 0x5a                                     // 000000002C80: 7E0202FF 0000005A
	flat_store_byte v[4:5], v1                                 // 000000002C88: DC600000 00000104

0000000000002c90 <BB1_57>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002C90: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002C94: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002C98: BF880015
	s_mov_b32 s0, 0x40bc7edd                                   // 000000002C9C: BE8000FF 40BC7EDD
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002CA4: 7C8C0000
	v_mov_b32_e32 v1, s5                                       // 000000002CA8: 7E020205
	v_add_u32_e64 v0, s[0:1], s4, v2                           // 000000002CAC: D1190000 00020404
	v_addc_u32_e64 v1, s[0:1], v1, v3, s[0:1]                  // 000000002CB4: D11C0001 00020701
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002CBC: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002CC0: 8880007E
	s_cbranch_execz BB1_60                                     // 000000002CC4: BF880004
	v_mov_b32_e32 v2, 0x87                                     // 000000002CC8: 7E0402FF 00000087
	flat_store_byte v[0:1], v2                                 // 000000002CD0: DC600000 00000200

0000000000002cd8 <BB1_60>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002CD8: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002CDC: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002CE0: BF880003
	v_mov_b32_e32 v2, 0                                        // 000000002CE4: 7E040280
	flat_store_byte v[0:1], v2                                 // 000000002CE8: DC600000 00000200

0000000000002cf0 <BB1_62>:
	s_endpgm                                                   // 000000002CF0: BF810000
	s_nop 0                                                    // 000000002CF4: BF800000
	s_nop 0                                                    // 000000002CF8: BF800000
	s_nop 0                                                    // 000000002CFC: BF800000

0000000000002d00 <_Z19non_max_supp_kernelPhS_S_ii$local>:
	s_load_dwordx4 s[0:3], s[6:7], 0x0                         // 000000002D00: C00A0003 00000000
	s_load_dword s12, s[6:7], 0x1c                             // 000000002D08: C0020303 0000001C
	s_load_dword s4, s[4:5], 0x4                               // 000000002D10: C0020102 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000002D18: BF8C007F
	s_lshr_b32 s10, s4, 16                                     // 000000002D1C: 8F0A9004
	s_and_b32 s5, s4, 0xffff                                   // 000000002D20: 8605FF04 0000FFFF
	s_mul_i32 s8, s8, s5                                       // 000000002D28: 92080508
	s_mul_i32 s9, s9, s10                                      // 000000002D2C: 92090A09
	v_add_u32_e32 v8, vcc, 1, v1                               // 000000002D30: 32100281
	v_add_u32_e32 v2, vcc, s9, v8                              // 000000002D34: 32041009
	v_mul_lo_u32 v2, v2, s12                                   // 000000002D38: D2850002 00001902
	v_add_u32_e32 v3, vcc, s8, v0                              // 000000002D40: 32060008
	v_add_u32_e32 v5, vcc, v2, v3                              // 000000002D44: 320A0702
	v_add_u32_e32 v2, vcc, 1, v5                               // 000000002D48: 32040A81
	v_ashrrev_i32_e32 v3, 31, v2                               // 000000002D4C: 2206049F
	v_mov_b32_e32 v4, s1                                       // 000000002D50: 7E080201
	v_add_u32_e32 v9, vcc, s0, v2                              // 000000002D54: 32120400
	v_addc_u32_e32 v10, vcc, v4, v3, vcc                       // 000000002D58: 38140704
	flat_load_ubyte v11, v[9:10]                               // 000000002D5C: DC400000 0B000009
	v_add_u32_e32 v7, vcc, 1, v0                               // 000000002D64: 320E0081
	s_add_i32 s4, s5, 2                                        // 000000002D68: 81048205
	v_mul_u32_u24_e32 v6, s4, v8                               // 000000002D6C: 100C1004
	v_mad_u32_u24 v4, s4, v8, v0                               // 000000002D70: D1C30004 04021004
	v_lshlrev_b32_e32 v4, 2, v4                                // 000000002D78: 24080882
	v_add_u32_e32 v4, vcc, 0, v4                               // 000000002D7C: 32080880
	s_mov_b32 m0, -1                                           // 000000002D80: BEFC00C1
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002D84: BF8C0070
	ds_write_b32 v4, v11 offset:4                              // 000000002D88: D81A0004 00000B04
	v_cmp_ne_u32_e32 vcc, 0, v1                                // 000000002D90: 7D9A0280
	s_and_saveexec_b64 s[8:9], vcc                             // 000000002D94: BE88206A
	s_xor_b64 s[8:9], exec, s[8:9]                             // 000000002D98: 8888087E
	s_cbranch_execz BB2_9                                      // 000000002D9C: BF880035
	v_cmp_eq_u32_e32 vcc, s5, v8                               // 000000002DA0: 7D941005
	s_and_saveexec_b64 s[10:11], vcc                           // 000000002DA4: BE8A206A
	s_cbranch_execz BB2_8                                      // 000000002DA8: BF880031
	s_ashr_i32 s13, s12, 31                                    // 000000002DAC: 900D9F0C
	v_mov_b32_e32 v8, s13                                      // 000000002DB0: 7E10020D
	v_add_u32_e32 v9, vcc, s12, v9                             // 000000002DB4: 3212120C
	v_addc_u32_e32 v10, vcc, v10, v8, vcc                      // 000000002DB8: 3814110A
	flat_load_ubyte v11, v[9:10]                               // 000000002DBC: DC400000 0B000009
	s_add_i32 s13, s5, 1                                       // 000000002DC4: 810D8105
	v_mov_b32_e32 v12, s4                                      // 000000002DC8: 7E180204
	v_mul_u32_u24_e32 v8, s13, v12                             // 000000002DCC: 1010180D
	v_mad_u32_u24 v12, s13, v12, v0                            // 000000002DD0: D1C3000C 0402180D
	v_lshlrev_b32_e32 v12, 2, v12                              // 000000002DD8: 24181882
	v_add_u32_e32 v12, vcc, 0, v12                             // 000000002DDC: 32181880
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002DE0: BF8C0070
	ds_write_b32 v12, v11 offset:4                             // 000000002DE4: D81A0004 00000B0C
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 000000002DEC: 7D9A0080
	s_and_saveexec_b64 s[14:15], vcc                           // 000000002DF0: BE8E206A
	s_xor_b64 s[14:15], exec, s[14:15]                         // 000000002DF4: 888E0E7E
	s_cbranch_execz BB2_6                                      // 000000002DF8: BF88000E
	v_cmp_eq_u32_e32 vcc, s5, v7                               // 000000002DFC: 7D940E05
	s_and_saveexec_b64 s[16:17], vcc                           // 000000002E00: BE90206A
	s_cbranch_execz BB2_5                                      // 000000002E04: BF88000A
	v_add_u32_e32 v9, vcc, 1, v9                               // 000000002E08: 32121281
	v_addc_u32_e32 v10, vcc, 0, v10, vcc                       // 000000002E0C: 38141480
	v_add_u32_e32 v11, vcc, s5, v8                             // 000000002E10: 32161005
	v_lshlrev_b32_e32 v11, 2, v11                              // 000000002E14: 24161682
	v_add_u32_e32 v11, vcc, 0, v11                             // 000000002E18: 32161680
	flat_load_ubyte v9, v[9:10]                                // 000000002E1C: DC400000 09000009
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002E24: BF8C0070
	ds_write_b32 v11, v9 offset:4                              // 000000002E28: D81A0004 0000090B

0000000000002e30 <BB2_5>:
	s_or_b64 exec, exec, s[16:17]                              // 000000002E30: 87FE107E

0000000000002e34 <BB2_6>:
	s_or_saveexec_b64 s[14:15], s[14:15]                       // 000000002E34: BE8E210E
	s_xor_b64 exec, exec, s[14:15]                             // 000000002E38: 88FE0E7E
	s_cbranch_execz BB2_8                                      // 000000002E3C: BF88000C
	v_add_u32_e32 v9, vcc, s12, v5                             // 000000002E40: 32120A0C
	v_ashrrev_i32_e32 v10, 31, v9                              // 000000002E44: 2214129F
	v_mov_b32_e32 v11, s1                                      // 000000002E48: 7E160201
	v_add_u32_e32 v9, vcc, s0, v9                              // 000000002E4C: 32121200
	v_addc_u32_e32 v10, vcc, v11, v10, vcc                     // 000000002E50: 3814150B
	flat_load_ubyte v9, v[9:10]                                // 000000002E54: DC400000 09000009
	v_lshlrev_b32_e32 v8, 2, v8                                // 000000002E5C: 24101082
	v_add_u32_e32 v8, vcc, 0, v8                               // 000000002E60: 32101080
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002E64: BF8C0070
	ds_write_b32 v8, v9                                        // 000000002E68: D81A0000 00000908

0000000000002e70 <BB2_8>:
	s_or_b64 exec, exec, s[10:11]                              // 000000002E70: 87FE0A7E

0000000000002e74 <BB2_9>:
	s_or_saveexec_b64 s[14:15], s[8:9]                         // 000000002E74: BE8E2108
	s_load_dwordx4 s[8:11], s[6:7], 0x10                       // 000000002E78: C00A0203 00000010
	s_xor_b64 exec, exec, s[14:15]                             // 000000002E80: 88FE0E7E
	s_cbranch_execz BB2_17                                     // 000000002E84: BF880030
	v_subrev_u32_e32 v8, vcc, s12, v2                          // 000000002E88: 3610040C
	v_ashrrev_i32_e32 v10, 31, v8                              // 000000002E8C: 2214109F
	v_mov_b32_e32 v11, s1                                      // 000000002E90: 7E160201
	v_add_u32_e32 v9, vcc, s0, v8                              // 000000002E94: 32121000
	v_addc_u32_e32 v10, vcc, v11, v10, vcc                     // 000000002E98: 3814150B
	flat_load_ubyte v9, v[9:10]                                // 000000002E9C: DC400000 09000009
	v_lshlrev_b32_e32 v10, 2, v0                               // 000000002EA4: 24140082
	v_add_u32_e32 v10, vcc, 0, v10                             // 000000002EA8: 32141480
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002EAC: BF8C0070
	ds_write_b32 v10, v9 offset:4                              // 000000002EB0: D81A0004 0000090A
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 000000002EB8: 7D9A0080
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002EBC: BE86206A
	s_xor_b64 s[6:7], exec, s[6:7]                             // 000000002EC0: 8886067E
	s_cbranch_execz BB2_14                                     // 000000002EC4: BF880011
	v_cmp_eq_u32_e32 vcc, s5, v7                               // 000000002EC8: 7D940E05
	s_and_saveexec_b64 s[10:11], vcc                           // 000000002ECC: BE8A206A
	s_cbranch_execz BB2_13                                     // 000000002ED0: BF88000D
	v_add_u32_e32 v9, vcc, 1, v8                               // 000000002ED4: 32121081
	v_ashrrev_i32_e32 v10, 31, v9                              // 000000002ED8: 2214129F
	v_mov_b32_e32 v11, s1                                      // 000000002EDC: 7E160201
	v_add_u32_e32 v9, vcc, s0, v9                              // 000000002EE0: 32121200
	v_addc_u32_e32 v10, vcc, v11, v10, vcc                     // 000000002EE4: 3814150B
	s_lshl_b32 s12, s5, 2                                      // 000000002EE8: 8E0C8205
	s_add_i32 s12, s12, 0                                      // 000000002EEC: 810C800C
	flat_load_ubyte v9, v[9:10]                                // 000000002EF0: DC400000 09000009
	v_mov_b32_e32 v10, s12                                     // 000000002EF8: 7E14020C
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002EFC: BF8C0070
	ds_write_b32 v10, v9 offset:4                              // 000000002F00: D81A0004 0000090A

0000000000002f08 <BB2_13>:
	s_or_b64 exec, exec, s[10:11]                              // 000000002F08: 87FE0A7E

0000000000002f0c <BB2_14>:
	s_or_saveexec_b64 s[6:7], s[6:7]                           // 000000002F0C: BE862106
	s_xor_b64 exec, exec, s[6:7]                               // 000000002F10: 88FE067E
	s_cbranch_execz BB2_16                                     // 000000002F14: BF88000B
	v_add_u32_e32 v8, vcc, -1, v8                              // 000000002F18: 321010C1
	v_ashrrev_i32_e32 v9, 31, v8                               // 000000002F1C: 2212109F
	v_mov_b32_e32 v10, s1                                      // 000000002F20: 7E140201
	v_add_u32_e32 v8, vcc, s0, v8                              // 000000002F24: 32101000
	v_addc_u32_e32 v9, vcc, v10, v9, vcc                       // 000000002F28: 3812130A
	flat_load_ubyte v8, v[8:9]                                 // 000000002F2C: DC400000 08000008
	v_mov_b32_e32 v9, 0                                        // 000000002F34: 7E120280
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002F38: BF8C0070
	ds_write_b32 v9, v8                                        // 000000002F3C: D81A0000 00000809

0000000000002f44 <BB2_16>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002F44: 87FE067E

0000000000002f48 <BB2_17>:
	s_or_b64 exec, exec, s[14:15]                              // 000000002F48: 87FE0E7E
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 000000002F4C: 7D9A0080
	s_waitcnt lgkmcnt(0)                                       // 000000002F50: BF8C007F
	s_mov_b64 s[10:11], -1                                     // 000000002F54: BE8A01C1
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002F58: BE86206A
	s_cbranch_execz BB2_21                                     // 000000002F5C: BF880009
	v_cmp_eq_u32_e32 vcc, s5, v7                               // 000000002F60: 7D940E05
	s_mov_b64 s[10:11], 0                                      // 000000002F64: BE8A0180
	s_and_saveexec_b64 s[12:13], vcc                           // 000000002F68: BE8C206A
	s_mov_b64 s[10:11], exec                                   // 000000002F6C: BE8A017E
	v_add_u32_e32 v5, vcc, 2, v5                               // 000000002F70: 320A0A82
	v_add_u32_e32 v6, vcc, s5, v6                              // 000000002F74: 320C0C05
	v_add_u32_e32 v6, vcc, 1, v6                               // 000000002F78: 320C0C81
	s_or_b64 exec, exec, s[12:13]                              // 000000002F7C: 87FE0C7E
	s_orn2_b64 s[10:11], s[10:11], exec                        // 000000002F80: 8A8A7E0A

0000000000002f84 <BB2_21>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002F84: 87FE067E
	s_and_saveexec_b64 s[6:7], s[10:11]                        // 000000002F88: BE86200A
	s_cbranch_execz BB2_23                                     // 000000002F8C: BF88000B
	v_ashrrev_i32_e32 v8, 31, v5                               // 000000002F90: 22100A9F
	v_mov_b32_e32 v9, s1                                       // 000000002F94: 7E120201
	v_add_u32_e32 v7, vcc, s0, v5                              // 000000002F98: 320E0A00
	v_addc_u32_e32 v8, vcc, v9, v8, vcc                        // 000000002F9C: 38101109
	flat_load_ubyte v5, v[7:8]                                 // 000000002FA0: DC400000 05000007
	v_lshlrev_b32_e32 v6, 2, v6                                // 000000002FA8: 240C0C82
	v_add_u32_e32 v6, vcc, 0, v6                               // 000000002FAC: 320C0C80
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002FB0: BF8C0070
	ds_write_b32 v6, v5                                        // 000000002FB4: D81A0000 00000506

0000000000002fbc <BB2_23>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002FBC: 87FE067E
	s_waitcnt lgkmcnt(0)                                       // 000000002FC0: BF8C007F
	s_barrier                                                  // 000000002FC4: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002FC8: BF8C007F
	ds_read_b32 v5, v4 offset:4                                // 000000002FCC: D86C0004 05000004
	v_mov_b32_e32 v7, s9                                       // 000000002FD4: 7E0E0209
	s_waitcnt lgkmcnt(0)                                       // 000000002FD8: BF8C007F
	v_and_b32_e32 v5, 0xff, v5                                 // 000000002FDC: 260A0AFF 000000FF
	v_add_u32_e32 v6, vcc, s8, v2                              // 000000002FE4: 320C0408
	v_addc_u32_e32 v7, vcc, v7, v3, vcc                        // 000000002FE8: 380E0707
	flat_load_ubyte v7, v[6:7]                                 // 000000002FEC: DC400000 07000006
	s_movk_i32 s0, 0x59                                        // 000000002FF4: B0000059
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002FF8: BF8C0070
	v_cmp_lt_i16_e32 vcc, s0, v7                               // 000000002FFC: 7D420E00
	s_mov_b64 s[0:1], 0                                        // 000000003000: BE800180
	s_mov_b64 s[8:9], 0                                        // 000000003004: BE880180
	s_and_saveexec_b64 s[6:7], vcc                             // 000000003008: BE86206A
	s_xor_b64 s[6:7], exec, s[6:7]                             // 00000000300C: 8886067E
	s_cbranch_execz BB2_37                                     // 000000003010: BF880043
	s_movk_i32 s5, 0x86                                        // 000000003014: B0050086
	v_cmp_lt_i16_e32 vcc, s5, v7                               // 000000003018: 7D420E05
	s_mov_b64 s[8:9], 0                                        // 00000000301C: BE880180
	s_and_saveexec_b64 s[10:11], vcc                           // 000000003020: BE8A206A
	s_xor_b64 s[10:11], exec, s[10:11]                         // 000000003024: 888A0A7E
	s_cbranch_execz BB2_30                                     // 000000003028: BF88001B
	s_movk_i32 s5, 0x87                                        // 00000000302C: B0050087
	v_cmp_eq_u16_e32 vcc, s5, v7                               // 000000003030: 7D540E05
	s_mov_b64 s[12:13], -1                                     // 000000003034: BE8C01C1
	s_and_saveexec_b64 s[8:9], vcc                             // 000000003038: BE88206A
	s_cbranch_execz BB2_29                                     // 00000000303C: BF880014
	v_mad_u32_u24 v6, s4, v1, v0                               // 000000003040: D1C30006 04020204
	v_lshlrev_b32_e32 v6, 2, v6                                // 000000003048: 240C0C82
	v_add_u32_e32 v8, vcc, 0, v6                               // 00000000304C: 32100C80
	ds_read_b32 v6, v8                                         // 000000003050: D86C0000 06000008
	s_waitcnt lgkmcnt(0)                                       // 000000003058: BF8C007F
	v_cmp_gt_i32_e32 vcc, v5, v6                               // 00000000305C: 7D880D05
	v_mov_b32_e32 v6, 0                                        // 000000003060: 7E0C0280
	s_and_saveexec_b64 s[12:13], vcc                           // 000000003064: BE8C206A
	s_cbranch_execz BB2_28                                     // 000000003068: BF880007
	s_lshl_b32 s5, s4, 3                                       // 00000000306C: 8E058304
	v_add_u32_e32 v6, vcc, s5, v8                              // 000000003070: 320C1005
	ds_read_b32 v6, v6 offset:8                                // 000000003074: D86C0008 06000006
	s_waitcnt lgkmcnt(0)                                       // 00000000307C: BF8C007F
	v_cmp_gt_i32_e32 vcc, v5, v6                               // 000000003080: 7D880D05
	v_cndmask_b32_e32 v6, 0, v5, vcc                           // 000000003084: 000C0A80

0000000000003088 <BB2_28>:
	s_or_b64 exec, exec, s[12:13]                              // 000000003088: 87FE0C7E
	s_xor_b64 s[12:13], exec, -1                               // 00000000308C: 888CC17E

0000000000003090 <BB2_29>:
	s_or_b64 exec, exec, s[8:9]                                // 000000003090: 87FE087E
	s_and_b64 s[8:9], s[12:13], exec                           // 000000003094: 86887E0C

0000000000003098 <BB2_30>:
	s_or_saveexec_b64 s[10:11], s[10:11]                       // 000000003098: BE8A210A
	s_xor_b64 exec, exec, s[10:11]                             // 00000000309C: 88FE0A7E
	s_cbranch_execz BB2_36                                     // 0000000030A0: BF88001D
	s_movk_i32 s5, 0x5a                                        // 0000000030A4: B005005A
	v_cmp_eq_u16_e32 vcc, s5, v7                               // 0000000030A8: 7D540E05
	s_mov_b64 s[14:15], -1                                     // 0000000030AC: BE8E01C1
	s_and_saveexec_b64 s[12:13], vcc                           // 0000000030B0: BE8C206A
	s_cbranch_execz BB2_35                                     // 0000000030B4: BF880014
	v_mad_u32_u24 v6, s4, v1, v0                               // 0000000030B8: D1C30006 04020204
	v_lshlrev_b32_e32 v6, 2, v6                                // 0000000030C0: 240C0C82
	v_add_u32_e32 v8, vcc, 0, v6                               // 0000000030C4: 32100C80
	ds_read_b32 v6, v8 offset:4                                // 0000000030C8: D86C0004 06000008
	s_waitcnt lgkmcnt(0)                                       // 0000000030D0: BF8C007F
	v_cmp_gt_i32_e32 vcc, v5, v6                               // 0000000030D4: 7D880D05
	v_mov_b32_e32 v6, 0                                        // 0000000030D8: 7E0C0280
	s_and_saveexec_b64 s[14:15], vcc                           // 0000000030DC: BE8E206A
	s_cbranch_execz BB2_34                                     // 0000000030E0: BF880007
	s_lshl_b32 s5, s4, 3                                       // 0000000030E4: 8E058304
	v_add_u32_e32 v6, vcc, s5, v8                              // 0000000030E8: 320C1005
	ds_read_b32 v6, v6 offset:4                                // 0000000030EC: D86C0004 06000006
	s_waitcnt lgkmcnt(0)                                       // 0000000030F4: BF8C007F
	v_cmp_gt_i32_e32 vcc, v5, v6                               // 0000000030F8: 7D880D05
	v_cndmask_b32_e32 v6, 0, v5, vcc                           // 0000000030FC: 000C0A80

0000000000003100 <BB2_34>:
	s_or_b64 exec, exec, s[14:15]                              // 000000003100: 87FE0E7E
	s_xor_b64 s[14:15], exec, -1                               // 000000003104: 888EC17E

0000000000003108 <BB2_35>:
	s_or_b64 exec, exec, s[12:13]                              // 000000003108: 87FE0C7E
	s_andn2_b64 s[8:9], s[8:9], exec                           // 00000000310C: 89887E08
	s_and_b64 s[12:13], s[14:15], exec                         // 000000003110: 868C7E0E
	s_or_b64 s[8:9], s[8:9], s[12:13]                          // 000000003114: 87880C08

0000000000003118 <BB2_36>:
	s_or_b64 exec, exec, s[10:11]                              // 000000003118: 87FE0A7E
	s_and_b64 s[8:9], s[8:9], exec                             // 00000000311C: 86887E08

0000000000003120 <BB2_37>:
	s_or_saveexec_b64 s[6:7], s[6:7]                           // 000000003120: BE862106
	s_xor_b64 exec, exec, s[6:7]                               // 000000003124: 88FE067E
	s_cbranch_execz BB2_47                                     // 000000003128: BF88002E
	v_cmp_lt_i16_e32 vcc, 44, v7                               // 00000000312C: 7D420EAC
	s_mov_b64 s[10:11], s[8:9]                                 // 000000003130: BE8A0108
	s_and_saveexec_b64 s[0:1], vcc                             // 000000003134: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000003138: 8880007E
	s_cbranch_execz BB2_44                                     // 00000000313C: BF88001C
	v_cmp_eq_u16_e32 vcc, 45, v7                               // 000000003140: 7D540EAD
	s_mov_b64 s[12:13], -1                                     // 000000003144: BE8C01C1
	s_and_saveexec_b64 s[10:11], vcc                           // 000000003148: BE8A206A
	s_cbranch_execz BB2_43                                     // 00000000314C: BF880014
	v_mad_u32_u24 v0, s4, v1, v0                               // 000000003150: D1C30000 04020204
	v_lshlrev_b32_e32 v0, 2, v0                                // 000000003158: 24000082
	v_add_u32_e32 v0, vcc, 0, v0                               // 00000000315C: 32000080
	ds_read_b32 v1, v0 offset:8                                // 000000003160: D86C0008 01000000
	s_waitcnt lgkmcnt(0)                                       // 000000003168: BF8C007F
	v_cmp_gt_i32_e32 vcc, v5, v1                               // 00000000316C: 7D880305
	v_mov_b32_e32 v6, 0                                        // 000000003170: 7E0C0280
	s_and_saveexec_b64 s[12:13], vcc                           // 000000003174: BE8C206A
	s_cbranch_execz BB2_42                                     // 000000003178: BF880007
	s_lshl_b32 s4, s4, 3                                       // 00000000317C: 8E048304
	v_add_u32_e32 v0, vcc, s4, v0                              // 000000003180: 32000004
	ds_read_b32 v0, v0                                         // 000000003184: D86C0000 00000000
	s_waitcnt lgkmcnt(0)                                       // 00000000318C: BF8C007F
	v_cmp_gt_i32_e32 vcc, v5, v0                               // 000000003190: 7D880105
	v_cndmask_b32_e32 v6, 0, v5, vcc                           // 000000003194: 000C0A80

0000000000003198 <BB2_42>:
	s_or_b64 exec, exec, s[12:13]                              // 000000003198: 87FE0C7E
	s_xor_b64 s[12:13], exec, -1                               // 00000000319C: 888CC17E

00000000000031a0 <BB2_43>:
	s_or_b64 exec, exec, s[10:11]                              // 0000000031A0: 87FE0A7E
	s_andn2_b64 s[4:5], s[8:9], exec                           // 0000000031A4: 89847E08
	s_and_b64 s[10:11], s[12:13], exec                         // 0000000031A8: 868A7E0C
	s_or_b64 s[10:11], s[4:5], s[10:11]                        // 0000000031AC: 878A0A04

00000000000031b0 <BB2_44>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 0000000031B0: BE802100
	s_mov_b64 s[4:5], 0                                        // 0000000031B4: BE840180
	s_xor_b64 exec, exec, s[0:1]                               // 0000000031B8: 88FE007E
	s_mov_b64 s[4:5], exec                                     // 0000000031BC: BE84017E
	v_cmp_ne_u16_e32 vcc, 0, v7                                // 0000000031C0: 7D5A0E80
	s_andn2_b64 s[10:11], s[10:11], exec                       // 0000000031C4: 898A7E0A
	s_and_b64 s[12:13], vcc, exec                              // 0000000031C8: 868C7E6A
	s_or_b64 s[10:11], s[10:11], s[12:13]                      // 0000000031CC: 878A0C0A
	s_or_b64 exec, exec, s[0:1]                                // 0000000031D0: 87FE007E
	s_and_b64 s[0:1], s[4:5], exec                             // 0000000031D4: 86807E04
	s_andn2_b64 s[4:5], s[8:9], exec                           // 0000000031D8: 89847E08
	s_and_b64 s[8:9], s[10:11], exec                           // 0000000031DC: 86887E0A
	s_or_b64 s[8:9], s[4:5], s[8:9]                            // 0000000031E0: 87880804

00000000000031e4 <BB2_47>:
	s_or_b64 exec, exec, s[6:7]                                // 0000000031E4: 87FE067E
	s_and_saveexec_b64 s[4:5], s[8:9]                          // 0000000031E8: BE842008
	s_andn2_b64 s[0:1], s[0:1], exec                           // 0000000031EC: 89807E00
	v_mov_b32_e32 v6, v5                                       // 0000000031F0: 7E0C0305
	s_or_b64 exec, exec, s[4:5]                                // 0000000031F4: 87FE047E
	s_and_saveexec_b64 s[4:5], s[0:1]                          // 0000000031F8: BE842000
	s_cbranch_execz BB2_53                                     // 0000000031FC: BF88000D
	ds_read_b32 v0, v4 offset:8                                // 000000003200: D86C0008 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000003208: BF8C007F
	v_cmp_gt_i32_e32 vcc, v5, v0                               // 00000000320C: 7D880105
	v_mov_b32_e32 v6, 0                                        // 000000003210: 7E0C0280
	s_and_saveexec_b64 s[0:1], vcc                             // 000000003214: BE80206A
	s_cbranch_execz BB2_52                                     // 000000003218: BF880005
	ds_read_b32 v0, v4                                         // 00000000321C: D86C0000 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000003224: BF8C007F
	v_cmp_gt_i32_e32 vcc, v5, v0                               // 000000003228: 7D880105
	v_cndmask_b32_e32 v6, 0, v5, vcc                           // 00000000322C: 000C0A80

0000000000003230 <BB2_52>:
	s_or_b64 exec, exec, s[0:1]                                // 000000003230: 87FE007E

0000000000003234 <BB2_53>:
	s_or_b64 exec, exec, s[4:5]                                // 000000003234: 87FE047E
	v_mov_b32_e32 v1, s3                                       // 000000003238: 7E020203
	v_add_u32_e32 v0, vcc, s2, v2                              // 00000000323C: 32000402
	v_addc_u32_e32 v1, vcc, v1, v3, vcc                        // 000000003240: 38020701
	flat_store_byte v[0:1], v6                                 // 000000003244: DC600000 00000600
	s_endpgm                                                   // 00000000324C: BF810000
	s_nop 0                                                    // 000000003250: BF800000
	s_nop 0                                                    // 000000003254: BF800000
	s_nop 0                                                    // 000000003258: BF800000
	s_nop 0                                                    // 00000000325C: BF800000
	s_nop 0                                                    // 000000003260: BF800000
	s_nop 0                                                    // 000000003264: BF800000
	s_nop 0                                                    // 000000003268: BF800000
	s_nop 0                                                    // 00000000326C: BF800000
	s_nop 0                                                    // 000000003270: BF800000
	s_nop 0                                                    // 000000003274: BF800000
	s_nop 0                                                    // 000000003278: BF800000
	s_nop 0                                                    // 00000000327C: BF800000
	s_nop 0                                                    // 000000003280: BF800000
	s_nop 0                                                    // 000000003284: BF800000
	s_nop 0                                                    // 000000003288: BF800000
	s_nop 0                                                    // 00000000328C: BF800000
	s_nop 0                                                    // 000000003290: BF800000
	s_nop 0                                                    // 000000003294: BF800000
	s_nop 0                                                    // 000000003298: BF800000
	s_nop 0                                                    // 00000000329C: BF800000
	s_nop 0                                                    // 0000000032A0: BF800000
	s_nop 0                                                    // 0000000032A4: BF800000
	s_nop 0                                                    // 0000000032A8: BF800000
	s_nop 0                                                    // 0000000032AC: BF800000
	s_nop 0                                                    // 0000000032B0: BF800000
	s_nop 0                                                    // 0000000032B4: BF800000
	s_nop 0                                                    // 0000000032B8: BF800000
	s_nop 0                                                    // 0000000032BC: BF800000
	s_nop 0                                                    // 0000000032C0: BF800000
	s_nop 0                                                    // 0000000032C4: BF800000
	s_nop 0                                                    // 0000000032C8: BF800000
	s_nop 0                                                    // 0000000032CC: BF800000
	s_nop 0                                                    // 0000000032D0: BF800000
	s_nop 0                                                    // 0000000032D4: BF800000
	s_nop 0                                                    // 0000000032D8: BF800000
	s_nop 0                                                    // 0000000032DC: BF800000
	s_nop 0                                                    // 0000000032E0: BF800000
	s_nop 0                                                    // 0000000032E4: BF800000
	s_nop 0                                                    // 0000000032E8: BF800000
	s_nop 0                                                    // 0000000032EC: BF800000
	s_nop 0                                                    // 0000000032F0: BF800000
	s_nop 0                                                    // 0000000032F4: BF800000
	s_nop 0                                                    // 0000000032F8: BF800000
	s_nop 0                                                    // 0000000032FC: BF800000

0000000000003300 <_Z11hyst_kernelPhS_ii$local>:
	s_load_dwordx4 s[0:3], s[6:7], 0x0                         // 000000003300: C00A0003 00000000
	s_load_dword s6, s[6:7], 0x14                              // 000000003308: C0020183 00000014
	s_load_dword s4, s[4:5], 0x4                               // 000000003310: C0020102 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000003318: BF8C007F
	s_lshr_b32 s5, s4, 16                                      // 00000000331C: 8F059004
	s_mul_i32 s9, s9, s5                                       // 000000003320: 92090509
	v_add_u32_e32 v1, vcc, s9, v1                              // 000000003324: 32020209
	v_add_u32_e32 v1, vcc, 1, v1                               // 000000003328: 32020281
	s_and_b32 s4, s4, 0xffff                                   // 00000000332C: 8604FF04 0000FFFF
	s_mul_i32 s8, s8, s4                                       // 000000003334: 92080408
	v_mul_lo_u32 v1, v1, s6                                    // 000000003338: D2850001 00000D01
	v_add_u32_e32 v0, vcc, s8, v0                              // 000000003340: 32000008
	v_add_u32_e32 v0, vcc, v0, v1                              // 000000003344: 32000300
	v_add_u32_e32 v0, vcc, 1, v0                               // 000000003348: 32000081
	v_ashrrev_i32_e32 v1, 31, v0                               // 00000000334C: 2202009F
	v_mov_b32_e32 v3, s1                                       // 000000003350: 7E060201
	v_add_u32_e32 v2, vcc, s0, v0                              // 000000003354: 32040000
	v_addc_u32_e32 v3, vcc, v3, v1, vcc                        // 000000003358: 38060303
	flat_load_ubyte v2, v[2:3]                                 // 00000000335C: DC400000 02000002
	s_movk_i32 s0, 0x46                                        // 000000003364: B0000046
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003368: BF8C0070
	v_cmp_gt_u16_e32 vcc, s0, v2                               // 00000000336C: 7D580400
	s_and_saveexec_b64 s[0:1], vcc                             // 000000003370: BE80206A
	s_xor_b64 s[4:5], exec, s[0:1]                             // 000000003374: 8884007E
	s_cbranch_execz BB3_10                                     // 000000003378: BF880022
	v_cmp_lt_u16_e32 vcc, 10, v2                               // 00000000337C: 7D52048A
	s_and_saveexec_b64 s[0:1], vcc                             // 000000003380: BE80206A
	s_xor_b64 s[6:7], exec, s[0:1]                             // 000000003384: 8886007E
	s_cbranch_execz BB3_7                                      // 000000003388: BF880014
	v_cmp_gt_u16_e32 vcc, 40, v2                               // 00000000338C: 7D5804A8
	v_mov_b32_e32 v3, s3                                       // 000000003390: 7E060203
	v_add_u32_e64 v2, s[0:1], s2, v0                           // 000000003394: D1190002 00020002
	v_addc_u32_e64 v3, s[0:1], v3, v1, s[0:1]                  // 00000000339C: D11C0003 00020303
	s_and_saveexec_b64 s[0:1], vcc                             // 0000000033A4: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 0000000033A8: 8880007E
	s_cbranch_execz BB3_4                                      // 0000000033AC: BF880003
	v_mov_b32_e32 v4, 0                                        // 0000000033B0: 7E080280
	flat_store_byte v[2:3], v4                                 // 0000000033B4: DC600000 00000402

00000000000033bc <BB3_4>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 0000000033BC: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 0000000033C0: 88FE007E
	s_cbranch_execz BB3_6                                      // 0000000033C4: BF880004
	v_mov_b32_e32 v4, 0xff                                     // 0000000033C8: 7E0802FF 000000FF
	flat_store_byte v[2:3], v4                                 // 0000000033D0: DC600000 00000402

00000000000033d8 <BB3_6>:
	s_or_b64 exec, exec, s[0:1]                                // 0000000033D8: 87FE007E

00000000000033dc <BB3_7>:
	s_or_saveexec_b64 s[0:1], s[6:7]                           // 0000000033DC: BE802106
	s_xor_b64 exec, exec, s[0:1]                               // 0000000033E0: 88FE007E
	s_cbranch_execz BB3_9                                      // 0000000033E4: BF880006
	v_mov_b32_e32 v3, s3                                       // 0000000033E8: 7E060203
	v_add_u32_e32 v2, vcc, s2, v0                              // 0000000033EC: 32040002
	v_addc_u32_e32 v3, vcc, v3, v1, vcc                        // 0000000033F0: 38060303
	v_mov_b32_e32 v4, 0                                        // 0000000033F4: 7E080280
	flat_store_byte v[2:3], v4                                 // 0000000033F8: DC600000 00000402

0000000000003400 <BB3_9>:
	s_or_b64 exec, exec, s[0:1]                                // 000000003400: 87FE007E

0000000000003404 <BB3_10>:
	s_or_saveexec_b64 s[0:1], s[4:5]                           // 000000003404: BE802104
	s_xor_b64 exec, exec, s[0:1]                               // 000000003408: 88FE007E
	s_cbranch_execz BB3_12                                     // 00000000340C: BF880007
	v_mov_b32_e32 v2, s3                                       // 000000003410: 7E040203
	v_add_u32_e32 v0, vcc, s2, v0                              // 000000003414: 32000002
	v_addc_u32_e32 v1, vcc, v2, v1, vcc                        // 000000003418: 38020302
	v_mov_b32_e32 v2, 0xff                                     // 00000000341C: 7E0402FF 000000FF
	flat_store_byte v[0:1], v2                                 // 000000003424: DC600000 00000200

000000000000342c <BB3_12>:
	s_endpgm                                                   // 00000000342C: BF810000
