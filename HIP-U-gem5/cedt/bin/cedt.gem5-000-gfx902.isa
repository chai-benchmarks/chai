
CEDT/bin/cedt.gem5-000-gfx902.hsaco:	file format elf64-amdgpu


Disassembly of section .text:

0000000000002000 <_Z15gaussian_kernelPhS_ii$local>:
	s_load_dword s10, s[6:7], 0x14                             // 000000002000: C0020283 00000014
	s_load_dword s11, s[4:5], 0x4                              // 000000002008: C00202C2 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000002010: BF8CC07F
	s_lshr_b32 s0, s11, 16                                     // 000000002014: 8F00900B
	s_mul_i32 s9, s9, s0                                       // 000000002018: 92090009
	v_add_u32_e32 v8, 1, v1                                    // 00000000201C: 68100281
	v_add_u32_e32 v2, s9, v8                                   // 000000002020: 68041009
	v_mul_lo_u32 v2, v2, s10                                   // 000000002024: D2850002 00001502
	s_load_dwordx4 s[0:3], s[6:7], 0x0                         // 00000000202C: C00A0003 00000000
	s_and_b32 s4, s11, 0xffff                                  // 000000002034: 8604FF0B 0000FFFF
	s_mul_i32 s8, s8, s4                                       // 00000000203C: 92080408
	v_add3_u32 v4, s8, v0, v2                                  // 000000002040: D1FF0004 040A0008
	v_ashrrev_i32_e32 v2, 31, v4                               // 000000002048: 2204089F
	s_waitcnt lgkmcnt(0)                                       // 00000000204C: BF8CC07F
	v_mov_b32_e32 v3, s1                                       // 000000002050: 7E060201
	v_add_co_u32_e32 v5, vcc, s0, v4                           // 000000002054: 320A0800
	v_addc_co_u32_e32 v6, vcc, v3, v2, vcc                     // 000000002058: 380C0503
	global_load_ubyte v9, v[5:6], off offset:1                 // 00000000205C: DC408001 097F0005
	v_add_u32_e32 v6, 1, v0                                    // 000000002064: 680C0081
	s_add_i32 s5, s4, 2                                        // 000000002068: 81058204
	v_mul_u32_u24_e32 v5, s5, v8                               // 00000000206C: 100A1005
	v_mad_u32_u24 v3, s5, v8, v0                               // 000000002070: D1C30003 04021005
	v_lshl_add_u32 v10, v3, 2, 0                               // 000000002078: D1FD000A 02010503
	v_add_u32_e32 v7, 1, v4                                    // 000000002080: 680E0881
	v_mov_b32_e32 v3, v4                                       // 000000002084: 7E060304
	s_waitcnt vmcnt(0)                                         // 000000002088: BF8C0F70
	ds_write_b32 v10, v9 offset:4                              // 00000000208C: D81A0004 0000090A
	v_cmp_ne_u32_e32 vcc, 0, v1                                // 000000002094: 7D9A0280
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002098: BE86206A
	s_xor_b64 s[6:7], exec, s[6:7]                             // 00000000209C: 8886067E
	s_cbranch_execz BB0_9                                      // 0000000020A0: BF880034
	v_cmp_eq_u32_e32 vcc, s4, v8                               // 0000000020A4: 7D941004
	s_and_saveexec_b64 s[8:9], vcc                             // 0000000020A8: BE88206A
	s_cbranch_execz BB0_8                                      // 0000000020AC: BF880030
	v_add_u32_e32 v8, s10, v7                                  // 0000000020B0: 68100E0A
	v_ashrrev_i32_e32 v10, 31, v8                              // 0000000020B4: 2214109F
	v_mov_b32_e32 v11, s1                                      // 0000000020B8: 7E160201
	v_add_co_u32_e32 v9, vcc, s0, v8                           // 0000000020BC: 32121000
	v_addc_co_u32_e32 v10, vcc, v11, v10, vcc                  // 0000000020C0: 3814150B
	global_load_ubyte v11, v[9:10], off                        // 0000000020C4: DC408000 0B7F0009
	s_add_i32 s11, s4, 1                                       // 0000000020CC: 810B8104
	v_mov_b32_e32 v12, s5                                      // 0000000020D0: 7E180205
	v_mul_u32_u24_e32 v8, s11, v12                             // 0000000020D4: 1010180B
	v_mad_u32_u24 v12, s11, v12, v0                            // 0000000020D8: D1C3000C 0402180B
	v_lshl_add_u32 v12, v12, 2, 0                              // 0000000020E0: D1FD000C 0201050C
	s_waitcnt vmcnt(0)                                         // 0000000020E8: BF8C0F70
	ds_write_b32 v12, v11 offset:4                             // 0000000020EC: D81A0004 00000B0C
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 0000000020F4: 7D9A0080
	s_and_saveexec_b64 s[12:13], vcc                           // 0000000020F8: BE8C206A
	s_xor_b64 s[12:13], exec, s[12:13]                         // 0000000020FC: 888C0C7E
	s_cbranch_execz BB0_6                                      // 000000002100: BF88000C
	v_cmp_eq_u32_e32 vcc, s4, v6                               // 000000002104: 7D940C04
	s_and_saveexec_b64 s[14:15], vcc                           // 000000002108: BE8E206A
	s_cbranch_execz BB0_5                                      // 00000000210C: BF880008
	v_add_u32_e32 v11, s4, v8                                  // 000000002110: 68161004
	v_lshlrev_b32_e32 v11, 2, v11                              // 000000002114: 24161682
	v_add_u32_e32 v11, 0, v11                                  // 000000002118: 68161680
	global_load_ubyte v9, v[9:10], off offset:1                // 00000000211C: DC408001 097F0009
	s_waitcnt vmcnt(0)                                         // 000000002124: BF8C0F70
	ds_write_b32 v11, v9 offset:4                              // 000000002128: D81A0004 0000090B

0000000000002130 <BB0_5>:
	s_or_b64 exec, exec, s[14:15]                              // 000000002130: 87FE0E7E

0000000000002134 <BB0_6>:
	s_or_saveexec_b64 s[12:13], s[12:13]                       // 000000002134: BE8C210C
	s_xor_b64 exec, exec, s[12:13]                             // 000000002138: 88FE0C7E
	s_cbranch_execz BB0_8                                      // 00000000213C: BF88000C
	v_add_u32_e32 v9, s10, v4                                  // 000000002140: 6812080A
	v_ashrrev_i32_e32 v10, 31, v9                              // 000000002144: 2214129F
	v_mov_b32_e32 v11, s1                                      // 000000002148: 7E160201
	v_add_co_u32_e32 v9, vcc, s0, v9                           // 00000000214C: 32121200
	v_addc_co_u32_e32 v10, vcc, v11, v10, vcc                  // 000000002150: 3814150B
	global_load_ubyte v9, v[9:10], off                         // 000000002154: DC408000 097F0009
	v_lshlrev_b32_e32 v8, 2, v8                                // 00000000215C: 24101082
	v_add_u32_e32 v8, 0, v8                                    // 000000002160: 68101080
	s_waitcnt vmcnt(0)                                         // 000000002164: BF8C0F70
	ds_write_b32 v8, v9                                        // 000000002168: D81A0000 00000908

0000000000002170 <BB0_8>:
	s_or_b64 exec, exec, s[8:9]                                // 000000002170: 87FE087E

0000000000002174 <BB0_9>:
	s_or_saveexec_b64 s[6:7], s[6:7]                           // 000000002174: BE862106
	s_xor_b64 exec, exec, s[6:7]                               // 000000002178: 88FE067E
	s_cbranch_execz BB0_17                                     // 00000000217C: BF880026
	v_subrev_u32_e32 v7, s10, v7                               // 000000002180: 6C0E0E0A
	v_ashrrev_i32_e32 v8, 31, v7                               // 000000002184: 22100E9F
	v_mov_b32_e32 v9, s1                                       // 000000002188: 7E120201
	v_add_co_u32_e32 v7, vcc, s0, v7                           // 00000000218C: 320E0E00
	v_addc_co_u32_e32 v8, vcc, v9, v8, vcc                     // 000000002190: 38101109
	global_load_ubyte v9, v[7:8], off                          // 000000002194: DC408000 097F0007
	v_lshl_add_u32 v10, v0, 2, 0                               // 00000000219C: D1FD000A 02010500
	s_waitcnt vmcnt(0)                                         // 0000000021A4: BF8C0F70
	ds_write_b32 v10, v9 offset:4                              // 0000000021A8: D81A0004 0000090A
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 0000000021B0: 7D9A0080
	s_and_saveexec_b64 s[8:9], vcc                             // 0000000021B4: BE88206A
	s_xor_b64 s[8:9], exec, s[8:9]                             // 0000000021B8: 8888087E
	s_cbranch_execz BB0_14                                     // 0000000021BC: BF88000C
	v_cmp_eq_u32_e32 vcc, s4, v6                               // 0000000021C0: 7D940C04
	s_and_saveexec_b64 s[10:11], vcc                           // 0000000021C4: BE8A206A
	s_cbranch_execz BB0_13                                     // 0000000021C8: BF880008
	s_lshl_b32 s12, s4, 2                                      // 0000000021CC: 8E0C8204
	s_add_i32 s12, s12, 0                                      // 0000000021D0: 810C800C
	global_load_ubyte v9, v[7:8], off offset:1                 // 0000000021D4: DC408001 097F0007
	v_mov_b32_e32 v10, s12                                     // 0000000021DC: 7E14020C
	s_waitcnt vmcnt(0)                                         // 0000000021E0: BF8C0F70
	ds_write_b32 v10, v9 offset:4                              // 0000000021E4: D81A0004 0000090A

00000000000021ec <BB0_13>:
	s_or_b64 exec, exec, s[10:11]                              // 0000000021EC: 87FE0A7E

00000000000021f0 <BB0_14>:
	s_or_saveexec_b64 s[8:9], s[8:9]                           // 0000000021F0: BE882108
	s_xor_b64 exec, exec, s[8:9]                               // 0000000021F4: 88FE087E
	s_cbranch_execz BB0_16                                     // 0000000021F8: BF880006
	global_load_ubyte v7, v[7:8], off offset:-1                // 0000000021FC: DC409FFF 077F0007
	v_mov_b32_e32 v8, 0                                        // 000000002204: 7E100280
	s_waitcnt vmcnt(0)                                         // 000000002208: BF8C0F70
	ds_write_b32 v8, v7                                        // 00000000220C: D81A0000 00000708

0000000000002214 <BB0_16>:
	s_or_b64 exec, exec, s[8:9]                                // 000000002214: 87FE087E

0000000000002218 <BB0_17>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002218: 87FE067E
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 00000000221C: 7D9A0080
	s_mov_b64 s[8:9], -1                                       // 000000002220: BE8801C1
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002224: BE86206A
	s_cbranch_execz BB0_21                                     // 000000002228: BF880009
	v_cmp_eq_u32_e32 vcc, s4, v6                               // 00000000222C: 7D940C04
	s_mov_b64 s[8:9], 0                                        // 000000002230: BE880180
	s_and_saveexec_b64 s[10:11], vcc                           // 000000002234: BE8A206A
	s_mov_b64 s[8:9], exec                                     // 000000002238: BE88017E
	v_add_u32_e32 v4, 2, v4                                    // 00000000223C: 68080882
	v_add3_u32 v5, s4, v5, 1                                   // 000000002240: D1FF0005 02060A04
	s_or_b64 exec, exec, s[10:11]                              // 000000002248: 87FE0A7E
	s_orn2_b64 s[8:9], s[8:9], exec                            // 00000000224C: 8A887E08

0000000000002250 <BB0_21>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002250: 87FE067E
	s_and_saveexec_b64 s[6:7], s[8:9]                          // 000000002254: BE862008
	s_cbranch_execz BB0_23                                     // 000000002258: BF88000B
	v_ashrrev_i32_e32 v7, 31, v4                               // 00000000225C: 220E089F
	v_mov_b32_e32 v8, s1                                       // 000000002260: 7E100201
	v_add_co_u32_e32 v6, vcc, s0, v4                           // 000000002264: 320C0800
	v_addc_co_u32_e32 v7, vcc, v8, v7, vcc                     // 000000002268: 380E0F08
	global_load_ubyte v4, v[6:7], off                          // 00000000226C: DC408000 047F0006
	v_lshl_add_u32 v5, v5, 2, 0                                // 000000002274: D1FD0005 02010505
	s_waitcnt vmcnt(0)                                         // 00000000227C: BF8C0F70
	ds_write_b32 v5, v4                                        // 000000002280: D81A0000 00000405

0000000000002288 <BB0_23>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002288: 87FE067E
	s_waitcnt lgkmcnt(0)                                       // 00000000228C: BF8CC07F
	s_barrier                                                  // 000000002290: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002294: BF8CC07F
	v_mad_u32_u24 v0, v1, s5, v0                               // 000000002298: D1C30000 04000B01
	v_lshl_add_u32 v0, v0, 2, 0                                // 0000000022A0: D1FD0000 02010500
	s_mov_b32 s0, 0                                            // 0000000022A8: BE800080
	v_mov_b32_e32 v1, 0                                        // 0000000022AC: 7E020280
	s_lshl_b32 s1, s4, 2                                       // 0000000022B0: 8E018204
	s_add_u32 s1, s1, 8                                        // 0000000022B4: 80018801
	s_addc_u32 s4, 0, 0                                        // 0000000022B8: 82048080
	s_getpc_b64 s[6:7]                                         // 0000000022BC: BE861C00
	s_add_u32 s6, s6, 0x2d40                                   // 0000000022C0: 8006FF06 00002D40
	s_addc_u32 s7, s7, 0                                       // 0000000022C8: 8207FF07 00000000
	v_mov_b32_e32 v4, v1                                       // 0000000022D0: 7E080301

00000000000022d4 <BB0_24>:
	s_mov_b64 s[8:9], 0                                        // 0000000022D4: BE880180

00000000000022d8 <BB0_25>:
	v_add_u32_e32 v5, s8, v0                                   // 0000000022D8: 680A0008
	ds_read_b32 v5, v5                                         // 0000000022DC: D86C0000 05000005
	s_add_u32 s10, s6, s8                                      // 0000000022E4: 800A0806
	v_cvt_f32_i32_e32 v4, v4                                   // 0000000022E8: 7E080B04
	s_addc_u32 s11, s7, s9                                     // 0000000022EC: 820B0907
	s_load_dword s5, s[10:11], 0x0                             // 0000000022F0: C0020145 00000000
	s_waitcnt lgkmcnt(0)                                       // 0000000022F8: BF8CC07F
	v_cvt_f32_i32_e32 v5, v5                                   // 0000000022FC: 7E0A0B05
	s_add_u32 s8, s8, 4                                        // 000000002300: 80088408
	v_fma_f32 v4, s5, v5, v4                                   // 000000002304: D1CB0004 04120A05
	v_cvt_i32_f32_e32 v4, v4                                   // 00000000230C: 7E081104
	s_addc_u32 s9, s9, 0                                       // 000000002310: 82098009
	s_cmp_eq_u32 s8, 12                                        // 000000002314: BF068C08
	s_cbranch_scc0 BB0_25                                      // 000000002318: BF84FFEF
	s_add_i32 s0, s0, 1                                        // 00000000231C: 81008100
	s_add_u32 s6, s6, 12                                       // 000000002320: 80068C06
	s_addc_u32 s7, s7, 0                                       // 000000002324: 82078007
	v_mov_b32_e32 v5, s4                                       // 000000002328: 7E0A0204
	s_cmp_eq_u32 s0, 3                                         // 00000000232C: BF068300
	v_add_co_u32_e32 v0, vcc, s1, v0                           // 000000002330: 32000001
	v_addc_co_u32_e32 v1, vcc, v1, v5, vcc                     // 000000002334: 38020B01
	s_cbranch_scc0 BB0_24                                      // 000000002338: BF84FFE6
	v_mov_b32_e32 v0, 0xff                                     // 00000000233C: 7E0002FF 000000FF
	v_med3_i32 v4, v4, 0, v0                                   // 000000002344: D1D70004 04010104
	v_mov_b32_e32 v1, s3                                       // 00000000234C: 7E020203
	v_add_co_u32_e32 v0, vcc, s2, v3                           // 000000002350: 32000602
	v_addc_co_u32_e32 v1, vcc, v1, v2, vcc                     // 000000002354: 38020501
	global_store_byte v[0:1], v4, off offset:1                 // 000000002358: DC608001 007F0400
	s_endpgm                                                   // 000000002360: BF810000
	s_nop 0                                                    // 000000002364: BF800000
	s_nop 0                                                    // 000000002368: BF800000
	s_nop 0                                                    // 00000000236C: BF800000
	s_nop 0                                                    // 000000002370: BF800000
	s_nop 0                                                    // 000000002374: BF800000
	s_nop 0                                                    // 000000002378: BF800000
	s_nop 0                                                    // 00000000237C: BF800000
	s_nop 0                                                    // 000000002380: BF800000
	s_nop 0                                                    // 000000002384: BF800000
	s_nop 0                                                    // 000000002388: BF800000
	s_nop 0                                                    // 00000000238C: BF800000
	s_nop 0                                                    // 000000002390: BF800000
	s_nop 0                                                    // 000000002394: BF800000
	s_nop 0                                                    // 000000002398: BF800000
	s_nop 0                                                    // 00000000239C: BF800000
	s_nop 0                                                    // 0000000023A0: BF800000
	s_nop 0                                                    // 0000000023A4: BF800000
	s_nop 0                                                    // 0000000023A8: BF800000
	s_nop 0                                                    // 0000000023AC: BF800000
	s_nop 0                                                    // 0000000023B0: BF800000
	s_nop 0                                                    // 0000000023B4: BF800000
	s_nop 0                                                    // 0000000023B8: BF800000
	s_nop 0                                                    // 0000000023BC: BF800000
	s_nop 0                                                    // 0000000023C0: BF800000
	s_nop 0                                                    // 0000000023C4: BF800000
	s_nop 0                                                    // 0000000023C8: BF800000
	s_nop 0                                                    // 0000000023CC: BF800000
	s_nop 0                                                    // 0000000023D0: BF800000
	s_nop 0                                                    // 0000000023D4: BF800000
	s_nop 0                                                    // 0000000023D8: BF800000
	s_nop 0                                                    // 0000000023DC: BF800000
	s_nop 0                                                    // 0000000023E0: BF800000
	s_nop 0                                                    // 0000000023E4: BF800000
	s_nop 0                                                    // 0000000023E8: BF800000
	s_nop 0                                                    // 0000000023EC: BF800000
	s_nop 0                                                    // 0000000023F0: BF800000
	s_nop 0                                                    // 0000000023F4: BF800000
	s_nop 0                                                    // 0000000023F8: BF800000
	s_nop 0                                                    // 0000000023FC: BF800000

0000000000002400 <_Z12sobel_kernelPhS_S_ii$local>:
	s_load_dword s10, s[6:7], 0x1c                             // 000000002400: C0020283 0000001C
	s_load_dword s11, s[4:5], 0x4                              // 000000002408: C00202C2 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000002410: BF8CC07F
	s_lshr_b32 s0, s11, 16                                     // 000000002414: 8F00900B
	s_mul_i32 s9, s9, s0                                       // 000000002418: 92090009
	v_add_u32_e32 v8, 1, v1                                    // 00000000241C: 68100281
	v_add_u32_e32 v2, s9, v8                                   // 000000002420: 68041009
	v_mul_lo_u32 v2, v2, s10                                   // 000000002424: D2850002 00001502
	s_load_dwordx4 s[0:3], s[6:7], 0x0                         // 00000000242C: C00A0003 00000000
	s_and_b32 s9, s11, 0xffff                                  // 000000002434: 8609FF0B 0000FFFF
	s_mul_i32 s8, s8, s9                                       // 00000000243C: 92080908
	v_add3_u32 v4, s8, v0, v2                                  // 000000002440: D1FF0004 040A0008
	v_ashrrev_i32_e32 v2, 31, v4                               // 000000002448: 2204089F
	s_waitcnt lgkmcnt(0)                                       // 00000000244C: BF8CC07F
	v_mov_b32_e32 v3, s1                                       // 000000002450: 7E060201
	v_add_co_u32_e32 v5, vcc, s0, v4                           // 000000002454: 320A0800
	v_addc_co_u32_e32 v6, vcc, v3, v2, vcc                     // 000000002458: 380C0503
	global_load_ubyte v9, v[5:6], off offset:1                 // 00000000245C: DC408001 097F0005
	v_add_u32_e32 v6, 1, v0                                    // 000000002464: 680C0081
	s_add_i32 s8, s9, 2                                        // 000000002468: 81088209
	v_mul_u32_u24_e32 v5, s8, v8                               // 00000000246C: 100A1008
	v_mad_u32_u24 v3, s8, v8, v0                               // 000000002470: D1C30003 04021008
	v_lshl_add_u32 v10, v3, 2, 0                               // 000000002478: D1FD000A 02010503
	v_add_u32_e32 v7, 1, v4                                    // 000000002480: 680E0881
	v_mov_b32_e32 v3, v4                                       // 000000002484: 7E060304
	s_waitcnt vmcnt(0)                                         // 000000002488: BF8C0F70
	ds_write_b32 v10, v9 offset:4                              // 00000000248C: D81A0004 0000090A
	v_cmp_ne_u32_e32 vcc, 0, v1                                // 000000002494: 7D9A0280
	s_and_saveexec_b64 s[4:5], vcc                             // 000000002498: BE84206A
	s_xor_b64 s[4:5], exec, s[4:5]                             // 00000000249C: 8884047E
	s_cbranch_execz BB1_9                                      // 0000000024A0: BF880034
	v_cmp_eq_u32_e32 vcc, s9, v8                               // 0000000024A4: 7D941009
	s_and_saveexec_b64 s[12:13], vcc                           // 0000000024A8: BE8C206A
	s_cbranch_execz BB1_8                                      // 0000000024AC: BF880030
	v_add_u32_e32 v8, s10, v7                                  // 0000000024B0: 68100E0A
	v_ashrrev_i32_e32 v10, 31, v8                              // 0000000024B4: 2214109F
	v_mov_b32_e32 v11, s1                                      // 0000000024B8: 7E160201
	v_add_co_u32_e32 v9, vcc, s0, v8                           // 0000000024BC: 32121000
	v_addc_co_u32_e32 v10, vcc, v11, v10, vcc                  // 0000000024C0: 3814150B
	global_load_ubyte v11, v[9:10], off                        // 0000000024C4: DC408000 0B7F0009
	s_add_i32 s11, s9, 1                                       // 0000000024CC: 810B8109
	v_mov_b32_e32 v12, s8                                      // 0000000024D0: 7E180208
	v_mul_u32_u24_e32 v8, s11, v12                             // 0000000024D4: 1010180B
	v_mad_u32_u24 v12, s11, v12, v0                            // 0000000024D8: D1C3000C 0402180B
	v_lshl_add_u32 v12, v12, 2, 0                              // 0000000024E0: D1FD000C 0201050C
	s_waitcnt vmcnt(0)                                         // 0000000024E8: BF8C0F70
	ds_write_b32 v12, v11 offset:4                             // 0000000024EC: D81A0004 00000B0C
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 0000000024F4: 7D9A0080
	s_and_saveexec_b64 s[14:15], vcc                           // 0000000024F8: BE8E206A
	s_xor_b64 s[14:15], exec, s[14:15]                         // 0000000024FC: 888E0E7E
	s_cbranch_execz BB1_6                                      // 000000002500: BF88000C
	v_cmp_eq_u32_e32 vcc, s9, v6                               // 000000002504: 7D940C09
	s_and_saveexec_b64 s[16:17], vcc                           // 000000002508: BE90206A
	s_cbranch_execz BB1_5                                      // 00000000250C: BF880008
	v_add_u32_e32 v11, s9, v8                                  // 000000002510: 68161009
	v_lshlrev_b32_e32 v11, 2, v11                              // 000000002514: 24161682
	v_add_u32_e32 v11, 0, v11                                  // 000000002518: 68161680
	global_load_ubyte v9, v[9:10], off offset:1                // 00000000251C: DC408001 097F0009
	s_waitcnt vmcnt(0)                                         // 000000002524: BF8C0F70
	ds_write_b32 v11, v9 offset:4                              // 000000002528: D81A0004 0000090B

0000000000002530 <BB1_5>:
	s_or_b64 exec, exec, s[16:17]                              // 000000002530: 87FE107E

0000000000002534 <BB1_6>:
	s_or_saveexec_b64 s[14:15], s[14:15]                       // 000000002534: BE8E210E
	s_xor_b64 exec, exec, s[14:15]                             // 000000002538: 88FE0E7E
	s_cbranch_execz BB1_8                                      // 00000000253C: BF88000C
	v_add_u32_e32 v9, s10, v4                                  // 000000002540: 6812080A
	v_ashrrev_i32_e32 v10, 31, v9                              // 000000002544: 2214129F
	v_mov_b32_e32 v11, s1                                      // 000000002548: 7E160201
	v_add_co_u32_e32 v9, vcc, s0, v9                           // 00000000254C: 32121200
	v_addc_co_u32_e32 v10, vcc, v11, v10, vcc                  // 000000002550: 3814150B
	global_load_ubyte v9, v[9:10], off                         // 000000002554: DC408000 097F0009
	v_lshlrev_b32_e32 v8, 2, v8                                // 00000000255C: 24101082
	v_add_u32_e32 v8, 0, v8                                    // 000000002560: 68101080
	s_waitcnt vmcnt(0)                                         // 000000002564: BF8C0F70
	ds_write_b32 v8, v9                                        // 000000002568: D81A0000 00000908

0000000000002570 <BB1_8>:
	s_or_b64 exec, exec, s[12:13]                              // 000000002570: 87FE0C7E

0000000000002574 <BB1_9>:
	s_or_saveexec_b64 s[12:13], s[4:5]                         // 000000002574: BE8C2104
	s_load_dwordx4 s[4:7], s[6:7], 0x10                        // 000000002578: C00A0103 00000010
	s_xor_b64 exec, exec, s[12:13]                             // 000000002580: 88FE0C7E
	s_cbranch_execz BB1_17                                     // 000000002584: BF880027
	v_subrev_u32_e32 v7, s10, v7                               // 000000002588: 6C0E0E0A
	v_ashrrev_i32_e32 v8, 31, v7                               // 00000000258C: 22100E9F
	v_mov_b32_e32 v9, s1                                       // 000000002590: 7E120201
	v_add_co_u32_e32 v7, vcc, s0, v7                           // 000000002594: 320E0E00
	v_addc_co_u32_e32 v8, vcc, v9, v8, vcc                     // 000000002598: 38101109
	global_load_ubyte v9, v[7:8], off                          // 00000000259C: DC408000 097F0007
	v_lshl_add_u32 v10, v0, 2, 0                               // 0000000025A4: D1FD000A 02010500
	s_waitcnt vmcnt(0)                                         // 0000000025AC: BF8C0F70
	ds_write_b32 v10, v9 offset:4                              // 0000000025B0: D81A0004 0000090A
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 0000000025B8: 7D9A0080
	s_waitcnt lgkmcnt(0)                                       // 0000000025BC: BF8CC07F
	s_and_saveexec_b64 s[6:7], vcc                             // 0000000025C0: BE86206A
	s_xor_b64 s[6:7], exec, s[6:7]                             // 0000000025C4: 8886067E
	s_cbranch_execz BB1_14                                     // 0000000025C8: BF88000C
	v_cmp_eq_u32_e32 vcc, s9, v6                               // 0000000025CC: 7D940C09
	s_and_saveexec_b64 s[10:11], vcc                           // 0000000025D0: BE8A206A
	s_cbranch_execz BB1_13                                     // 0000000025D4: BF880008
	s_lshl_b32 s14, s9, 2                                      // 0000000025D8: 8E0E8209
	s_add_i32 s14, s14, 0                                      // 0000000025DC: 810E800E
	global_load_ubyte v9, v[7:8], off offset:1                 // 0000000025E0: DC408001 097F0007
	v_mov_b32_e32 v10, s14                                     // 0000000025E8: 7E14020E
	s_waitcnt vmcnt(0)                                         // 0000000025EC: BF8C0F70
	ds_write_b32 v10, v9 offset:4                              // 0000000025F0: D81A0004 0000090A

00000000000025f8 <BB1_13>:
	s_or_b64 exec, exec, s[10:11]                              // 0000000025F8: 87FE0A7E

00000000000025fc <BB1_14>:
	s_or_saveexec_b64 s[6:7], s[6:7]                           // 0000000025FC: BE862106
	s_xor_b64 exec, exec, s[6:7]                               // 000000002600: 88FE067E
	s_cbranch_execz BB1_16                                     // 000000002604: BF880006
	global_load_ubyte v7, v[7:8], off offset:-1                // 000000002608: DC409FFF 077F0007
	v_mov_b32_e32 v8, 0                                        // 000000002610: 7E100280
	s_waitcnt vmcnt(0)                                         // 000000002614: BF8C0F70
	ds_write_b32 v8, v7                                        // 000000002618: D81A0000 00000708

0000000000002620 <BB1_16>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002620: 87FE067E

0000000000002624 <BB1_17>:
	s_or_b64 exec, exec, s[12:13]                              // 000000002624: 87FE0C7E
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 000000002628: 7D9A0080
	s_mov_b64 s[10:11], -1                                     // 00000000262C: BE8A01C1
	s_waitcnt lgkmcnt(0)                                       // 000000002630: BF8CC07F
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002634: BE86206A
	s_cbranch_execz BB1_21                                     // 000000002638: BF880009
	v_cmp_eq_u32_e32 vcc, s9, v6                               // 00000000263C: 7D940C09
	s_mov_b64 s[10:11], 0                                      // 000000002640: BE8A0180
	s_and_saveexec_b64 s[12:13], vcc                           // 000000002644: BE8C206A
	s_mov_b64 s[10:11], exec                                   // 000000002648: BE8A017E
	v_add_u32_e32 v4, 2, v4                                    // 00000000264C: 68080882
	v_add3_u32 v5, s9, v5, 1                                   // 000000002650: D1FF0005 02060A09
	s_or_b64 exec, exec, s[12:13]                              // 000000002658: 87FE0C7E
	s_orn2_b64 s[10:11], s[10:11], exec                        // 00000000265C: 8A8A7E0A

0000000000002660 <BB1_21>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002660: 87FE067E
	s_and_saveexec_b64 s[6:7], s[10:11]                        // 000000002664: BE86200A
	s_cbranch_execz BB1_23                                     // 000000002668: BF88000B
	v_ashrrev_i32_e32 v7, 31, v4                               // 00000000266C: 220E089F
	v_mov_b32_e32 v8, s1                                       // 000000002670: 7E100201
	v_add_co_u32_e32 v6, vcc, s0, v4                           // 000000002674: 320C0800
	v_addc_co_u32_e32 v7, vcc, v8, v7, vcc                     // 000000002678: 380E0F08
	global_load_ubyte v4, v[6:7], off                          // 00000000267C: DC408000 047F0006
	v_lshl_add_u32 v5, v5, 2, 0                                // 000000002684: D1FD0005 02010505
	s_waitcnt vmcnt(0)                                         // 00000000268C: BF8C0F70
	ds_write_b32 v5, v4                                        // 000000002690: D81A0000 00000405

0000000000002698 <BB1_23>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002698: 87FE067E
	s_waitcnt lgkmcnt(0)                                       // 00000000269C: BF8CC07F
	s_barrier                                                  // 0000000026A0: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000026A4: BF8CC07F
	v_mad_u32_u24 v0, v1, s8, v0                               // 0000000026A8: D1C30000 04001101
	v_lshl_add_u32 v4, v0, 2, 0                                // 0000000026B0: D1FD0004 02010500
	v_mov_b32_e32 v5, 0                                        // 0000000026B8: 7E0A0280
	s_lshl_b32 s0, s9, 2                                       // 0000000026BC: 8E008209
	s_add_u32 s0, s0, 8                                        // 0000000026C0: 80008800
	s_addc_u32 s1, 0, 0                                        // 0000000026C4: 82018080
	s_mov_b32 s6, 0                                            // 0000000026C8: BE860080
	s_getpc_b64 s[8:9]                                         // 0000000026CC: BE881C00
	s_add_u32 s8, s8, 0x2990                                   // 0000000026D0: 8008FF08 00002990
	s_addc_u32 s9, s9, 0                                       // 0000000026D8: 8209FF09 00000000
	s_getpc_b64 s[10:11]                                       // 0000000026E0: BE8A1C00
	s_add_u32 s10, s10, 0x294c                                 // 0000000026E4: 800AFF0A 0000294C
	s_addc_u32 s11, s11, 0                                     // 0000000026EC: 820BFF0B 00000000
	v_mov_b32_e32 v0, v5                                       // 0000000026F4: 7E000305
	v_mov_b32_e32 v1, v5                                       // 0000000026F8: 7E020305

00000000000026fc <BB1_24>:
	s_mov_b64 s[12:13], 0                                      // 0000000026FC: BE8C0180

0000000000002700 <BB1_25>:
	s_add_u32 s14, s10, s12                                    // 000000002700: 800E0C0A
	v_add_u32_e32 v6, s12, v4                                  // 000000002704: 680C080C
	s_addc_u32 s15, s11, s13                                   // 000000002708: 820F0D0B
	ds_read_b32 v6, v6                                         // 00000000270C: D86C0000 06000006
	s_load_dword s7, s[14:15], 0x0                             // 000000002714: C00201C7 00000000
	s_add_u32 s14, s8, s12                                     // 00000000271C: 800E0C08
	s_addc_u32 s15, s9, s13                                    // 000000002720: 820F0D09
	s_load_dword s14, s[14:15], 0x0                            // 000000002724: C0020387 00000000
	s_waitcnt lgkmcnt(0)                                       // 00000000272C: BF8CC07F
	v_mul_lo_u32 v7, v6, s7                                    // 000000002730: D2850007 00000F06
	v_mul_lo_u32 v6, s14, v6                                   // 000000002738: D2850006 00020C0E
	s_add_u32 s12, s12, 4                                      // 000000002740: 800C840C
	v_cvt_f32_i32_e32 v7, v7                                   // 000000002744: 7E0E0B07
	v_cvt_f32_i32_e32 v6, v6                                   // 000000002748: 7E0C0B06
	s_addc_u32 s13, s13, 0                                     // 00000000274C: 820D800D
	s_cmp_eq_u32 s12, 12                                       // 000000002750: BF068C0C
	v_add_f32_e32 v1, v1, v7                                   // 000000002754: 02020F01
	v_add_f32_e32 v0, v0, v6                                   // 000000002758: 02000D00
	s_cbranch_scc0 BB1_25                                      // 00000000275C: BF84FFE8
	s_add_i32 s6, s6, 1                                        // 000000002760: 81068106
	s_add_u32 s8, s8, 12                                       // 000000002764: 80088C08
	s_addc_u32 s9, s9, 0                                       // 000000002768: 82098009
	s_add_u32 s10, s10, 12                                     // 00000000276C: 800A8C0A
	s_addc_u32 s11, s11, 0                                     // 000000002770: 820B800B
	v_mov_b32_e32 v6, s1                                       // 000000002774: 7E0C0201
	s_cmp_eq_u32 s6, 3                                         // 000000002778: BF068306
	v_add_co_u32_e32 v4, vcc, s0, v4                           // 00000000277C: 32080800
	v_addc_co_u32_e32 v5, vcc, v5, v6, vcc                     // 000000002780: 380A0D05
	s_cbranch_scc0 BB1_24                                      // 000000002784: BF84FFDD
	v_max_f32_e64 v4, |v0|, |v0|                               // 000000002788: D10B0304 00020100
	v_max_f32_e64 v5, |v1|, |v1|                               // 000000002790: D10B0305 00020301
	v_max_f32_e32 v6, v5, v4                                   // 000000002798: 160C0905
	v_min_f32_e32 v7, v5, v4                                   // 00000000279C: 140E0905
	v_div_scale_f32 v4, s[0:1], v6, v6, v7                     // 0000000027A0: D1E00004 041E0D06
	v_div_scale_f32 v5, vcc, v7, v6, v7                        // 0000000027A8: D1E06A05 041E0D07
	s_mov_b32 s0, 0x7f800000                                   // 0000000027B0: BE8000FF 7F800000
	v_mov_b32_e32 v8, 0xff                                     // 0000000027B8: 7E1002FF 000000FF
	v_mov_b32_e32 v9, s3                                       // 0000000027C0: 7E120203
	s_mov_b32 s1, 0x3b2d2a58                                   // 0000000027C4: BE8100FF 3B2D2A58
	v_mov_b32_e32 v10, 0xbc7a590c                              // 0000000027CC: 7E1402FF BC7A590C
	s_mov_b32 s3, 0x3d29fb3f                                   // 0000000027D4: BE8300FF 3D29FB3F
	s_mov_b32 s6, 0xbd97d4d7                                   // 0000000027DC: BE8600FF BD97D4D7
	v_frexp_exp_i32_f32_e32 v11, v6                            // 0000000027E4: 7E166706
	v_sub_u32_e32 v12, 0, v11                                  // 0000000027E8: 6A181680
	v_rcp_f32_e32 v13, v4                                      // 0000000027EC: 7E1A4504
	v_ldexp_f32 v14, |v1|, v12                                 // 0000000027F0: D288010E 00021901
	v_ldexp_f32 v12, |v0|, v12                                 // 0000000027F8: D288010C 00021900
	v_mul_f32_e32 v12, v12, v12                                // 000000002800: 0A18190C
	v_fma_f32 v15, -v4, v13, 1.0                               // 000000002804: D1CB000F 23CA1B04
	v_fma_f32 v13, v15, v13, v13                               // 00000000280C: D1CB000D 04361B0F
	v_mul_f32_e32 v15, v5, v13                                 // 000000002814: 0A1E1B05
	v_fma_f32 v16, -v4, v15, v5                                // 000000002818: D1CB0010 24161F04
	v_fma_f32 v15, v16, v13, v15                               // 000000002820: D1CB000F 043E1B10
	v_fma_f32 v4, -v4, v15, v5                                 // 000000002828: D1CB0004 24161F04
	v_div_fmas_f32 v13, v4, v13, v15                           // 000000002830: D1E2000D 043E1B04
	v_fma_f32 v4, v14, v14, v12                                // 000000002838: D1CB0004 04321D0E
	v_sqrt_f32_e32 v4, v4                                      // 000000002840: 7E084F04
	s_mov_b32 s7, 0x3dd931b2                                   // 000000002844: BE8700FF 3DD931B2
	s_mov_b32 s8, 0xbe1160e6                                   // 00000000284C: BE8800FF BE1160E6
	v_mov_b32_e32 v5, s0                                       // 000000002854: 7E0A0200
	v_ldexp_f32 v4, v4, v11                                    // 000000002858: D2880004 00021704
	v_cmp_neq_f32_e64 vcc, |v6|, s0                            // 000000002860: D04D016A 00000106
	v_cndmask_b32_e32 v4, v5, v4, vcc                          // 000000002868: 00080905
	v_cvt_i32_f32_e32 v11, v4                                  // 00000000286C: 7E161104
	v_add_co_u32_e32 v4, vcc, s2, v3                           // 000000002870: 32080602
	v_addc_co_u32_e32 v5, vcc, v9, v2, vcc                     // 000000002874: 380A0509
	v_med3_i32 v8, v11, 0, v8                                  // 000000002878: D1D70008 0421010B
	global_store_byte v[4:5], v8, off offset:1                 // 000000002880: DC608001 007F0804
	v_div_fixup_f32 v4, v13, v6, v7                            // 000000002888: D1DE0004 041E0D0D
	v_mul_f32_e32 v5, v4, v4                                   // 000000002890: 0A0A0904
	v_fma_f32 v6, v5, s1, v10                                  // 000000002894: D1CB0006 04280305
	v_fma_f32 v6, v5, v6, s3                                   // 00000000289C: D1CB0006 000E0D05
	v_fma_f32 v6, v5, v6, s6                                   // 0000000028A4: D1CB0006 001A0D05
	v_fma_f32 v6, v5, v6, s7                                   // 0000000028AC: D1CB0006 001E0D05
	v_fma_f32 v6, v5, v6, s8                                   // 0000000028B4: D1CB0006 00220D05
	s_mov_b32 s0, 0x3e4cb8bf                                   // 0000000028BC: BE8000FF 3E4CB8BF
	v_fma_f32 v6, v5, v6, s0                                   // 0000000028C4: D1CB0006 00020D05
	s_mov_b32 s0, 0xbeaaaa62                                   // 0000000028CC: BE8000FF BEAAAA62
	v_fma_f32 v6, v5, v6, s0                                   // 0000000028D4: D1CB0006 00020D05
	v_mul_f32_e32 v5, v5, v6                                   // 0000000028DC: 0A0A0D05
	v_fma_f32 v4, v4, v5, v4                                   // 0000000028E0: D1CB0004 04120B04
	v_sub_f32_e32 v5, 0x3fc90fdb, v4                           // 0000000028E8: 040A08FF 3FC90FDB
	v_cmp_gt_f32_e64 vcc, |v0|, |v1|                           // 0000000028F0: D044036A 00020300
	v_cndmask_b32_e32 v4, v4, v5, vcc                          // 0000000028F8: 00080B04
	s_mov_b32 s0, 0x40490fdb                                   // 0000000028FC: BE8000FF 40490FDB
	v_sub_f32_e32 v5, s0, v4                                   // 000000002904: 040A0800
	v_cmp_gt_f32_e32 vcc, 0, v1                                // 000000002908: 7C880280
	v_cndmask_b32_e32 v4, v4, v5, vcc                          // 00000000290C: 00080B04
	v_mov_b32_e32 v5, s0                                       // 000000002910: 7E0A0200
	v_cmp_gt_i32_e64 s[0:1], 0, v1                             // 000000002914: D0C40000 00020280
	v_cndmask_b32_e64 v5, 0, v5, s[0:1]                        // 00000000291C: D1000005 00020A80
	v_cmp_eq_f32_e64 s[0:1], 0, v0                             // 000000002924: D0420000 00020080
	v_cndmask_b32_e64 v4, v4, v5, s[0:1]                       // 00000000292C: D1000004 00020B04
	v_mov_b32_e32 v5, 0x3f490fdb                               // 000000002934: 7E0A02FF 3F490FDB
	v_mov_b32_e32 v6, 0x4016cbe4                               // 00000000293C: 7E0C02FF 4016CBE4
	v_cndmask_b32_e32 v5, v5, v6, vcc                          // 000000002944: 000A0D05
	s_movk_i32 s2, 0x204                                       // 000000002948: B0020204
	v_cmp_class_f32_e64 s[0:1], v1, s2                         // 00000000294C: D0100000 00000501
	v_cmp_class_f32_e64 s[2:3], v0, s2                         // 000000002954: D0100002 00000500
	s_and_b64 vcc, s[0:1], s[2:3]                              // 00000000295C: 86EA0200
	v_cndmask_b32_e32 v4, v4, v5, vcc                          // 000000002960: 00080B04
	v_mov_b32_e32 v5, 0x7fc00000                               // 000000002964: 7E0A02FF 7FC00000
	v_cmp_o_f32_e32 vcc, v1, v0                                // 00000000296C: 7C8E0101
	v_cndmask_b32_e32 v1, v5, v4, vcc                          // 000000002970: 00020905
	s_brev_b32 s3, -2                                          // 000000002974: BE8308C2
	v_bfi_b32 v0, s3, v1, v0                                   // 000000002978: D1CA0000 04020203
	v_cmp_gt_f32_e32 vcc, 0, v0                                // 000000002980: 7C880080
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002984: BE80206A
	s_cbranch_execz BB1_37                                     // 000000002988: BF880049
	s_mov_b32 s2, 0x40c90fdb                                   // 00000000298C: BE8200FF 40C90FDB
	v_add_f32_e32 v0, s2, v0                                   // 000000002994: 02000002
	v_and_b32_e32 v4, s3, v0                                   // 000000002998: 26080003
	v_cmp_ngt_f32_e64 s[6:7], |v0|, s2                         // 00000000299C: D04B0106 00000500
	s_and_saveexec_b64 s[8:9], s[6:7]                          // 0000000029A4: BE882006
	s_xor_b64 s[6:7], exec, s[8:9]                             // 0000000029A8: 8886087E
	s_brev_b32 s3, -2                                          // 0000000029AC: BE8308C2
	v_bfi_b32 v1, s3, 0, v0                                    // 0000000029B0: D1CA0001 04010003
	v_cmp_eq_f32_e32 vcc, s2, v4                               // 0000000029B8: 7C840802
	v_cndmask_b32_e32 v1, v0, v1, vcc                          // 0000000029BC: 00020300
	s_or_saveexec_b64 s[2:3], s[6:7]                           // 0000000029C0: BE822106
	s_xor_b64 exec, exec, s[2:3]                               // 0000000029C4: 88FE027E
	s_cbranch_execz BB1_36                                     // 0000000029C8: BF880032
	v_frexp_exp_i32_f32_e32 v5, v4                             // 0000000029CC: 7E0A6704
	v_frexp_mant_f32_e32 v1, v4                                // 0000000029D0: 7E026904
	v_ldexp_f32 v1, v1, 12                                     // 0000000029D4: D2880001 00011901
	v_add_u32_e32 v4, -3, v5                                   // 0000000029DC: 68080AC3
	v_cmp_lt_i32_e32 vcc, 12, v4                               // 0000000029E0: 7D82088C
	s_and_saveexec_b64 s[6:7], vcc                             // 0000000029E4: BE86206A
	s_cbranch_execz BB1_35                                     // 0000000029E8: BF880016
	v_add_u32_e32 v4, 9, v5                                    // 0000000029EC: 68080A89
	s_mov_b64 s[8:9], 0                                        // 0000000029F0: BE880180
	s_mov_b32 s10, 0xbfc90fdb                                  // 0000000029F4: BE8A00FF BFC90FDB

00000000000029fc <BB1_33>:
	v_mul_f32_e32 v5, 0x3f22f983, v1                           // 0000000029FC: 0A0A02FF 3F22F983
	v_rndne_f32_e32 v5, v5                                     // 000000002A04: 7E0A3D05
	v_fma_f32 v1, v5, s10, v1                                  // 000000002A08: D1CB0001 04041505
	v_add_f32_e32 v5, 0x3fc90fdb, v1                           // 000000002A10: 020A02FF 3FC90FDB
	v_cmp_gt_f32_e32 vcc, 0, v1                                // 000000002A18: 7C880280
	v_cndmask_b32_e32 v1, v1, v5, vcc                          // 000000002A1C: 00020B01
	v_add_u32_e32 v4, -12, v4                                  // 000000002A20: 680808CC
	v_cmp_gt_i32_e32 vcc, 25, v4                               // 000000002A24: 7D880899
	s_or_b64 s[8:9], vcc, s[8:9]                               // 000000002A28: 8788086A
	v_ldexp_f32 v1, v1, 12                                     // 000000002A2C: D2880001 00011901
	s_andn2_b64 exec, exec, s[8:9]                             // 000000002A34: 89FE087E
	s_cbranch_execnz BB1_33                                    // 000000002A38: BF89FFF0
	s_or_b64 exec, exec, s[8:9]                                // 000000002A3C: 87FE087E
	v_add_u32_e32 v4, -12, v4                                  // 000000002A40: 680808CC

0000000000002a44 <BB1_35>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002A44: 87FE067E
	v_add_u32_e32 v4, -11, v4                                  // 000000002A48: 680808CB
	v_ldexp_f32 v1, v1, v4                                     // 000000002A4C: D2880001 00020901
	v_mul_f32_e32 v4, 0x3f22f983, v1                           // 000000002A54: 0A0802FF 3F22F983
	v_rndne_f32_e32 v4, v4                                     // 000000002A5C: 7E083D04
	s_mov_b32 s6, 0xbfc90fdb                                   // 000000002A60: BE8600FF BFC90FDB
	v_fma_f32 v1, v4, s6, v1                                   // 000000002A68: D1CB0001 04040D04
	v_add_f32_e32 v4, 0x3fc90fdb, v1                           // 000000002A70: 020802FF 3FC90FDB
	v_cmp_gt_f32_e32 vcc, 0, v1                                // 000000002A78: 7C880280
	v_cndmask_b32_e32 v1, v1, v4, vcc                          // 000000002A7C: 00020901
	v_ldexp_f32 v1, v1, 2                                      // 000000002A80: D2880001 00010501
	v_and_b32_e32 v4, 0x80000000, v0                           // 000000002A88: 260800FF 80000000
	v_xor_b32_e32 v1, v4, v1                                   // 000000002A90: 2A020304

0000000000002a94 <BB1_36>:
	s_or_b64 exec, exec, s[2:3]                                // 000000002A94: 87FE027E
	s_movk_i32 s2, 0x1f8                                       // 000000002A98: B00201F8
	v_mov_b32_e32 v4, 0x7fc00000                               // 000000002A9C: 7E0802FF 7FC00000
	v_cmp_class_f32_e64 vcc, v0, s2                            // 000000002AA4: D010006A 00000500
	v_cndmask_b32_e32 v0, v4, v1, vcc                          // 000000002AAC: 00000304

0000000000002ab0 <BB1_37>:
	s_or_b64 exec, exec, s[0:1]                                // 000000002AB0: 87FE007E
	s_mov_b32 s0, 0x3ec90fdb                                   // 000000002AB4: BE8000FF 3EC90FDB
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002ABC: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002AC0: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002AC4: 8880007E
	s_cbranch_execz BB1_39                                     // 000000002AC8: BF880006
	v_mov_b32_e32 v1, s5                                       // 000000002ACC: 7E020205
	v_add_co_u32_e32 v4, vcc, s4, v3                           // 000000002AD0: 32080604
	v_addc_co_u32_e32 v5, vcc, v1, v2, vcc                     // 000000002AD4: 380A0501
	v_mov_b32_e32 v1, 0                                        // 000000002AD8: 7E020280
	global_store_byte v[4:5], v1, off offset:1                 // 000000002ADC: DC608001 007F0104

0000000000002ae4 <BB1_39>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002AE4: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002AE8: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002AEC: BF880072
	s_mov_b32 s0, 0x3f96cbe4                                   // 000000002AF0: BE8000FF 3F96CBE4
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002AF8: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002AFC: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002B00: 8880007E
	s_cbranch_execz BB1_42                                     // 000000002B04: BF880006
	v_mov_b32_e32 v1, s5                                       // 000000002B08: 7E020205
	v_add_co_u32_e32 v4, vcc, s4, v3                           // 000000002B0C: 32080604
	v_addc_co_u32_e32 v5, vcc, v1, v2, vcc                     // 000000002B10: 380A0501
	v_mov_b32_e32 v1, 45                                       // 000000002B14: 7E0202AD
	global_store_byte v[4:5], v1, off offset:1                 // 000000002B18: DC608001 007F0104

0000000000002b20 <BB1_42>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002B20: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002B24: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002B28: BF880063
	s_mov_b32 s0, 0x3ffb53d2                                   // 000000002B2C: BE8000FF 3FFB53D2
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002B34: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002B38: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002B3C: 8880007E
	s_cbranch_execz BB1_45                                     // 000000002B40: BF880007
	v_mov_b32_e32 v1, s5                                       // 000000002B44: 7E020205
	v_add_co_u32_e32 v4, vcc, s4, v3                           // 000000002B48: 32080604
	v_addc_co_u32_e32 v5, vcc, v1, v2, vcc                     // 000000002B4C: 380A0501
	v_mov_b32_e32 v1, 0x5a                                     // 000000002B50: 7E0202FF 0000005A
	global_store_byte v[4:5], v1, off offset:1                 // 000000002B58: DC608001 007F0104

0000000000002b60 <BB1_45>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002B60: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002B64: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002B68: BF880053
	s_mov_b32 s0, 0x402fede0                                   // 000000002B6C: BE8000FF 402FEDE0
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002B74: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002B78: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002B7C: 8880007E
	s_cbranch_execz BB1_48                                     // 000000002B80: BF880007
	v_mov_b32_e32 v1, s5                                       // 000000002B84: 7E020205
	v_add_co_u32_e32 v4, vcc, s4, v3                           // 000000002B88: 32080604
	v_addc_co_u32_e32 v5, vcc, v1, v2, vcc                     // 000000002B8C: 380A0501
	v_mov_b32_e32 v1, 0x87                                     // 000000002B90: 7E0202FF 00000087
	global_store_byte v[4:5], v1, off offset:1                 // 000000002B98: DC608001 007F0104

0000000000002ba0 <BB1_48>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002BA0: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002BA4: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002BA8: BF880043
	s_mov_b32 s0, 0x406231d6                                   // 000000002BAC: BE8000FF 406231D6
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002BB4: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002BB8: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002BBC: 8880007E
	s_cbranch_execz BB1_51                                     // 000000002BC0: BF880006
	v_mov_b32_e32 v1, s5                                       // 000000002BC4: 7E020205
	v_add_co_u32_e32 v4, vcc, s4, v3                           // 000000002BC8: 32080604
	v_addc_co_u32_e32 v5, vcc, v1, v2, vcc                     // 000000002BCC: 380A0501
	v_mov_b32_e32 v1, 0                                        // 000000002BD0: 7E020280
	global_store_byte v[4:5], v1, off offset:1                 // 000000002BD4: DC608001 007F0104

0000000000002bdc <BB1_51>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002BDC: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002BE0: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002BE4: BF880034
	s_mov_b32 s0, 0x408a3ae7                                   // 000000002BE8: BE8000FF 408A3AE7
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002BF0: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002BF4: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002BF8: 8880007E
	s_cbranch_execz BB1_54                                     // 000000002BFC: BF880006
	v_mov_b32_e32 v1, s5                                       // 000000002C00: 7E020205
	v_add_co_u32_e32 v4, vcc, s4, v3                           // 000000002C04: 32080604
	v_addc_co_u32_e32 v5, vcc, v1, v2, vcc                     // 000000002C08: 380A0501
	v_mov_b32_e32 v1, 45                                       // 000000002C0C: 7E0202AD
	global_store_byte v[4:5], v1, off offset:1                 // 000000002C10: DC608001 007F0104

0000000000002c18 <BB1_54>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002C18: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002C1C: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002C20: BF880025
	s_mov_b32 s0, 0x40a35ce2                                   // 000000002C24: BE8000FF 40A35CE2
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002C2C: 7C8C0000
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002C30: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002C34: 8880007E
	s_cbranch_execz BB1_57                                     // 000000002C38: BF880007
	v_mov_b32_e32 v1, s5                                       // 000000002C3C: 7E020205
	v_add_co_u32_e32 v4, vcc, s4, v3                           // 000000002C40: 32080604
	v_addc_co_u32_e32 v5, vcc, v1, v2, vcc                     // 000000002C44: 380A0501
	v_mov_b32_e32 v1, 0x5a                                     // 000000002C48: 7E0202FF 0000005A
	global_store_byte v[4:5], v1, off offset:1                 // 000000002C50: DC608001 007F0104

0000000000002c58 <BB1_57>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002C58: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002C5C: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002C60: BF880015
	s_mov_b32 s0, 0x40bc7edd                                   // 000000002C64: BE8000FF 40BC7EDD
	v_cmp_ge_f32_e32 vcc, s0, v0                               // 000000002C6C: 7C8C0000
	v_mov_b32_e32 v1, s5                                       // 000000002C70: 7E020205
	v_add_co_u32_e64 v0, s[0:1], s4, v3                        // 000000002C74: D1190000 00020604
	v_addc_co_u32_e64 v1, s[0:1], v1, v2, s[0:1]               // 000000002C7C: D11C0001 00020501
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002C84: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000002C88: 8880007E
	s_cbranch_execz BB1_60                                     // 000000002C8C: BF880004
	v_mov_b32_e32 v2, 0x87                                     // 000000002C90: 7E0402FF 00000087
	global_store_byte v[0:1], v2, off offset:1                 // 000000002C98: DC608001 007F0200

0000000000002ca0 <BB1_60>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000002CA0: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000002CA4: 88FE007E
	s_cbranch_execz BB1_62                                     // 000000002CA8: BF880003
	v_mov_b32_e32 v2, 0                                        // 000000002CAC: 7E040280
	global_store_byte v[0:1], v2, off offset:1                 // 000000002CB0: DC608001 007F0200

0000000000002cb8 <BB1_62>:
	s_endpgm                                                   // 000000002CB8: BF810000
	s_nop 0                                                    // 000000002CBC: BF800000
	s_nop 0                                                    // 000000002CC0: BF800000
	s_nop 0                                                    // 000000002CC4: BF800000
	s_nop 0                                                    // 000000002CC8: BF800000
	s_nop 0                                                    // 000000002CCC: BF800000
	s_nop 0                                                    // 000000002CD0: BF800000
	s_nop 0                                                    // 000000002CD4: BF800000
	s_nop 0                                                    // 000000002CD8: BF800000
	s_nop 0                                                    // 000000002CDC: BF800000
	s_nop 0                                                    // 000000002CE0: BF800000
	s_nop 0                                                    // 000000002CE4: BF800000
	s_nop 0                                                    // 000000002CE8: BF800000
	s_nop 0                                                    // 000000002CEC: BF800000
	s_nop 0                                                    // 000000002CF0: BF800000
	s_nop 0                                                    // 000000002CF4: BF800000
	s_nop 0                                                    // 000000002CF8: BF800000
	s_nop 0                                                    // 000000002CFC: BF800000

0000000000002d00 <_Z19non_max_supp_kernelPhS_S_ii$local>:
	s_load_dword s12, s[6:7], 0x1c                             // 000000002D00: C0020303 0000001C
	s_load_dword s10, s[4:5], 0x4                              // 000000002D08: C0020282 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000002D10: BF8CC07F
	s_lshr_b32 s0, s10, 16                                     // 000000002D14: 8F00900A
	s_mul_i32 s9, s9, s0                                       // 000000002D18: 92090009
	v_add_u32_e32 v9, 1, v1                                    // 000000002D1C: 68120281
	v_add_u32_e32 v2, s9, v9                                   // 000000002D20: 68041209
	v_mul_lo_u32 v2, v2, s12                                   // 000000002D24: D2850002 00001902
	s_load_dwordx4 s[0:3], s[6:7], 0x0                         // 000000002D2C: C00A0003 00000000
	s_and_b32 s5, s10, 0xffff                                  // 000000002D34: 8605FF0A 0000FFFF
	s_mul_i32 s8, s8, s5                                       // 000000002D3C: 92080508
	v_add3_u32 v5, s8, v0, v2                                  // 000000002D40: D1FF0005 040A0008
	v_ashrrev_i32_e32 v2, 31, v5                               // 000000002D48: 22040A9F
	s_waitcnt lgkmcnt(0)                                       // 000000002D4C: BF8CC07F
	v_mov_b32_e32 v4, s1                                       // 000000002D50: 7E080201
	v_add_co_u32_e32 v3, vcc, s0, v5                           // 000000002D54: 32060A00
	v_addc_co_u32_e32 v4, vcc, v4, v2, vcc                     // 000000002D58: 38080504
	global_load_ubyte v10, v[3:4], off offset:1                // 000000002D5C: DC408001 0A7F0003
	v_add_u32_e32 v7, 1, v0                                    // 000000002D64: 680E0081
	s_add_i32 s4, s5, 2                                        // 000000002D68: 81048205
	v_mul_u32_u24_e32 v6, s4, v9                               // 000000002D6C: 100C1204
	v_mad_u32_u24 v3, s4, v9, v0                               // 000000002D70: D1C30003 04021204
	v_lshl_add_u32 v4, v3, 2, 0                                // 000000002D78: D1FD0004 02010503
	v_add_u32_e32 v8, 1, v5                                    // 000000002D80: 68100A81
	v_mov_b32_e32 v3, v5                                       // 000000002D84: 7E060305
	s_waitcnt vmcnt(0)                                         // 000000002D88: BF8C0F70
	ds_write_b32 v4, v10 offset:4                              // 000000002D8C: D81A0004 00000A04
	v_cmp_ne_u32_e32 vcc, 0, v1                                // 000000002D94: 7D9A0280
	s_and_saveexec_b64 s[8:9], vcc                             // 000000002D98: BE88206A
	s_xor_b64 s[8:9], exec, s[8:9]                             // 000000002D9C: 8888087E
	s_cbranch_execz BB2_9                                      // 000000002DA0: BF880034
	v_cmp_eq_u32_e32 vcc, s5, v9                               // 000000002DA4: 7D941205
	s_and_saveexec_b64 s[10:11], vcc                           // 000000002DA8: BE8A206A
	s_cbranch_execz BB2_8                                      // 000000002DAC: BF880030
	v_add_u32_e32 v9, s12, v8                                  // 000000002DB0: 6812100C
	v_ashrrev_i32_e32 v11, 31, v9                              // 000000002DB4: 2216129F
	v_mov_b32_e32 v12, s1                                      // 000000002DB8: 7E180201
	v_add_co_u32_e32 v10, vcc, s0, v9                          // 000000002DBC: 32141200
	v_addc_co_u32_e32 v11, vcc, v12, v11, vcc                  // 000000002DC0: 3816170C
	global_load_ubyte v12, v[10:11], off                       // 000000002DC4: DC408000 0C7F000A
	s_add_i32 s13, s5, 1                                       // 000000002DCC: 810D8105
	v_mov_b32_e32 v13, s4                                      // 000000002DD0: 7E1A0204
	v_mul_u32_u24_e32 v9, s13, v13                             // 000000002DD4: 10121A0D
	v_mad_u32_u24 v13, s13, v13, v0                            // 000000002DD8: D1C3000D 04021A0D
	v_lshl_add_u32 v13, v13, 2, 0                              // 000000002DE0: D1FD000D 0201050D
	s_waitcnt vmcnt(0)                                         // 000000002DE8: BF8C0F70
	ds_write_b32 v13, v12 offset:4                             // 000000002DEC: D81A0004 00000C0D
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 000000002DF4: 7D9A0080
	s_and_saveexec_b64 s[14:15], vcc                           // 000000002DF8: BE8E206A
	s_xor_b64 s[14:15], exec, s[14:15]                         // 000000002DFC: 888E0E7E
	s_cbranch_execz BB2_6                                      // 000000002E00: BF88000C
	v_cmp_eq_u32_e32 vcc, s5, v7                               // 000000002E04: 7D940E05
	s_and_saveexec_b64 s[16:17], vcc                           // 000000002E08: BE90206A
	s_cbranch_execz BB2_5                                      // 000000002E0C: BF880008
	v_add_u32_e32 v12, s5, v9                                  // 000000002E10: 68181205
	v_lshlrev_b32_e32 v12, 2, v12                              // 000000002E14: 24181882
	v_add_u32_e32 v12, 0, v12                                  // 000000002E18: 68181880
	global_load_ubyte v10, v[10:11], off offset:1              // 000000002E1C: DC408001 0A7F000A
	s_waitcnt vmcnt(0)                                         // 000000002E24: BF8C0F70
	ds_write_b32 v12, v10 offset:4                             // 000000002E28: D81A0004 00000A0C

0000000000002e30 <BB2_5>:
	s_or_b64 exec, exec, s[16:17]                              // 000000002E30: 87FE107E

0000000000002e34 <BB2_6>:
	s_or_saveexec_b64 s[14:15], s[14:15]                       // 000000002E34: BE8E210E
	s_xor_b64 exec, exec, s[14:15]                             // 000000002E38: 88FE0E7E
	s_cbranch_execz BB2_8                                      // 000000002E3C: BF88000C
	v_add_u32_e32 v10, s12, v5                                 // 000000002E40: 68140A0C
	v_ashrrev_i32_e32 v11, 31, v10                             // 000000002E44: 2216149F
	v_mov_b32_e32 v12, s1                                      // 000000002E48: 7E180201
	v_add_co_u32_e32 v10, vcc, s0, v10                         // 000000002E4C: 32141400
	v_addc_co_u32_e32 v11, vcc, v12, v11, vcc                  // 000000002E50: 3816170C
	global_load_ubyte v10, v[10:11], off                       // 000000002E54: DC408000 0A7F000A
	v_lshlrev_b32_e32 v9, 2, v9                                // 000000002E5C: 24121282
	v_add_u32_e32 v9, 0, v9                                    // 000000002E60: 68121280
	s_waitcnt vmcnt(0)                                         // 000000002E64: BF8C0F70
	ds_write_b32 v9, v10                                       // 000000002E68: D81A0000 00000A09

0000000000002e70 <BB2_8>:
	s_or_b64 exec, exec, s[10:11]                              // 000000002E70: 87FE0A7E

0000000000002e74 <BB2_9>:
	s_or_saveexec_b64 s[14:15], s[8:9]                         // 000000002E74: BE8E2108
	s_load_dwordx4 s[8:11], s[6:7], 0x10                       // 000000002E78: C00A0203 00000010
	s_xor_b64 exec, exec, s[14:15]                             // 000000002E80: 88FE0E7E
	s_cbranch_execz BB2_17                                     // 000000002E84: BF880027
	v_subrev_u32_e32 v8, s12, v8                               // 000000002E88: 6C10100C
	v_ashrrev_i32_e32 v9, 31, v8                               // 000000002E8C: 2212109F
	v_mov_b32_e32 v10, s1                                      // 000000002E90: 7E140201
	v_add_co_u32_e32 v8, vcc, s0, v8                           // 000000002E94: 32101000
	v_addc_co_u32_e32 v9, vcc, v10, v9, vcc                    // 000000002E98: 3812130A
	global_load_ubyte v10, v[8:9], off                         // 000000002E9C: DC408000 0A7F0008
	v_lshl_add_u32 v11, v0, 2, 0                               // 000000002EA4: D1FD000B 02010500
	s_waitcnt vmcnt(0)                                         // 000000002EAC: BF8C0F70
	ds_write_b32 v11, v10 offset:4                             // 000000002EB0: D81A0004 00000A0B
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 000000002EB8: 7D9A0080
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002EBC: BE86206A
	s_xor_b64 s[6:7], exec, s[6:7]                             // 000000002EC0: 8886067E
	s_cbranch_execz BB2_14                                     // 000000002EC4: BF88000D
	v_cmp_eq_u32_e32 vcc, s5, v7                               // 000000002EC8: 7D940E05
	s_waitcnt lgkmcnt(0)                                       // 000000002ECC: BF8CC07F
	s_and_saveexec_b64 s[10:11], vcc                           // 000000002ED0: BE8A206A
	s_cbranch_execz BB2_13                                     // 000000002ED4: BF880008
	s_lshl_b32 s12, s5, 2                                      // 000000002ED8: 8E0C8205
	s_add_i32 s12, s12, 0                                      // 000000002EDC: 810C800C
	global_load_ubyte v10, v[8:9], off offset:1                // 000000002EE0: DC408001 0A7F0008
	v_mov_b32_e32 v11, s12                                     // 000000002EE8: 7E16020C
	s_waitcnt vmcnt(0)                                         // 000000002EEC: BF8C0F70
	ds_write_b32 v11, v10 offset:4                             // 000000002EF0: D81A0004 00000A0B

0000000000002ef8 <BB2_13>:
	s_or_b64 exec, exec, s[10:11]                              // 000000002EF8: 87FE0A7E

0000000000002efc <BB2_14>:
	s_or_saveexec_b64 s[6:7], s[6:7]                           // 000000002EFC: BE862106
	s_xor_b64 exec, exec, s[6:7]                               // 000000002F00: 88FE067E
	s_cbranch_execz BB2_16                                     // 000000002F04: BF880006
	global_load_ubyte v8, v[8:9], off offset:-1                // 000000002F08: DC409FFF 087F0008
	v_mov_b32_e32 v9, 0                                        // 000000002F10: 7E120280
	s_waitcnt vmcnt(0)                                         // 000000002F14: BF8C0F70
	ds_write_b32 v9, v8                                        // 000000002F18: D81A0000 00000809

0000000000002f20 <BB2_16>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002F20: 87FE067E

0000000000002f24 <BB2_17>:
	s_or_b64 exec, exec, s[14:15]                              // 000000002F24: 87FE0E7E
	v_cmp_ne_u32_e32 vcc, 0, v0                                // 000000002F28: 7D9A0080
	s_waitcnt lgkmcnt(0)                                       // 000000002F2C: BF8CC07F
	s_mov_b64 s[10:11], -1                                     // 000000002F30: BE8A01C1
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002F34: BE86206A
	s_cbranch_execz BB2_21                                     // 000000002F38: BF880009
	v_cmp_eq_u32_e32 vcc, s5, v7                               // 000000002F3C: 7D940E05
	s_mov_b64 s[10:11], 0                                      // 000000002F40: BE8A0180
	s_and_saveexec_b64 s[12:13], vcc                           // 000000002F44: BE8C206A
	s_mov_b64 s[10:11], exec                                   // 000000002F48: BE8A017E
	v_add_u32_e32 v5, 2, v5                                    // 000000002F4C: 680A0A82
	v_add3_u32 v6, s5, v6, 1                                   // 000000002F50: D1FF0006 02060C05
	s_or_b64 exec, exec, s[12:13]                              // 000000002F58: 87FE0C7E
	s_orn2_b64 s[10:11], s[10:11], exec                        // 000000002F5C: 8A8A7E0A

0000000000002f60 <BB2_21>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002F60: 87FE067E
	s_and_saveexec_b64 s[6:7], s[10:11]                        // 000000002F64: BE86200A
	s_cbranch_execz BB2_23                                     // 000000002F68: BF88000B
	v_ashrrev_i32_e32 v8, 31, v5                               // 000000002F6C: 22100A9F
	v_mov_b32_e32 v9, s1                                       // 000000002F70: 7E120201
	v_add_co_u32_e32 v7, vcc, s0, v5                           // 000000002F74: 320E0A00
	v_addc_co_u32_e32 v8, vcc, v9, v8, vcc                     // 000000002F78: 38101109
	global_load_ubyte v5, v[7:8], off                          // 000000002F7C: DC408000 057F0007
	v_lshl_add_u32 v6, v6, 2, 0                                // 000000002F84: D1FD0006 02010506
	s_waitcnt vmcnt(0)                                         // 000000002F8C: BF8C0F70
	ds_write_b32 v6, v5                                        // 000000002F90: D81A0000 00000506

0000000000002f98 <BB2_23>:
	s_or_b64 exec, exec, s[6:7]                                // 000000002F98: 87FE067E
	s_waitcnt lgkmcnt(0)                                       // 000000002F9C: BF8CC07F
	s_barrier                                                  // 000000002FA0: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002FA4: BF8CC07F
	ds_read_b32 v5, v4 offset:4                                // 000000002FA8: D86C0004 05000004
	v_mov_b32_e32 v7, s9                                       // 000000002FB0: 7E0E0209
	s_waitcnt lgkmcnt(0)                                       // 000000002FB4: BF8CC07F
	v_and_b32_e32 v5, 0xff, v5                                 // 000000002FB8: 260A0AFF 000000FF
	v_add_co_u32_e32 v6, vcc, s8, v3                           // 000000002FC0: 320C0608
	v_addc_co_u32_e32 v7, vcc, v7, v2, vcc                     // 000000002FC4: 380E0507
	global_load_ubyte v7, v[6:7], off offset:1                 // 000000002FC8: DC408001 077F0006
	s_movk_i32 s0, 0x59                                        // 000000002FD0: B0000059
	s_waitcnt vmcnt(0)                                         // 000000002FD4: BF8C0F70
	v_cmp_lt_i16_e32 vcc, s0, v7                               // 000000002FD8: 7D420E00
	s_mov_b64 s[0:1], 0                                        // 000000002FDC: BE800180
	s_mov_b64 s[8:9], 0                                        // 000000002FE0: BE880180
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002FE4: BE86206A
	s_xor_b64 s[6:7], exec, s[6:7]                             // 000000002FE8: 8886067E
	s_cbranch_execz BB2_37                                     // 000000002FEC: BF880043
	s_movk_i32 s5, 0x86                                        // 000000002FF0: B0050086
	v_cmp_lt_i16_e32 vcc, s5, v7                               // 000000002FF4: 7D420E05
	s_mov_b64 s[8:9], 0                                        // 000000002FF8: BE880180
	s_and_saveexec_b64 s[10:11], vcc                           // 000000002FFC: BE8A206A
	s_xor_b64 s[10:11], exec, s[10:11]                         // 000000003000: 888A0A7E
	s_cbranch_execz BB2_30                                     // 000000003004: BF88001B
	s_movk_i32 s5, 0x87                                        // 000000003008: B0050087
	v_cmp_eq_u16_e32 vcc, s5, v7                               // 00000000300C: 7D540E05
	s_mov_b64 s[12:13], -1                                     // 000000003010: BE8C01C1
	s_and_saveexec_b64 s[8:9], vcc                             // 000000003014: BE88206A
	s_cbranch_execz BB2_29                                     // 000000003018: BF880014
	v_mad_u32_u24 v6, s4, v1, v0                               // 00000000301C: D1C30006 04020204
	v_lshl_add_u32 v8, v6, 2, 0                                // 000000003024: D1FD0008 02010506
	ds_read_b32 v6, v8                                         // 00000000302C: D86C0000 06000008
	s_waitcnt lgkmcnt(0)                                       // 000000003034: BF8CC07F
	v_cmp_gt_i32_e32 vcc, v5, v6                               // 000000003038: 7D880D05
	v_mov_b32_e32 v6, 0                                        // 00000000303C: 7E0C0280
	s_and_saveexec_b64 s[12:13], vcc                           // 000000003040: BE8C206A
	s_cbranch_execz BB2_28                                     // 000000003044: BF880007
	v_lshl_add_u32 v6, s4, 3, v8                               // 000000003048: D1FD0006 04210604
	ds_read_b32 v6, v6 offset:8                                // 000000003050: D86C0008 06000006
	s_waitcnt lgkmcnt(0)                                       // 000000003058: BF8CC07F
	v_cmp_gt_i32_e32 vcc, v5, v6                               // 00000000305C: 7D880D05
	v_cndmask_b32_e32 v6, 0, v5, vcc                           // 000000003060: 000C0A80

0000000000003064 <BB2_28>:
	s_or_b64 exec, exec, s[12:13]                              // 000000003064: 87FE0C7E
	s_xor_b64 s[12:13], exec, -1                               // 000000003068: 888CC17E

000000000000306c <BB2_29>:
	s_or_b64 exec, exec, s[8:9]                                // 00000000306C: 87FE087E
	s_and_b64 s[8:9], s[12:13], exec                           // 000000003070: 86887E0C

0000000000003074 <BB2_30>:
	s_or_saveexec_b64 s[10:11], s[10:11]                       // 000000003074: BE8A210A
	s_xor_b64 exec, exec, s[10:11]                             // 000000003078: 88FE0A7E
	s_cbranch_execz BB2_36                                     // 00000000307C: BF88001D
	s_movk_i32 s5, 0x5a                                        // 000000003080: B005005A
	v_cmp_eq_u16_e32 vcc, s5, v7                               // 000000003084: 7D540E05
	s_mov_b64 s[14:15], -1                                     // 000000003088: BE8E01C1
	s_and_saveexec_b64 s[12:13], vcc                           // 00000000308C: BE8C206A
	s_cbranch_execz BB2_35                                     // 000000003090: BF880014
	v_mad_u32_u24 v6, s4, v1, v0                               // 000000003094: D1C30006 04020204
	v_lshl_add_u32 v8, v6, 2, 0                                // 00000000309C: D1FD0008 02010506
	ds_read_b32 v6, v8 offset:4                                // 0000000030A4: D86C0004 06000008
	s_waitcnt lgkmcnt(0)                                       // 0000000030AC: BF8CC07F
	v_cmp_gt_i32_e32 vcc, v5, v6                               // 0000000030B0: 7D880D05
	v_mov_b32_e32 v6, 0                                        // 0000000030B4: 7E0C0280
	s_and_saveexec_b64 s[14:15], vcc                           // 0000000030B8: BE8E206A
	s_cbranch_execz BB2_34                                     // 0000000030BC: BF880007
	v_lshl_add_u32 v6, s4, 3, v8                               // 0000000030C0: D1FD0006 04210604
	ds_read_b32 v6, v6 offset:4                                // 0000000030C8: D86C0004 06000006
	s_waitcnt lgkmcnt(0)                                       // 0000000030D0: BF8CC07F
	v_cmp_gt_i32_e32 vcc, v5, v6                               // 0000000030D4: 7D880D05
	v_cndmask_b32_e32 v6, 0, v5, vcc                           // 0000000030D8: 000C0A80

00000000000030dc <BB2_34>:
	s_or_b64 exec, exec, s[14:15]                              // 0000000030DC: 87FE0E7E
	s_xor_b64 s[14:15], exec, -1                               // 0000000030E0: 888EC17E

00000000000030e4 <BB2_35>:
	s_or_b64 exec, exec, s[12:13]                              // 0000000030E4: 87FE0C7E
	s_andn2_b64 s[8:9], s[8:9], exec                           // 0000000030E8: 89887E08
	s_and_b64 s[12:13], s[14:15], exec                         // 0000000030EC: 868C7E0E
	s_or_b64 s[8:9], s[8:9], s[12:13]                          // 0000000030F0: 87880C08

00000000000030f4 <BB2_36>:
	s_or_b64 exec, exec, s[10:11]                              // 0000000030F4: 87FE0A7E
	s_and_b64 s[8:9], s[8:9], exec                             // 0000000030F8: 86887E08

00000000000030fc <BB2_37>:
	s_or_saveexec_b64 s[6:7], s[6:7]                           // 0000000030FC: BE862106
	s_xor_b64 exec, exec, s[6:7]                               // 000000003100: 88FE067E
	s_cbranch_execz BB2_47                                     // 000000003104: BF88002E
	v_cmp_lt_i16_e32 vcc, 44, v7                               // 000000003108: 7D420EAC
	s_mov_b64 s[10:11], s[8:9]                                 // 00000000310C: BE8A0108
	s_and_saveexec_b64 s[0:1], vcc                             // 000000003110: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 000000003114: 8880007E
	s_cbranch_execz BB2_44                                     // 000000003118: BF88001C
	v_cmp_eq_u16_e32 vcc, 45, v7                               // 00000000311C: 7D540EAD
	s_mov_b64 s[12:13], -1                                     // 000000003120: BE8C01C1
	s_and_saveexec_b64 s[10:11], vcc                           // 000000003124: BE8A206A
	s_cbranch_execz BB2_43                                     // 000000003128: BF880014
	v_mad_u32_u24 v0, s4, v1, v0                               // 00000000312C: D1C30000 04020204
	v_lshl_add_u32 v0, v0, 2, 0                                // 000000003134: D1FD0000 02010500
	ds_read_b32 v1, v0 offset:8                                // 00000000313C: D86C0008 01000000
	s_waitcnt lgkmcnt(0)                                       // 000000003144: BF8CC07F
	v_cmp_gt_i32_e32 vcc, v5, v1                               // 000000003148: 7D880305
	v_mov_b32_e32 v6, 0                                        // 00000000314C: 7E0C0280
	s_and_saveexec_b64 s[12:13], vcc                           // 000000003150: BE8C206A
	s_cbranch_execz BB2_42                                     // 000000003154: BF880007
	v_lshl_add_u32 v0, s4, 3, v0                               // 000000003158: D1FD0000 04010604
	ds_read_b32 v0, v0                                         // 000000003160: D86C0000 00000000
	s_waitcnt lgkmcnt(0)                                       // 000000003168: BF8CC07F
	v_cmp_gt_i32_e32 vcc, v5, v0                               // 00000000316C: 7D880105
	v_cndmask_b32_e32 v6, 0, v5, vcc                           // 000000003170: 000C0A80

0000000000003174 <BB2_42>:
	s_or_b64 exec, exec, s[12:13]                              // 000000003174: 87FE0C7E
	s_xor_b64 s[12:13], exec, -1                               // 000000003178: 888CC17E

000000000000317c <BB2_43>:
	s_or_b64 exec, exec, s[10:11]                              // 00000000317C: 87FE0A7E
	s_andn2_b64 s[4:5], s[8:9], exec                           // 000000003180: 89847E08
	s_and_b64 s[10:11], s[12:13], exec                         // 000000003184: 868A7E0C
	s_or_b64 s[10:11], s[4:5], s[10:11]                        // 000000003188: 878A0A04

000000000000318c <BB2_44>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 00000000318C: BE802100
	s_mov_b64 s[4:5], 0                                        // 000000003190: BE840180
	s_xor_b64 exec, exec, s[0:1]                               // 000000003194: 88FE007E
	s_mov_b64 s[4:5], exec                                     // 000000003198: BE84017E
	v_cmp_ne_u16_e32 vcc, 0, v7                                // 00000000319C: 7D5A0E80
	s_andn2_b64 s[10:11], s[10:11], exec                       // 0000000031A0: 898A7E0A
	s_and_b64 s[12:13], vcc, exec                              // 0000000031A4: 868C7E6A
	s_or_b64 s[10:11], s[10:11], s[12:13]                      // 0000000031A8: 878A0C0A
	s_or_b64 exec, exec, s[0:1]                                // 0000000031AC: 87FE007E
	s_and_b64 s[0:1], s[4:5], exec                             // 0000000031B0: 86807E04
	s_andn2_b64 s[4:5], s[8:9], exec                           // 0000000031B4: 89847E08
	s_and_b64 s[8:9], s[10:11], exec                           // 0000000031B8: 86887E0A
	s_or_b64 s[8:9], s[4:5], s[8:9]                            // 0000000031BC: 87880804

00000000000031c0 <BB2_47>:
	s_or_b64 exec, exec, s[6:7]                                // 0000000031C0: 87FE067E
	s_and_saveexec_b64 s[4:5], s[8:9]                          // 0000000031C4: BE842008
	s_andn2_b64 s[0:1], s[0:1], exec                           // 0000000031C8: 89807E00
	v_mov_b32_e32 v6, v5                                       // 0000000031CC: 7E0C0305
	s_or_b64 exec, exec, s[4:5]                                // 0000000031D0: 87FE047E
	s_and_saveexec_b64 s[4:5], s[0:1]                          // 0000000031D4: BE842000
	s_cbranch_execz BB2_53                                     // 0000000031D8: BF88000D
	ds_read_b32 v0, v4 offset:8                                // 0000000031DC: D86C0008 00000004
	s_waitcnt lgkmcnt(0)                                       // 0000000031E4: BF8CC07F
	v_cmp_gt_i32_e32 vcc, v5, v0                               // 0000000031E8: 7D880105
	v_mov_b32_e32 v6, 0                                        // 0000000031EC: 7E0C0280
	s_and_saveexec_b64 s[0:1], vcc                             // 0000000031F0: BE80206A
	s_cbranch_execz BB2_52                                     // 0000000031F4: BF880005
	ds_read_b32 v0, v4                                         // 0000000031F8: D86C0000 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000003200: BF8CC07F
	v_cmp_gt_i32_e32 vcc, v5, v0                               // 000000003204: 7D880105
	v_cndmask_b32_e32 v6, 0, v5, vcc                           // 000000003208: 000C0A80

000000000000320c <BB2_52>:
	s_or_b64 exec, exec, s[0:1]                                // 00000000320C: 87FE007E

0000000000003210 <BB2_53>:
	s_or_b64 exec, exec, s[4:5]                                // 000000003210: 87FE047E
	v_mov_b32_e32 v1, s3                                       // 000000003214: 7E020203
	v_add_co_u32_e32 v0, vcc, s2, v3                           // 000000003218: 32000602
	v_addc_co_u32_e32 v1, vcc, v1, v2, vcc                     // 00000000321C: 38020501
	global_store_byte v[0:1], v6, off offset:1                 // 000000003220: DC608001 007F0600
	s_endpgm                                                   // 000000003228: BF810000
	s_nop 0                                                    // 00000000322C: BF800000
	s_nop 0                                                    // 000000003230: BF800000
	s_nop 0                                                    // 000000003234: BF800000
	s_nop 0                                                    // 000000003238: BF800000
	s_nop 0                                                    // 00000000323C: BF800000
	s_nop 0                                                    // 000000003240: BF800000
	s_nop 0                                                    // 000000003244: BF800000
	s_nop 0                                                    // 000000003248: BF800000
	s_nop 0                                                    // 00000000324C: BF800000
	s_nop 0                                                    // 000000003250: BF800000
	s_nop 0                                                    // 000000003254: BF800000
	s_nop 0                                                    // 000000003258: BF800000
	s_nop 0                                                    // 00000000325C: BF800000
	s_nop 0                                                    // 000000003260: BF800000
	s_nop 0                                                    // 000000003264: BF800000
	s_nop 0                                                    // 000000003268: BF800000
	s_nop 0                                                    // 00000000326C: BF800000
	s_nop 0                                                    // 000000003270: BF800000
	s_nop 0                                                    // 000000003274: BF800000
	s_nop 0                                                    // 000000003278: BF800000
	s_nop 0                                                    // 00000000327C: BF800000
	s_nop 0                                                    // 000000003280: BF800000
	s_nop 0                                                    // 000000003284: BF800000
	s_nop 0                                                    // 000000003288: BF800000
	s_nop 0                                                    // 00000000328C: BF800000
	s_nop 0                                                    // 000000003290: BF800000
	s_nop 0                                                    // 000000003294: BF800000
	s_nop 0                                                    // 000000003298: BF800000
	s_nop 0                                                    // 00000000329C: BF800000
	s_nop 0                                                    // 0000000032A0: BF800000
	s_nop 0                                                    // 0000000032A4: BF800000
	s_nop 0                                                    // 0000000032A8: BF800000
	s_nop 0                                                    // 0000000032AC: BF800000
	s_nop 0                                                    // 0000000032B0: BF800000
	s_nop 0                                                    // 0000000032B4: BF800000
	s_nop 0                                                    // 0000000032B8: BF800000
	s_nop 0                                                    // 0000000032BC: BF800000
	s_nop 0                                                    // 0000000032C0: BF800000
	s_nop 0                                                    // 0000000032C4: BF800000
	s_nop 0                                                    // 0000000032C8: BF800000
	s_nop 0                                                    // 0000000032CC: BF800000
	s_nop 0                                                    // 0000000032D0: BF800000
	s_nop 0                                                    // 0000000032D4: BF800000
	s_nop 0                                                    // 0000000032D8: BF800000
	s_nop 0                                                    // 0000000032DC: BF800000
	s_nop 0                                                    // 0000000032E0: BF800000
	s_nop 0                                                    // 0000000032E4: BF800000
	s_nop 0                                                    // 0000000032E8: BF800000
	s_nop 0                                                    // 0000000032EC: BF800000
	s_nop 0                                                    // 0000000032F0: BF800000
	s_nop 0                                                    // 0000000032F4: BF800000
	s_nop 0                                                    // 0000000032F8: BF800000
	s_nop 0                                                    // 0000000032FC: BF800000

0000000000003300 <_Z11hyst_kernelPhS_ii$local>:
	s_load_dwordx4 s[0:3], s[6:7], 0x0                         // 000000003300: C00A0003 00000000
	s_load_dword s10, s[6:7], 0x14                             // 000000003308: C0020283 00000014
	s_load_dword s11, s[4:5], 0x4                              // 000000003310: C00202C2 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000003318: BF8CC07F
	s_lshr_b32 s4, s11, 16                                     // 00000000331C: 8F04900B
	s_mul_i32 s9, s9, s4                                       // 000000003320: 92090409
	v_add3_u32 v1, v1, s9, 1                                   // 000000003324: D1FF0001 02041301
	v_mul_lo_u32 v1, v1, s10                                   // 00000000332C: D2850001 00001501
	s_and_b32 s4, s11, 0xffff                                  // 000000003334: 8604FF0B 0000FFFF
	s_mul_i32 s8, s8, s4                                       // 00000000333C: 92080408
	v_add_u32_e32 v0, s8, v0                                   // 000000003340: 68000008
	v_add3_u32 v0, v0, v1, 1                                   // 000000003344: D1FF0000 02060300
	v_ashrrev_i32_e32 v1, 31, v0                               // 00000000334C: 2202009F
	v_mov_b32_e32 v3, s1                                       // 000000003350: 7E060201
	v_add_co_u32_e32 v2, vcc, s0, v0                           // 000000003354: 32040000
	v_addc_co_u32_e32 v3, vcc, v3, v1, vcc                     // 000000003358: 38060303
	global_load_ubyte v2, v[2:3], off                          // 00000000335C: DC408000 027F0002
	s_movk_i32 s0, 0x46                                        // 000000003364: B0000046
	s_waitcnt vmcnt(0)                                         // 000000003368: BF8C0F70
	v_cmp_gt_u16_e32 vcc, s0, v2                               // 00000000336C: 7D580400
	s_and_saveexec_b64 s[0:1], vcc                             // 000000003370: BE80206A
	s_xor_b64 s[4:5], exec, s[0:1]                             // 000000003374: 8884007E
	s_cbranch_execz BB3_10                                     // 000000003378: BF880022
	v_cmp_lt_u16_e32 vcc, 10, v2                               // 00000000337C: 7D52048A
	s_and_saveexec_b64 s[0:1], vcc                             // 000000003380: BE80206A
	s_xor_b64 s[6:7], exec, s[0:1]                             // 000000003384: 8886007E
	s_cbranch_execz BB3_7                                      // 000000003388: BF880014
	v_cmp_gt_u16_e32 vcc, 40, v2                               // 00000000338C: 7D5804A8
	v_mov_b32_e32 v3, s3                                       // 000000003390: 7E060203
	v_add_co_u32_e64 v2, s[0:1], s2, v0                        // 000000003394: D1190002 00020002
	v_addc_co_u32_e64 v3, s[0:1], v3, v1, s[0:1]               // 00000000339C: D11C0003 00020303
	s_and_saveexec_b64 s[0:1], vcc                             // 0000000033A4: BE80206A
	s_xor_b64 s[0:1], exec, s[0:1]                             // 0000000033A8: 8880007E
	s_cbranch_execz BB3_4                                      // 0000000033AC: BF880003
	v_mov_b32_e32 v4, 0                                        // 0000000033B0: 7E080280
	global_store_byte v[2:3], v4, off                          // 0000000033B4: DC608000 007F0402

00000000000033bc <BB3_4>:
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 0000000033BC: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 0000000033C0: 88FE007E
	s_cbranch_execz BB3_6                                      // 0000000033C4: BF880004
	v_mov_b32_e32 v4, 0xff                                     // 0000000033C8: 7E0802FF 000000FF
	global_store_byte v[2:3], v4, off                          // 0000000033D0: DC608000 007F0402

00000000000033d8 <BB3_6>:
	s_or_b64 exec, exec, s[0:1]                                // 0000000033D8: 87FE007E

00000000000033dc <BB3_7>:
	s_or_saveexec_b64 s[0:1], s[6:7]                           // 0000000033DC: BE802106
	s_xor_b64 exec, exec, s[0:1]                               // 0000000033E0: 88FE007E
	s_cbranch_execz BB3_9                                      // 0000000033E4: BF880006
	v_mov_b32_e32 v3, s3                                       // 0000000033E8: 7E060203
	v_add_co_u32_e32 v2, vcc, s2, v0                           // 0000000033EC: 32040002
	v_addc_co_u32_e32 v3, vcc, v3, v1, vcc                     // 0000000033F0: 38060303
	v_mov_b32_e32 v4, 0                                        // 0000000033F4: 7E080280
	global_store_byte v[2:3], v4, off                          // 0000000033F8: DC608000 007F0402

0000000000003400 <BB3_9>:
	s_or_b64 exec, exec, s[0:1]                                // 000000003400: 87FE007E

0000000000003404 <BB3_10>:
	s_or_saveexec_b64 s[0:1], s[4:5]                           // 000000003404: BE802104
	s_xor_b64 exec, exec, s[0:1]                               // 000000003408: 88FE007E
	s_cbranch_execz BB3_12                                     // 00000000340C: BF880007
	v_mov_b32_e32 v2, s3                                       // 000000003410: 7E040203
	v_add_co_u32_e32 v0, vcc, s2, v0                           // 000000003414: 32000002
	v_addc_co_u32_e32 v1, vcc, v2, v1, vcc                     // 000000003418: 38020302
	v_mov_b32_e32 v2, 0xff                                     // 00000000341C: 7E0402FF 000000FF
	global_store_byte v[0:1], v2, off                          // 000000003424: DC608000 007F0200

000000000000342c <BB3_12>:
	s_endpgm                                                   // 00000000342C: BF810000
